
&НаКлиенте
Процедура СохранитьПрисоедеиненныеФайлы(Команда)
	
	Если ЗначениеЗаполнено(ТипДокумента) Тогда
		
		
	   Если ЗначениеЗаполнено(ДатаК) и ЗначениеЗаполнено(ДатаН) и ЗначениеЗаполнено(Организация) и ЗначениеЗаполнено(КаталогСохраненияФайлов) Тогда
		   
		Сообщить("Начало выгрузки: " + ТекущаяДата());   
	   	массив = Списокфайлов();
	   	
	   	Количество =  массив.Количество();
	   	
	   	Если Количество <>  0 Тогда
	   		
	   		сч = 1;
	   		Для Каждого СТр Из массив Цикл   				
	   			
	   			ПредыдущийАдресФайла = "";
	   			
	   			ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляОткрытия(Стр.ФайлСсылка, 
	   			Стр.ВерсияФайлаСсылка, УникальныйИдентификатор, Неопределено, ПредыдущийАдресФайла);
	   			
	   			
	   			АдресФайла = ДанныеФайла.НавигационнаяСсылкаТекущейВерсии;
	   			
	   			ИмяОткрываемогоФайла  = КаталогСохраненияФайлов + "\" + Строка(Стр.ФайлСсылка)  + "."+ Стр.Расширение;
	   			
	   			ПередаваемыеФайлы = Новый Массив;
	   			Описание = Новый ОписаниеПередаваемогоФайла(ИмяОткрываемогоФайла, АдресФайла);
	   			ПередаваемыеФайлы.Добавить(Описание);
	   			
	   			
	   			Если НЕ ПолучитьФайлы(ПередаваемыеФайлы,, КаталогСохраненияФайлов + "\", Ложь) Тогда
	   				Возврат;
	   			КонецЕсли;
	   			
	   			процент = сч/Количество;
	   			ПроцентЦелый = Цел(процент);
	   			Состояние(, ПроцентЦелый,,БиблиотекаКартинок.ДлительнаяОперация48);
	   			
	   			сч=сч+1; 
	   			
	   			
	   		КонецЦикла;
			
			ПоказатьПредупреждение(,"Выгрузка данных закончена!",,"Внимание!" );
			
	   	Иначе
	   		 ПоказатьПредупреждение(,"Нет данных для выгрузки!",,"Внимание!" );
	   	КонецЕсли;	
	   	Сообщить("Окончание выгрузки: " + ТекущаяДата());
	   Иначе
	   	ПоказатьПредупреждение(,"Заполните обязатлельные параметры, Организация, Начало периода, Конец периода, Католог сохранения",,"Внимание!" );
	   КонецЕсли; 
	   
	Иначе   
		
		ПоказатьПредупреждение(,"Не заполнено поле тип документа",,"Внимание!" );
		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция Списокфайлов()
	
	
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАзрешенные
	//               |	Файлы.Ссылка КАК ФайлСсылка,
	//               |	ВерсииФайлов.Ссылка КАК ВерсияФайлаСсылка,
	//               |	Файлы.ТекущаяВерсияРасширение КАК Расширение
	//               |ИЗ
	//               |	Справочник.Файлы КАК Файлы
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
	//               |		ПО Файлы.ТекущаяВерсия = ВерсииФайлов.Ссылка				   
	//			   |ГДЕ
	//               |	Файлы.ВладелецФайла ССЫЛКА " + ТипДокумента + "
	//               |	И Файлы.ВладелецФайла.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаН, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаК, ДЕНЬ)
	//			   |	И файлы.ПометкаУдаления = ЛОЖЬ
	//               |	И Файлы.ВладелецФайла._ИМЦ_Организация = &Организация" ;
	
	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Файлы.Ссылка КАК ФайлСсылка,
		               |	Файлы.ТекущаяВерсияРасширение КАК Расширение
		               |ПОМЕСТИТЬ ВТ_Файлы
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |ГДЕ
		               |	Файлы.ВладелецФайла ССЫЛКА " + ТипДокумента + "
		               |	И Файлы.ВладелецФайла.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаН, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаК, ДЕНЬ)
		               |	И Файлы.ПометкаУдаления = ЛОЖЬ
		               |	И Файлы.ВладелецФайла._ИМЦ_Организация = &Организация
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
					   |	ВТ_Файлы.ФайлСсылка Как ФайлСсылка,
					   |	ВТ_Файлы.Расширение КАК Расширение,
		               |	ВерсииФайлов.Ссылка Как ВерсияФайлаСсылка
		               |ИЗ
		               |	ВТ_Файлы КАК ВТ_Файлы
		               |		Левое СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
		               |		ПО ВТ_Файлы.ФайлСсылка = ВерсииФайлов.Владелец";
	Запрос.УстановитьПараметр("ДатаН", ДатаН);
	Запрос.УстановитьПараметр("ДатаК", ДатаК); 
	Запрос.УстановитьПараметр("Организация", Организация); 
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = Запрос.Текст + "|	И Файлы.ВладелецФайла.Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение", Подразделение); 
	КонецЕсли;
	
	Результат =  Запрос.Выполнить().Выгрузить();
	
	
	Массив = Новый Массив;
	Для каждого Стр Из Результат Цикл   		
		Структ = Новый Структура("ФайлСсылка, ВерсияФайлаСсылка, Расширение", Стр.ФайлСсылка, Стр.ВерсияФайлаСсылка, Стр.Расширение);
		Массив.Добавить(Структ);
	КонецЦикла;
	
	Возврат Массив;      	
	
КонецФункции

&НаКлиенте
Процедура КаталогСохраненияФайловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок = "Выберите каталог сохранения";
	Если ДиалогВыбора.Выбрать() Тогда
		КаталогСохраненияФайлов = ДиалогВыбора.Каталог;
	Иначе
		ПоказатьПредупреждение(,"Каталог не выбран!",,"Внимание");
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаНПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДатаН) и ЗначениеЗаполнено(ДатаК) Тогда
		Если ДатаК <  ДатаН Тогда
			ПоказатьПредупреждение(,"Начало периода должно быть меньше или равно Концу периода",,"Внимание!");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = ПараметрыСеанса.ТекущийПользователь._ИМЦ_Организация;
	Подразделение = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	ДатаН = НачалоМесяца(ТекущаяДата());
	ДатаК = ТекущаяДата();
	
	Если Не РольДоступна("ПолныеПрава") Тогда
		Элементы.Организация.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры
