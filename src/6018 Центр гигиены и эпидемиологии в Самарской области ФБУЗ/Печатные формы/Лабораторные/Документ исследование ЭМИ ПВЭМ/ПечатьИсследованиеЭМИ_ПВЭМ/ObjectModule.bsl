
Функция ФормированиеТабличногоДокумента_Протокола(СсылкаНаОбъект, ТабДок)  Экспорт
	
	#Область Получение_областей
	
	МакетОбработки = ПолучитьМакет("МакетПроткола");	
	
	ОбластьПустаяСтрока							= МакетОбработки.ПолучитьОбласть("ПустаяСтрока");
	ОбластьШапка								= МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицаИсточникиФизФакторов		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаИсточникиФизФакторов");
	ОбластьСтрокаТаблицаИсточникиФизФакторов	= МакетОбработки.ПолучитьОбласть("ТаблицаИсточникиФизФакторов");    	
	ОбластьШапкаТаблицаРезультатыИзмерений		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаРезультатыИзмерений");
	ОбластьМестоИзмерения						= МакетОбработки.ПолучитьОбласть("МестоИзмерения");
	ОбластьПДУ									= МакетОбработки.ПолучитьОбласть("ПДУ");
	ОбластьСтрокаТаблицаРезультатыИзмерений		= МакетОбработки.ПолучитьОбласть("ТаблицаРезультатыИзмерений");
	ОбластьНормативнаяДокументация				= МакетОбработки.ПолучитьОбласть("НормативнаяДокументация");	
	ОбластьШапкаТаблицаСредстваИзмерения		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаСредстваИзмерения"); 	
	ОбластьТаблицаСредстваИзмерения				= МакетОбработки.ПолучитьОбласть("ТаблицаСредстваИзмерения"); 
	ОбластьНД									= МакетОбработки.ПолучитьОбласть("НД");
	ОбластьПункт7								= МакетОбработки.ПолучитьОбласть("Пункт7"); 
	ОбластьПункт8								= МакетОбработки.ПолучитьОбласть("Пункт8");
	ОбластьПункт9								= МакетОбработки.ПолучитьОбласть("Пункт9"); 
	ОбластьПункт10								= МакетОбработки.ПолучитьОбласть("Пункт10"); 
	
	
	#КонецОбласти
	
	ВозрСтрукт = Новый Структура;
	
	сч = 0;
		    	  
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПустаяСтрока);

	//Шапка	
	ОбластьШапка.Параметры.Номер					= СсылкаНаОбъект.НомерВЖурнале;
	ОбластьШапка.Параметры.Дата						= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д");	
	
	Если ЗначениеЗаполнено(Час(СсылкаНаОбъект.ДатаИВремяИсследования)) Тогда
		ОбластьШапка.Параметры.ДатаИзмерений	= Формат(СсылкаНаОбъект.ДатаИВремяИсследования,"ДФ='dd.MM.yyyy ""г.,"" ЧЧ ""ч"" мм ""мин""'");
	Иначе
		ОбластьШапка.Параметры.ДатаИзмерений	= Формат(СсылкаНаОбъект.ДатаИВремяИсследования,"ДФ='dd.MM.yyyy");
	КонецЕсли;
	
	ОбластьШапка.Параметры.МестоПроведенияЗамеров	= СсылкаНаОбъект.МестоПроведенияЗамеров;
	ОбластьШапка.Параметры.ЦельИзмерения			= СсылкаНаОбъект.ЦельИзмерения.Наименование;
	ОбластьШапка.Параметры.ПриЗамерахПрисутствовали	= СсылкаНаОбъект.ПриЗамерахПрисутствовали;
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапка);
	
	//ТаблицаСредстваИзмерения
	#Область Средства_измерения
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаСредстваИзмерения);

	
	//сч = 0;
	ПорНомер = 0;
	Для каждого Стр из СсылкаНаОбъект.СредстваИзмерения Цикл 		
		
		ПорНомер																= ПорНомер +1;     
		ОбластьТаблицаСредстваИзмерения.Параметры.ПорНомер						= ПорНомер ;
		ОбластьТаблицаСредстваИзмерения.Параметры.Наименование					= Стр.СредствоИзмерения;
		ОбластьТаблицаСредстваИзмерения.Параметры.Номер						= Стр.СредствоИзмерения.Номер;
		ОбластьТаблицаСредстваИзмерения.Параметры.СвидетельствоОПроверкеНомер	= Стр.СредствоИзмерения.НомерСвидетельстваОПроверке;
		ОбластьТаблицаСредстваИзмерения.Параметры.ПоверенДо					= Формат(Стр.СредствоИзмерения.ПроверенДо,"ДФ=dd.MM.yyyy");
		ОбластьТаблицаСредстваИзмерения.Параметры.Погрешность					= Стр.СредствоИзмерения.Погрешность;
	
		ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьТаблицаСредстваИзмерения);
	
	КонецЦикла;  
	//сч = ПорНомер; 
	#КонецОбласти
	
	//НД 
	#Область НД
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьНормативнаяДокументация);
	НД ="";
	Для каждого СтрМетодики Из СсылкаНаОбъект.МетодикиОтбора Цикл
		
		Если  ЗначениеЗаполнено(НД)Тогда   
			НД = НД +"
			|" + СтрМетодики.Методика.ПолноеНаименование; 
			
		Иначе    			
			НД = СтрМетодики.Методика.ПолноеНаименование;			
		КонецЕсли;   		
		
	КонецЦикла;
	
	ОбластьНД.Параметры.НД = НД;
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьНД);
	
	#КонецОбласти
	
	//Пункт7	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт7);	
	
	//источники физ факторов
	#Область ИСТОЧНИКИ_ФИЗ_ФАКТОРОВ
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаИсточникиФизФакторов);
	
	ПорНомер = 0;
	
	Для каждого СтрФФ Из СсылкаНаОбъект.ИсточникиФизическихФакторов Цикл
		
		ПорНомер = ПорНомер + 1;		
		ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.ПорНомер 	  = ПорНомер;
		
		НайденныеСтроки =  СсылкаНаОбъект.Показатели.НайтиСтроки(Новый Структура("ГУИД", СтрФФ.ГУИД));
		Если НайденныеСтроки.Количество() Тогда
			
			ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.МестоИзмерения	= НайденныеСтроки[0].МестоИзмерения;
			ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.Заполнить(СтрФФ);
			
			ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьСтрокаТаблицаИсточникиФизФакторов);			
			
		КонецЕсли;      
		
	КонецЦикла;
	
	#КонецОбласти
	    	
	//Пункт8

	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт8);

	//Пункт9 
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт9);

	
	//результаты измерений
	#Область Результаты_исследования   
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаРезультатыИзмерений);

	
	ВремТЗ_МестаИзм       = СсылкаНаОбъект.Показатели.Выгрузить(,
	"ГУИД, Комментарий, СоответствуетНормам, ТипТочкиИзмерения, МестоИзмерения");
	ВремТЗ_МестаИзм.Свернуть(
	"ГУИД, Комментарий, СоответствуетНормам, ТипТочкиИзмерения, МестоИзмерения");
	
	ПорНомер = 0;
	Для каждого СтрМестоИзм Из ВремТЗ_МестаИзм  Цикл
		
		ВремТабДок = Новый ТабличныйДокумент;
		ПорНомер = ПорНомер + 1;
		ОбластьМестоИзмерения.Параметры.ПорНомер = ПорНомер;
		ОбластьМестоИзмерения.Параметры.МестоИзмерения = СтрМестоИзм.МестоИзмерения;
		
		ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьМестоИзмерения);
		    		
		НайденныйВыс = СсылкаНаОбъект.Показатели.НайтиСтроки(Новый Структура("ГУИД", СтрМестоИзм.ГУИД));
		
		Если НайденныеСтроки.Количество() Тогда
			
			КолвоВысот = НайденныеСтроки.Количество();
			Для Каждого СтрВысоты Из НайденныйВыс Цикл
				
				ОбластьСтрокаТаблицаРезультатыИзмерений.Параметры.Заполнить(СтрВысоты); 				
				
				ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьСтрокаТаблицаРезультатыИзмерений);

			КонецЦикла;
			
			//ОбъекдОбластПорНомер = ВремТабДок.Область(1  , 1,  КолвоВысот  ,2);
			//ОбъекдОбластПорНомер.Объединить();
			//
			//ОбъекдОбластьМестоИзм = ВремТабДок.Область(1  , 3,  КолвоВысот  ,28);
			//ОбъекдОбластьМестоИзм.Объединить();
			
		
			
		КонецЕсли; 
		
		
	КонецЦикла;  
	
	#КонецОбласти
	
	//Пункт10 
	ОбластьПункт10.Параметры.ДополнительныеCведения = СсылкаНаОбъект.ДополнительныеСведения;
	     	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт10);

	
	//Приложение картинка
	
	#Область ТестКартинки
		
	МассивРасширенийКартинок = Новый Массив;
	МассивРасширенийКартинок.Добавить("png");
	МассивРасширенийКартинок.Добавить("jpeg");	
	МассивРасширенийКартинок.Добавить("jpg");
	МассивРасширенийКартинок.Добавить("gif"); 	 
	МассивРасширенийКартинок.Добавить("bmp");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Файлы.Ссылка КАК Файл,
	               |	Файлы.ТекущаяВерсияРасширение
	               |ИЗ
	               |	Справочник.Файлы КАК Файлы
	               |ГДЕ
	               |	Файлы.ВладелецФайла = &ВладелецФайла
	               |	И Файлы.ТекущаяВерсияРасширение В(&СписокРасширений)
	               |	И Файлы.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ВладелецФайла",    СсылкаНаОбъект);   	
	Запрос.УстановитьПараметр("СписокРасширений", МассивРасширенийКартинок); 
	
	Результат =  Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() Тогда
		//ОбластьПриложение.Параметры.Номер = Объект.СсылкаНаОбъект.НомерВЖурнале;
		//ТабДок.Вывести(ОбластьПриложение);
		
		Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
		
		ОбластьПриложениеЗаголовок = МакетОбработки.ПолучитьОбласть("ПриложениеЗаголовок");
		ОбластьПриложениеЗаголовок.Параметры.Номер = СсылкаНаОбъект.НомерВЖурнале;
		
		ДобавлениеОбластиВСТруктуру(сч, ВозрСтрукт,ОбластьПриложениеЗаголовок);

		//ТабДок.Вывести(ОбластьПриложениеЗаголовок);
		
		Для каждого Стр Из Результат Цикл   
			
			ОбластьПриложение = МакетОбработки.ПолучитьОбласть("Приложение");
						
			Адрес = ПолучитьДанныеФайлаДляОткрытия(Стр.Файл);
			ДвДанныеФайл = ПолучитьИзВременногоХранилища(Адрес);
			
			ИмяВремФайла 		= ПолучитьИмяВременногоФайла(Стр.ТекущаяВерсияРасширение);
			ДвДанныеФайл.Записать(ИмяВремФайла);
			
			ПутьИИмя = ИмяВремФайла;
			Путь = "";
			Имя  = "";
			ПозСлэш = Найти(ПутьИИмя,"\");
			Пока ПозСлэш > 0 Цикл
				Путь = Путь+Сред(ПутьИИмя,1,ПозСлэш);
				ПутьИИмя = Сред(ПутьИИмя,ПозСлэш+1);
				ПозСлэш = Найти(ПутьИИмя,"\");
			КонецЦикла;
			Имя = ПутьИИмя;
			
			КатологВремФайлов 	= СтрЗаменить(ИмяВремФайла, ПутьИИмя, "");
			
			
			objShellApp = Новый COMОбъект("Shell.Application");
			objFolder	= objShellApp.NameSpace(СокрЛП(КатологВремФайлов));
			objItem		= objFolder.ParseName(СокрЛП(Имя)); 
			размеры		= objFolder.GetDetailsOf(objItem, 31); 
			размеры 	= СтрЗаменить(размеры, Символ(8236), ""); //
			размеры 	= СтрЗаменить(размеры, Символ(8234), ""); //
			р 			= Найти(размеры, "x");
			ширина 		= Число(Лев(размеры, р - 1));
			высота 		= Число(Сред(размеры, р + 2));
			
			Если Ширина > 160 Тогда
							
				Коэф = Ширина/160;
				Высота = высота/Коэф;
				Ширина = Ширина/Коэф;
			ИначеЕсли Высота > 300 Тогда
				
				Коэф = высота/300;
				Высота = высота/Коэф;
				Ширина = Ширина/Коэф;
				
			КонецЕсли;
			
			Рисунок = ОбластьПриложение.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
			Рисунок.Верх 	= 5; 
			Рисунок.Высота 	= высота; 
			Рисунок.Ширина 	= ширина; 
			Рисунок.Лево 	= 5; 
			Рисунок.Картинка = Новый Картинка(ДвДанныеФайл); 
			Рисунок.Линия 	 = Линия;
			Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально; 
			
			//Картинка = Новый Картинка(ДвДанныеФайл);    		
			//ОбластьКартинка.Рисунки.D1.Картинка =  Картинка;   		 
			ДобавлениеОбластиВСТруктуру(сч, ВозрСтрукт,ОбластьПриложение);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	#КонецОбласти

	Возврат ВозрСтрукт;

		
КонецФункции

Функция ФормированиеТабличногоДокумента_Экспертного(СсылкаНаОбъект, ТабДок)  Экспорт
	
	#Область Получение_областей
	
	МакетОбработки = ПолучитьМакет("МакетЭкспертного");	
	
	ОбластьПустаяСтрока							= МакетОбработки.ПолучитьОбласть("ПустаяСтрока");
	ОбластьШапка								= МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицаИсточникиФизФакторов		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаИсточникиФизФакторов");
	ОбластьСтрокаТаблицаИсточникиФизФакторов	= МакетОбработки.ПолучитьОбласть("ТаблицаИсточникиФизФакторов");    	
	ОбластьШапкаТаблицаРезультатыИзмерений		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаРезультатыИзмерений");
	ОбластьМестоИзмерения						= МакетОбработки.ПолучитьОбласть("МестоИзмерения");
	ОбластьПДУ									= МакетОбработки.ПолучитьОбласть("ПДУ");
	ОбластьСтрокаТаблицаРезультатыИзмерений		= МакетОбработки.ПолучитьОбласть("ТаблицаРезультатыИзмерений");
	ОбластьНормативнаяДокументация				= МакетОбработки.ПолучитьОбласть("НормативнаяДокументация");	
	ОбластьШапкаТаблицаСредстваИзмерения		= МакетОбработки.ПолучитьОбласть("ШапкаТаблицаСредстваИзмерения"); 	
	ОбластьТаблицаСредстваИзмерения				= МакетОбработки.ПолучитьОбласть("ТаблицаСредстваИзмерения"); 
	ОбластьНД									= МакетОбработки.ПолучитьОбласть("НД");
	ОбластьПункт7								= МакетОбработки.ПолучитьОбласть("Пункт7"); 
	ОбластьПункт8								= МакетОбработки.ПолучитьОбласть("Пункт8");
	ОбластьПункт9								= МакетОбработки.ПолучитьОбласть("Пункт9"); 
	ОбластьПункт10								= МакетОбработки.ПолучитьОбласть("Пункт10"); 
	
	
	#КонецОбласти
	
	ВозрСтрукт = Новый Структура;
	
	сч = 0;
		    	  
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПустаяСтрока);

	//Шапка	
	ОбластьШапка.Параметры.Номер					= СсылкаНаОбъект.НомерВЖурнале;
	ОбластьШапка.Параметры.Дата						= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д");	
	//
	//Если ЗначениеЗаполнено(Час(СсылкаНаОбъект.ДатаИВремяИсследования)) Тогда
	//	ОбластьШапка.Параметры.ДатаИзмерений	= Формат(СсылкаНаОбъект.ДатаИВремяИсследования,"ДФ='dd.MM.yyyy ""г.,"" ЧЧ ""ч"" мм ""мин""'");
	//Иначе
	//	ОбластьШапка.Параметры.ДатаИзмерений	= Формат(СсылкаНаОбъект.ДатаИВремяИсследования,"ДФ='dd.MM.yyyy");
	//КонецЕсли;
	//
	//ОбластьШапка.Параметры.МестоПроведенияЗамеров	= СсылкаНаОбъект.МестоПроведенияЗамеров;
	//ОбластьШапка.Параметры.ЦельИзмерения			= СсылкаНаОбъект.ЦельИзмерения.Наименование;
	//ОбластьШапка.Параметры.ПриЗамерахПрисутствовали	= СсылкаНаОбъект.ПриЗамерахПрисутствовали;
	//
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапка);
	//
	////ТаблицаСредстваИзмерения
	//#Область Средства_измерения
	//
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаСредстваИзмерения);

	//
	//сч = 0;
	//ПорНомер = 0;
	//Для каждого Стр из СсылкаНаОбъект.СредстваИзмерения Цикл 		
	//	
	//	ПорНомер																= ПорНомер +1;     
	//	ОбластьТаблицаСредстваИзмерения.Параметры.ПорНомер						= ПорНомер ;
	//	ОбластьТаблицаСредстваИзмерения.Параметры.Наименование					= Стр.СредствоИзмерения;
	//	ОбластьТаблицаСредстваИзмерения.Параметры.Номер						= Стр.СредствоИзмерения.Номер;
	//	ОбластьТаблицаСредстваИзмерения.Параметры.СвидетельствоОПроверкеНомер	= Стр.СредствоИзмерения.НомерСвидетельстваОПроверке;
	//	ОбластьТаблицаСредстваИзмерения.Параметры.ПоверенДо					= Формат(Стр.СредствоИзмерения.ПроверенДо,"ДФ=dd.MM.yyyy");
	//	ОбластьТаблицаСредстваИзмерения.Параметры.Погрешность					= Стр.СредствоИзмерения.Погрешность;
	//
	//	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьТаблицаСредстваИзмерения);
	//
	//КонецЦикла;  
	//сч = ПорНомер; 
	//#КонецОбласти
	//
	////НД 
	//#Область НД
	//
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьНормативнаяДокументация);
	//
	//щщ = 0;
	//Для каждого СтрМетодики Из СсылкаНаОбъект.МетодикиОтбора Цикл
	//	
	//	щщ = щщ + 1;
	//	Если  щщ = 1 Тогда    			
	//		НД = СтрМетодики.Методика.ПолноеНаименование; 			
	//	Иначе    			
	//		НД = НД +"
	//		|" + СтрМетодики.Методика.ПолноеНаименование;  			
	//	КонецЕсли;   		
	//	
	//КонецЦикла;
	//
	//ОбластьНД.Параметры.НД = НД;
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьНД);
	//
	//#КонецОбласти
	//
	////Пункт7	
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт7);	
	//
	////источники физ факторов
	//#Область ИСТОЧНИКИ_ФИЗ_ФАКТОРОВ
	//
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаИсточникиФизФакторов);
	//
	//ПорНомер = 0;
	//
	//Для каждого СтрФФ Из СсылкаНаОбъект.ИсточникиФизическихФакторов Цикл
	//	
	//	ПорНомер = ПорНомер + 1;		
	//	ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.ПорНомер 	  = ПорНомер;
	//	
	//	НайденныеСтроки =  СсылкаНаОбъект.Показатели.НайтиСтроки(Новый Структура("ГУИД", СтрФФ.ГУИД));
	//	Если НайденныеСтроки.Количество() Тогда
	//		
	//		ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.МестоИзмерения	= НайденныеСтроки[0].МестоИзмерения;
	//		ОбластьСтрокаТаблицаИсточникиФизФакторов.Параметры.Заполнить(СтрФФ);
	//		
	//		ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьСтрокаТаблицаИсточникиФизФакторов);			
	//		
	//	КонецЕсли;      
	//	
	//КонецЦикла;
	//
	//#КонецОбласти
	//    	
	////Пункт8

	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт8);

	////Пункт9 
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт9);

	
	//результаты измерений
	#Область Результаты_исследования   
	
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьШапкаТаблицаРезультатыИзмерений);
	ОбластьПДУ.Параметры.Текст = "ПДУ";
	ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПДУ);

	
	ВремТЗ_МестаИзм       = СсылкаНаОбъект.Показатели.Выгрузить(,
	"ГУИД, Комментарий, СоответствуетНормам, ТипТочкиИзмерения, МестоИзмерения");
	ВремТЗ_МестаИзм.Свернуть(
	"ГУИД, Комментарий, СоответствуетНормам, ТипТочкиИзмерения, МестоИзмерения");
	
	ПорНомер = 0;
	Для каждого СтрМестоИзм Из ВремТЗ_МестаИзм  Цикл
		
		ВремТабДок = Новый ТабличныйДокумент;
		ПорНомер = ПорНомер + 1;
		ОбластьМестоИзмерения.Параметры.ПорНомер = ПорНомер;
		ОбластьМестоИзмерения.Параметры.МестоИзмерения = СтрМестоИзм.МестоИзмерения;
		
		ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьМестоИзмерения);
		    		
		НайденныйВыс = СсылкаНаОбъект.Показатели.НайтиСтроки(Новый Структура("ГУИД", СтрМестоИзм.ГУИД));
		
		Если НайденныйВыс.Количество() Тогда
			
			КолвоВысот = НайденныйВыс.Количество();
			Для Каждого СтрВысоты Из НайденныйВыс Цикл
				
				ОбластьСтрокаТаблицаРезультатыИзмерений.Параметры.Заполнить(СтрВысоты); 				
				
				ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьСтрокаТаблицаРезультатыИзмерений);

			КонецЦикла;
			
			//ОбъекдОбластПорНомер = ВремТабДок.Область(1  , 1,  КолвоВысот  ,2);
			//ОбъекдОбластПорНомер.Объединить();
			//
			//ОбъекдОбластьМестоИзм = ВремТабДок.Область(1  , 3,  КолвоВысот  ,28);
			//ОбъекдОбластьМестоИзм.Объединить();
			
		
			
		КонецЕсли; 
		
		
	КонецЦикла;  
	
	#КонецОбласти
	
	////Пункт10 
	//ОбластьПункт10.Параметры.ДополнительныеCведения = СсылкаНаОбъект.ДополнительныеСведения;
	//     	
	//ДобавлениеОбластиВструктуру(сч, ВозрСтрукт, ОбластьПункт10);

	//
	////Приложение картинка
	//
	//#Область ТестКартинки
	//	
	//МассивРасширенийКартинок = Новый Массив;
	//МассивРасширенийКартинок.Добавить("png");
	//МассивРасширенийКартинок.Добавить("jpeg");	
	//МассивРасширенийКартинок.Добавить("jpg");
	//МассивРасширенийКартинок.Добавить("gif"); 	 
	//МассивРасширенийКартинок.Добавить("bmp");
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Файлы.Ссылка КАК Файл,
	//               |	Файлы.ТекущаяВерсияРасширение
	//               |ИЗ
	//               |	Справочник.Файлы КАК Файлы
	//               |ГДЕ
	//               |	Файлы.ВладелецФайла = &ВладелецФайла
	//               |	И Файлы.ТекущаяВерсияРасширение В(&СписокРасширений)
	//               |	И Файлы.ПометкаУдаления = ЛОЖЬ";
	//
	//Запрос.УстановитьПараметр("ВладелецФайла",    СсылкаНаОбъект);   	
	//Запрос.УстановитьПараметр("СписокРасширений", МассивРасширенийКартинок); 
	//
	//Результат =  Запрос.Выполнить().Выгрузить();
	//
	//Если Результат.Количество() Тогда
	//	//ОбластьПриложение.Параметры.Номер = Объект.СсылкаНаОбъект.НомерВЖурнале;
	//	//ТабДок.Вывести(ОбластьПриложение);
	//	
	//	Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	//	
	//	ОбластьПриложениеЗаголовок = МакетОбработки.ПолучитьОбласть("ПриложениеЗаголовок");
	//	ОбластьПриложениеЗаголовок.Параметры.Номер = СсылкаНаОбъект.НомерВЖурнале;
	//	
	//	ДобавлениеОбластиВСТруктуру(сч, ВозрСтрукт,ОбластьПриложениеЗаголовок);

	//	//ТабДок.Вывести(ОбластьПриложениеЗаголовок);
	//	
	//	Для каждого Стр Из Результат Цикл   
	//		
	//		ОбластьПриложение = МакетОбработки.ПолучитьОбласть("Приложение");
	//					
	//		Адрес = ПолучитьДанныеФайлаДляОткрытия(Стр.Файл);
	//		ДвДанныеФайл = ПолучитьИзВременногоХранилища(Адрес);
	//		
	//		ИмяВремФайла 		= ПолучитьИмяВременногоФайла(Стр.ТекущаяВерсияРасширение);
	//		ДвДанныеФайл.Записать(ИмяВремФайла);
	//		
	//		ПутьИИмя = ИмяВремФайла;
	//		Путь = "";
	//		Имя  = "";
	//		ПозСлэш = Найти(ПутьИИмя,"\");
	//		Пока ПозСлэш > 0 Цикл
	//			Путь = Путь+Сред(ПутьИИмя,1,ПозСлэш);
	//			ПутьИИмя = Сред(ПутьИИмя,ПозСлэш+1);
	//			ПозСлэш = Найти(ПутьИИмя,"\");
	//		КонецЦикла;
	//		Имя = ПутьИИмя;
	//		
	//		КатологВремФайлов 	= СтрЗаменить(ИмяВремФайла, ПутьИИмя, "");
	//		
	//		
	//		objShellApp = Новый COMОбъект("Shell.Application");
	//		objFolder	= objShellApp.NameSpace(СокрЛП(КатологВремФайлов));
	//		objItem		= objFolder.ParseName(СокрЛП(Имя)); 
	//		размеры		= objFolder.GetDetailsOf(objItem, 31); 
	//		размеры 	= СтрЗаменить(размеры, Символ(8236), ""); //
	//		размеры 	= СтрЗаменить(размеры, Символ(8234), ""); //
	//		р 			= Найти(размеры, "x");
	//		ширина 		= Число(Лев(размеры, р - 1));
	//		высота 		= Число(Сред(размеры, р + 2));
	//		
	//		Если Ширина > 160 Тогда
	//						
	//			Коэф = Ширина/160;
	//			Высота = высота/Коэф;
	//			Ширина = Ширина/Коэф;
	//		ИначеЕсли Высота > 300 Тогда
	//			
	//			Коэф = высота/300;
	//			Высота = высота/Коэф;
	//			Ширина = Ширина/Коэф;
	//			
	//		КонецЕсли;
	//		
	//		Рисунок = ОбластьПриложение.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
	//		Рисунок.Верх 	= 5; 
	//		Рисунок.Высота 	= высота; 
	//		Рисунок.Ширина 	= ширина; 
	//		Рисунок.Лево 	= 5; 
	//		Рисунок.Картинка = Новый Картинка(ДвДанныеФайл); 
	//		Рисунок.Линия 	 = Линия;
	//		Рисунок.РазмерКартинки = РазмерКартинки.Пропорционально; 
	//		
	//		//Картинка = Новый Картинка(ДвДанныеФайл);    		
	//		//ОбластьКартинка.Рисунки.D1.Картинка =  Картинка;   		 
	//		ДобавлениеОбластиВСТруктуру(сч, ВозрСтрукт,ОбластьПриложение);
	//		
	//	КонецЦикла; 
	//	
	//КонецЕсли;
	//
	//#КонецОбласти
	//
	Возврат ВозрСтрукт;
	
КонецФункции

// Делает ПолучитьДанныеФайла + ПоместитьВоВременноеХранилище (если файл хранится на диске)
// Функция возвращает структуру, содержащую различные сведения о Файле и версии
// Параметры
//  ФайлСсылка  - СправочникСсылка.Файлы - файл
//  ВерсияСсылка  - СправочникСсылка.ВерсииФайлов - версия файла
//  ИдентификаторФормы - уникальный идентификатор формы
//  РабочийКаталогВладельца - Строка - в ней возвращается рабочий каталог владельца файла
//
// Возвращаемое значение:
//   Структура - структура с данными файла
Функция ПолучитьДанныеФайлаДляОткрытия(
	ФайлСсылка, 
	ВерсияСсылка = Неопределено, 
	ИдентификаторФормы = Неопределено, 
	РабочийКаталогВладельца = Неопределено,
	ПредыдущийАдресФайла = Неопределено) Экспорт
	//
	//Если ПредыдущийАдресФайла <> Неопределено Тогда
	//	Если НЕ ПустаяСтрока(ПредыдущийАдресФайла) И ЭтоАдресВременногоХранилища(ПредыдущийАдресФайла) Тогда
	//		УдалитьИзВременногоХранилища(ПредыдущийАдресФайла);
	//	КонецЕсли;	
	//КонецЕсли;	
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайла(ФайлСсылка, ВерсияСсылка);
	
	Если РабочийКаталогВладельца = Неопределено Тогда
		РабочийКаталогВладельца = ПолучитьРабочийКаталог(ДанныеФайла.Владелец);
	КонецЕсли;
	ДанныеФайла.Вставить("РабочийКаталогВладельца", РабочийКаталогВладельца);
	
	Если ДанныеФайла.РабочийКаталогВладельца <> "" Тогда
		ИмяФайла = ФайловыеФункцииКлиентСервер.ПолучитьИмяСРасширением(ДанныеФайла.ПолноеНаименованиеВерсии, ДанныеФайла.Расширение);
		ИмяФайлаСПутемВРабочемКаталоге = РабочийКаталогВладельца + ИмяФайла;
		ДанныеФайла.Вставить("ИмяФайлаСПутемВРабочемКаталоге", ИмяФайлаСПутемВРабочемКаталоге);
	КонецЕсли;
	
	ТипХраненияФайла = ДанныеФайла.Версия.ТипХраненияФайла;
	
	Если ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВТомахНаДиске И ДанныеФайла.Версия <> Неопределено Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "ВЫБРАТЬ
					   |	ВерсииФайлов.ПутьКФайлу КАК ПутьКФайлу,
					   |	ВерсииФайлов.Том КАК Том
					   |ИЗ
					   |	Справочник.ВерсииФайлов КАК ВерсииФайлов
					   |ГДЕ
					   |	ВерсииФайлов.Ссылка = &Версия";
					   
		Запрос.Параметры.Вставить("Версия", ДанныеФайла.Версия);
		
		ДанныеФайлаТом = Справочники.ТомаХраненияФайлов.ПустаяСсылка();
		ДанныеФайлаПутьКФайлу = ""; 
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ДанныеФайлаТом = Выборка.Том;
			ДанныеФайлаПутьКФайлу = Выборка.ПутьКФайлу;
		КонецЕсли;
		
		Если НЕ ДанныеФайлаТом.Пустая() Тогда
			ПолныйПуть = ФайловыеФункции.ПолныйПутьТома(ДанныеФайлаТом) + ДанныеФайлаПутьКФайлу; 
						
			ДвоичныеДанные = Новый ДвоичныеДанные(ПолныйПуть);   			
			
		
			//мФайл = Новый Файл(ИмяВрем);
			//ДвДанныеФайл = Новый ДвоичныеДанные(ИмяФайла);		
			Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			
			
			Возврат Адрес;
			
			
				
		КонецЕсли;
		
	КонецЕсли;
	
	
	
КонецФункции // ПолучитьДанныеФайлаДляОткрытия()

// Получает синтетический рабочий каталог папки на диске (он может прийти от родительской папки)
// Параметры
//  СсылкаПапки  - СправочникСсылка.ПапкиФайлов - владелец файла
//
// Возвращаемое значение:
//   Строка  - рабочий каталог
Функция ПолучитьРабочийКаталог(СсылкаПапки) Экспорт
	
	Если ТипЗнч(СсылкаПапки) <> Тип("СправочникСсылка.ПапкиФайлов") Тогда
		Возврат ""
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	РабочийКаталог = "";
	
	// Подготовить структуру отбора по измерениям
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Папка", СсылкаПапки);
	СтруктураОтбора.Вставить("Пользователь", Пользователи.ТекущийПользователь());
	
	// Получить структуру с данными ресурсов записи
	СтруктураРесурсов = РегистрыСведений.РабочиеКаталогиФайлов.Получить(СтруктураОтбора);
	
	// Получить путь из регистра
	РабочийКаталог = СтруктураРесурсов.Путь;
	
	Если НЕ ПустаяСтрока(РабочийКаталог) Тогда
		// Добавляем слэш в конце, если его нет
		РабочийКаталог = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(РабочийКаталог, ОбщегоНазначенияПовтИсп.ТипПлатформыСервера());
	КонецЕсли;
	
	Возврат РабочийКаталог;
	
КонецФункции

Процедура ДобавлениеОбластиВСТруктуру(сч, ВозрСтрукт, Область)
	
	сч=сч+1;
	ВозрСтрукт.Вставить("ТабДок" + сч, Новый ТабличныйДокумент);
	ВозрСтрукт["ТабДок" + сч].РазмерКолонтитулаСнизу	= 10;
	ВозрСтрукт["ТабДок" + сч].ПолеСнизу					= 15;
	ВозрСтрукт["ТабДок" + сч].ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;  
	ВозрСтрукт["ТабДок" + сч].Вывести(Область);

КонецПроцедуры
