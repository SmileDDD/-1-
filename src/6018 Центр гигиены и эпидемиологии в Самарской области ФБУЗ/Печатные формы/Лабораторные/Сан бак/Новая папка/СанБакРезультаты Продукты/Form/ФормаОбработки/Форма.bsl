&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда		
		
		СсылкаНаОбъект = Параметры.СсылкаНаОбъект;
		
		Если Параметры.Свойство("СсылкаНаВнешОбр") Тогда
			НаборЗаписей = РегистрыСведений._ИМЦ_Исследование_ПечатнаяФорма.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(СсылкаНаОбъект);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			
			Запись = НаборЗаписей.Добавить();			
			Запись.Документ			= СсылкаНаОбъект;; 
			Запись.ВнешняяОбработка	= Параметры.СсылкаНаВнешОбр;			
			НаборЗаписей.Записать(); 
		КонецЕсли;

	КонецЕсли
	
КонецПроцедуры
	 
&НаКлиенте
Процедура ПриОткрытии(Отказ)             
	
	Если ЗначениеЗаполнено(ССылкаНаОбъект) Тогда
		
	   Отказ = Истина;
	   ТабДок = ПечатьТабДок(СсылкаНаОбъект);
	   _ИМЦ_МодульФайлыПечатьКлиент.СозданиеФайлаПриПечатиИзВнешнихОбработок(ТабДок,ССылкаНаОбъект,ПрефиксНаименованияФайла,ЭтаФорма); 
	
   КонецЕсли;	
   
КонецПроцедуры

&НаСервере
Функция ПечатьТабДок(СсылкаНаОбъект)
	
	ТабДок = Новый ТабличныйДокумент;
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	МакетОбработки = ЭтотОбъект.ПолучитьМакет("Макет");
	ТабДок.ИмяПараметровПечати = "Печать_Документа";
	//Шапка
	ОбластьШапка               = МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьТаблицаШапка        = МакетОбработки.ПолучитьОбласть("ТаблицаШапка");
	ОбластьТаблица             = МакетОбработки.ПолучитьОбласть("Таблица");
	//ОбластьТаблицаШапка2       = МакетОбработки.ПолучитьОбласть("ТаблицаШапка2");
	//ОбластьТаблица2            = МакетОбработки.ПолучитьОбласть("Таблица2");
	ОбластьСписокПодписывающих = МакетОбработки.ПолучитьОбласть("СписокПодписывающих");
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.КодКонтрагента) Тогда 
		ОбластьШапка.Параметры.КодОбразца = "Код образца № " + СсылкаНаОбъект.КодКонтрагента; 
	Иначе
		ОбластьШапка.Параметры.КодОбразца = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
	КонецЕсли;

	Отбор = Новый Структура("Печать", Истина); 
	Найденные = СсылкаНаОбъект.ПродуктыПоказатели.НайтиСтроки(Отбор); 
	
	Если Найденные.Количество() > 0 Тогда
		ОбластьШапка.Параметры.Проба = Строка(Найденные.Получить(0).ДополнительныеСведения);
		ОбластьШапка.Параметры.ДатаИзготовления = Строка(Формат(Найденные.Получить(0).ДатаИзготовления, "ДЛФ = ДД"));
		ОбластьШапка.Параметры.ДатаПосева = Строка(Формат(Найденные.Получить(0).ДатаИсследования, "ДЛФ = ДД"));
		ОбластьСписокПодписывающих.Параметры.ДатаВыдачи = Строка(Формат(Найденные.Получить(0).ДатаРезультата, "ДЛФ = ДД"));
		ПрефиксНаименованияФайла = "Санбак " + "Код образца № " + СсылкаНаОбъект.КодКонтрагента + " РегНомер "+ СсылкаНаОбъект.ПродуктыПоказатели[0].НомерВЖурнале; 
		
	КонецЕсли;	
	
	ОбластьШапка.Параметры.ДатаДоставки = Формат(СсылкаНаОбъект.ДатаИВремяПоступления,"ДЛФ=ВДД");
	ОбластьШапка.Параметры.ДатаОтбора = Формат(СсылкаНаОбъект.ДатаОтбораПроб,"ДЛФ= ВДД");
	ОбластьШапка.Параметры.МестоИсследования = СсылкаНаОбъект.Лаборатория.Примечание;
	
	ОбластьШапка.Параметры.ДатаПосева = Формат(СсылкаНаОбъект.ДатаОтбораПроб,"ДЛФ= ДД");
	
	Показатели = СсылкаНаОбъект.ПродуктыПоказатели.Выгрузить();
	Показатели.Свернуть("ПродуктИсследования,ДополнительныеСведения");
	
	ТабДок.Вывести(ОбластьШапка); 
	
	Первая = Истина;
	Для каждого Стр из Найденные Цикл
		//Если Найти(Строка(Стр.ЖурналИсследований),"антибиотик") = 0 Тогда
			Если Первая Тогда //выводим шапку таблицы
				ОбластьТаблицаШапка.Параметры.Номер1 = Стр.НомерВЖурнале;
				ТабДок.Вывести(ОбластьТаблицаШапка);
				Первая = Ложь;
			КонецЕсли;	
			ОбластьТаблица.Параметры.Показатель = Стр.Показатель;
			ОбластьТаблица.Параметры.ЕдИзмер    = Стр.Показатель.ЕдиницаИзмерения;
			ОбластьТаблица.Параметры.Результат 	= ДобавитьСимволСтепень(Стр.РезультатСтрока); 
			ОбластьТаблица.Параметры.Норма 		= ДобавитьСимволСтепень(Стр.Объем); 
			ОбластьТаблица.Параметры.НД 		= Стр.Примечание; 
			
			ТабДок.Вывести(ОбластьТаблица);
		//КонецЕсли;	
		
	КонецЦикла;	
	
	//Первая = Истина;
	//Для каждого Стр из Найденные Цикл
	//	Если Найти(Строка(Стр.ЖурналИсследований),"антибиотик") <> 0 Тогда
	//		Если Первая Тогда //выводим шапку таблицы
	//			ОбластьТаблицаШапка2.Параметры.Номер2 = Стр.НомерВЖурнале;
	//			ТабДок.Вывести(ОбластьТаблицаШапка2);
	//			Первая = Ложь;
	//		КонецЕсли;	
	//		ОбластьТаблица2.Параметры.Показатель 	= Стр.Показатель;
	//		ОбластьТаблица2.Параметры.Результат 	= Стр.РезультатСтрока; 
	//		ОбластьТаблица2.Параметры.Норма 		= "Не допускается"; 
	//		ОбластьТаблица2.Параметры.Примечание	= Стр.Объем; 
	//		ОбластьТаблица2.Параметры.НД 			= Стр.Примечание; 
	//		
	//		ТабДок.Вывести(ОбластьТаблица2);
	//	КонецЕсли;	
	//	
	//КонецЦикла;		
	// 
	ТабДок.Вывести(ОбластьСписокПодписывающих);

	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Верх;
	ТабДок.РазмерКолонтитулаСнизу = 25;
                          
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда  	
		ИЛЦ = "ИЛЦ филиала ФБУЗ  «Центр гигиены и эпидемиологии в Самарской области в городе Сызрани».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Чапаевск».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда 		
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в Сергиевском районе».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Тольятти».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в Нефтегорском районе».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Отрадном».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		ИЛЦ = "ИЛЦ Филиала ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Новокуйбышевске».";
		
	Иначе	
		ИЛЦ = "ИЛЦ ФБУЗ «Центр гигиены и эпидемиологии в Самарской области».";
	КонецЕсли;  	
	
	ТабДок.НижнийКолонтитул.ТекстСправа = "Страница___из___";
	
	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
	"
	|Настоящие результаты лабораторных испытаний  распространяются только на образец, подвергнутый испытаниям. 
	|Результаты лабораторных испытаний не могут быть воспроизведены полностью или частично без письменного 
	|разрешения " + ИЛЦ; 
	ТабДок.ПолеСнизу = 25;			
	ТабДок.НижнийКолонтитул.Выводить = Истина; 
	
	Возврат ТабДок;

КонецФункции

Функция ДобавитьСимволСтепень(Входящая)
	
	Первая = Найти(Входящая,"@");
	Если Первая > 0 Тогда
		
		Если Найти(Входящая,"@2@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@2@",Символ(178));
		ИначеЕсли Найти(Входящая,"@3@") > 0 Тогда
			//Исходящая = СтрЗаменить(Входящая,"@3@",Символ(179));
			Исходящая = СтрЗаменить(Входящая,"@3@","³");
		ИначеЕсли Найти(Входящая,"@4@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@4@",Символ(8308));
		ИначеЕсли Найти(Входящая,"@5@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@5@",Символ(8309));
		ИначеЕсли Найти(Входящая,"@6@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@6@",Символ(8310));
		ИначеЕсли Найти(Входящая,"@7@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@7@",Символ(8311));
		ИначеЕсли Найти(Входящая,"@8@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@8@",Символ(8312));
		ИначеЕсли Найти(Входящая,"@9@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@9@",Символ(8313));
		КонецЕсли;
		
		Если Найти(Входящая,"@") Тогда 
			Исходящая = ДобавитьСимволСтепень(Исходящая);
		КонецЕсли;	

	Иначе
		Исходящая = Входящая;
	КонецЕсли;	
	
	Возврат Исходящая;
	
КонецФункции	

&НаСервере
Функция НайдемНашФайл(ИмяФайла)	Экспорт
	Возврат Справочники.Файлы.НайтиПоНаименованию(ИмяФайла);
КонецФункции	

&НаКлиенте
Процедура СформироватьТабличныйДокумент(Команда)
	ТабДок = ПечатьТабДок(СсылкаНаОбъект);
	ТабДок.Показать(); 
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ССылкаНаДокумент = СсылкаНаОбъект; 
	Отказ = Истина;
	ТабДок = ПечатьТабДок(СсылкаНаОбъект);
	ТабДок.Показать();
	//СпЗнач = Новый СписокЗначений;
	//СпЗнач.Добавить("MXL");⒉
	//СпЗнач.Добавить("Excel"); ⒉    	
	//Ответ = Вопрос(,СпЗнач);³³³³
	//
	//ИмяВрем = СформироватьИмяВременногоФайла(Ответ);
	//
	//Если Ответ = "MXL" ТОгда    
	//	ТабДок.Записать(ИмяВрем, ТипФайлаТабличногоДокумента.MXL);   
	//Иначе
	//	ТабДок.Записать(ИмяВрем, ТипФайлаТабличногоДокумента.XLS);   
	//КонецЕсли;
	//
	////элмас.Показать();
	//
	//мФайл = Новый Файл(ИмяВрем);
	//Если мФайл.Существует() Тогда
	//	//добавим файл в справочник файлы
	//	РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ИмяВрем,ССылкаНаДокумент,ЭтаФорма,Истина,Неопределено);
	//КонецЕсли;
	//
	////откроем на редактирование
	//Имя = мФайл.ИмяБезРасширения;
	//НашФайл	= НайдемНашФайл(Имя);			
	//КомандыРаботыСФайламиКлиент.Редактировать(НашФайл); 

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаСуществованияИмени(ИмяВрем)
	
	СсылкаНаФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяВрем);
	Если СсылкаНаФайл = Справочники.Файлы.ПустаяСсылка() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;		
	КонецЕсли;
	
	
КонецФункции

