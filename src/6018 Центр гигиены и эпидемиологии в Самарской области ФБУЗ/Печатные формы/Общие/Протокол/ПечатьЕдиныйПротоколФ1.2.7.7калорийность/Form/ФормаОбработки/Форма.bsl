&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда		
		Объект.СсылкаНаОбъект = Параметры.СсылкаНаОбъект;  			                                		
		
		Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.Заключение) Тогда
			НаличиеЗаключения = Истина; 		
		КонецЕсли;	
		
		ДатаУтверждения = Объект.СсылкаНаОбъект.Дата; 
		ЗаполнениеСпискаУтверждающих();
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект) Тогда 
		
		Элементы.СсылкаНаОбъект.Видимость = Ложь;
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Функция ПечатьТабДок(СсылкаНаОбъект)
	
	ПрефиксНаименованияФайла = "Проткол_" + СсылкаНаОбъект.Номер;
	
	ТабДок = Новый ТабличныйДокумент;
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда  	
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетСызрань");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетЧапаевск");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда 		
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетСергиевск");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетТольятти");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетНефтегорск");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетОтрадный");
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетНовокуйбышевск");
		
	Иначе	
		МакетОбработки = ЭтотОбъект.ПолучитьМакет("МакетСамара");
	КонецЕсли;  	
	
	
	//                        ПЕРВАЯ СТРАНИЦА
	//======================================================================================================================	
	
	#Область Первая_Страница
	
	ОбластьПерваяСтр = МакетОбработки.ПолучитьОбласть("ПерваяСтр");
	
	АдресаЛабораторий = МасссивАдресовЛабораторий(СсылкаНаОбъект);		
	ОбластьПерваяСтр.Параметры.АдресаЛабораторий 	= АдресаЛабораторий;	
	ОбластьПерваяСтр.Параметры.НомерДокумента 		= СсылкаНаОбъект.Номер;  
	ОбластьПерваяСтр.Параметры.Дата 				= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д");
	ОбластьПерваяСтр.Параметры.ДатаУтверждения		= Формат(ДатаУтверждения, "ДФ='«дд» ММММ гггг ""г.""'; ДП='«   » _______________201  г.'");
	
	ОбластьПерваяСтр.Параметры.УтверждающийПротокол = СтрЗаменить(Утверждающий,"^p",Символы.ПС);	
	
	#Область ПолучениеСтрокиСКодами 
	
	
	ТЗКодПробы = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПробы.Свернуть("Лаборатория,КодПробы");
	Коды = "";
	
	СтрокаКодыПрод = "";
	
	ТЗКодовПроб = Новый ТаблицаЗначений;
	ТЗКодовПроб.Колонки.Добавить("ПорядковыйНомерКода", Новый ОписаниеТипов("Строка"));
	ТЗКодовПроб.Колонки.Добавить("ПолныйКодПробы"     , Новый ОписаниеТипов("Строка"));
	
	
	
	Для каждого Стр Из ТЗКодПробы Цикл
		
		кодПр = Сред(Стр.КодПробы,1,Найти(Стр.КодПробы,".")-1);
		НСТР = ТЗКодовПроб.Добавить();
		НСТР.ПорядковыйНомерКода = кодПр; 
		НСТР.ПолныйКодПробы= Стр.КодПробы;
		
	КонецЦикла; 
	ТЗКодовПроб.Сортировать("ПолныйКодПробы возр"); 
	
	
	ТЗПорядковыйНомерКода = ТЗКодовПроб.Скопировать();
	ТЗПорядковыйНомерКода.Свернуть("ПорядковыйНомерКода");
	ТЗПорядковыйНомерКода.Сортировать("ПорядковыйНомерКода возр");
	
	Для каждого Стр Из ТЗПорядковыйНомерКода Цикл
		
		Отбор = Новый Структура("ПорядковыйНомерКода",Стр.ПорядковыйНомерКода);		
		НайденныеСтроки = ТЗКодовПроб.НайтиСтроки(Отбор); 		
		КодыЛаб = "";
		Для каждого НайдСтр Из НайденныеСтроки Цикл
			
			кодПр = Сред(НайдСтр.ПолныйКодПробы,Найти(НайдСтр.ПолныйКодПробы,".")+1);
			КодыЛаб = КодыЛаб + "." + Сред(кодПр,1,Найти(кодПр,".")-1);  							
			
		КонецЦикла;  
		
		ДатаПробы = Сред(кодПр,Найти(кодПр,".")+1);
		
		Если  ЗначениеЗаполнено(СтрокаКодыПрод)   Тогда
			
			СтрокаКодыПрод = СтрокаКодыПрод + "; " + Стр.ПорядковыйНомерКода + КодыЛаб + "." + ДатаПробы;
			
		Иначе	
			
			СтрокаКодыПрод = Стр.ПорядковыйНомерКода + КодыЛаб + "." + ДатаПробы;     
			
		КонецЕсли;	
		
	КонецЦикла; 
	
	ОбластьПерваяСтр.Параметры.КодПробыСборный = СтрокаКодыПрод;
	#КонецОбласти
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.КонтрагентСтрока) Тогда 			
		ОбластьПерваяСтр.Параметры.Контрагент = СсылкаНаОбъект.КонтрагентСтрока;
		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент) = Тип("СправочникСсылка._ИМЦ_Контрагенты")  Тогда
		
		Если  ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора) ТОгда
			ОбластьПерваяСтр.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора;
		ИначеЕсли    ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.ПолноеНаименование)  Тогда 
			ОбластьПерваяСтр.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
		Иначе
			ОбластьПерваяСтр.Параметры.Контрагент = СсылкаНаОбъект.Контрагент;  
		КонецЕсли;
		
	Иначе
		
		ОбластьПерваяСтр.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;    
		
	КонецЕсли;
	
	ОбластьПерваяСтр.Параметры.НаименованиеПробы = СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ДополнительныеСведения;
	
	ОбластьПерваяСтр.Параметры.Адрес                  = СсылкаНаОбъект.ЮрАдресЗаявителя; 
	ОбластьПерваяСтр.Параметры.Изготовитель           = СсылкаНаОбъект.Изготовитель;
	ОбластьПерваяСтр.Параметры.ЮрАдресИзготовитель    = СсылкаНаОбъект.ЮридическийАдресИзготовителя;
	ОбластьПерваяСтр.Параметры.ФактАдресИзготовитель  = СсылкаНаОбъект.ФактическийАдресИзготовителя;
	ОбластьПерваяСтр.Параметры.ДатаИВремяИзготовления = СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ДатаИзготовления; 
	ОбластьПерваяСтр.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения;
		
	ОбластьПерваяСтр.Параметры.ДатаОтбора = Формат(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб,"ДЛФ=Д") + ?(ЗначениеЗаполнено(час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)),"  час " + час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)+ "  мин "+ Минута(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб),"");
	//ОбластьПодвал.Параметры.ДатаПоступления    = СсылкаНаОбъект.ОбщееНаправление.ДатаИВремяПоступления;
	//ОбластьПерваяСтр.Параметры.Ответственный   = СсылкаНаОбъект.Ответственный;
	ОбластьПерваяСтр.Параметры.ФИОДолжностьОтобр      = СсылкаНаОбъект.ФИОДолжностьОтобр;

	ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование");
	
	ТЗКодПроб.Колонки.Добавить("КодЛаборатории",Новый ОписаниеТипов("Строка"));
	Для каждого СтрТЗКодПроб из ТЗКодПроб Цикл
		
		СтрТЗКодПроб.КодЛаборатории = СтрТЗКодПроб.Лаборатория.КодЛаборатории;
		
	КонецЦикла;	
	ТЗКодПроб.Сортировать("КодЛаборатории +"); 	
	
	КолСтр =  ТЗКодПроб.Количество();	
	НомераРезультатаИсследованияИДаты = "";
	
	щщ = 0;
	Для каждого Стр из ТЗКодПроб Цикл
		щщ = щщ+1;
		НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты +"№ " +  Стр.ЛабИсследование.НомерВЖурнале + " от " + Формат(Стр.ЛабИсследование.Дата,"ДЛФ=Д")+ ",  ";
		НомераРезультатаИсследованияИДаты = ?(КолСтр = щщ,НомераРезультатаИсследованияИДаты + " ",НомераРезультатаИсследованияИДаты + ",");
	КонецЦикла;	
	
	ДатаНачалоИспытаний    = '00010101';
	ДатаОкончанияИспытаний = '00010101';
	
	Для каждого Стр Из ТЗКодПроб Цикл
		
		ТЗВр = Стр.ЛабИсследование.ПродуктыПоказатели.Выгрузить(,"ДатаИсследования, ДатаРезультата");
		ТЗВр.Свернуть("ДатаИсследования, ДатаРезультата");
		Если  ТЗВр.Количество()   Тогда
			
			Для каждого СтрТЗВр Из ТЗВр Цикл
				
				Если  ЗначениеЗаполнено(ДатаНачалоИспытаний)   Тогда
					
					ДатаНачалоИспытаний = ?(ДатаНачалоИспытаний < СтрТЗВр.ДатаИсследования,ДатаНачалоИспытаний, СтрТЗВр.ДатаИсследования);
				Иначе	
					ДатаНачалоИспытаний =  СтрТЗВр.ДатаИсследования; 
				КонецЕсли;	 
				
				ДатаОкончанияИспытаний = ?(ДатаОкончанияИспытаний > СтрТЗВр.ДатаРезультата, ДатаОкончанияИспытаний, СтрТЗВр.ДатаРезультата);
				
			КонецЦикла;    			
			
		КонецЕсли;	 
		
	КонецЦикла;   
	
	ОбластьПерваяСтр.Параметры.ДатаНачалоИспытаний    = Формат(ДатаНачалоИспытаний,"ДФ='dd.MM.yyyy ""г.""'");
	ОбластьПерваяСтр.Параметры.ДатаОкончанияИспытаний = Формат(ДатаОкончанияИспытаний, "ДФ='dd.MM.yyyy ""г.""'");
	
	
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда  	
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ  «Центр гигиены и эпидемиологии в Самарской области в городе Сызрани».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Чапаевск».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда 		
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в Сергиевском районе».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Тольятти».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в Нефтегорском районе».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Отрадном».";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ Филиал ФБУЗ «Центр гигиены и эпидемиологии в Самарской области в городе Новокуйбышевске».";
		
	Иначе	
		ОбластьПерваяСтр.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ ФБУЗ ""Центр гигиены и эпидемиологии в Самарской области"".";
	КонецЕсли;  	
	
	
	
	ТабДок.Вывести(ОбластьПерваяСтр);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	#КонецОбласти
	
	//                        ЛАБОАРТОРНАЯ ЧАСТЬ
	//======================================================================================================================	
	
	#Область ЛАБОАРТОРНАЯ_ЧАСТЬ
	
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьТаблицаШапка   = МакетОбработки.ПолучитьОбласть("ТаблицаШапка"); 
	ОбластьТабЛаборатория = МакетОбработки.ПолучитьОбласть("ТабЛаборатория");
	ОбластьТаблица        = МакетОбработки.ПолучитьОбласть("Таблица"); 
	
	
	Показатели = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	Показатели.Свернуть("Лаборатория,КодПробы,ГУИД,Показатель,Услуга,Примечание,Объем,Результат,ПродуктИсследования,РезультатСтрока, Значение, РасчетноеЗначение,ДополнительныеСведения, Значение,Погрешность,ГигиеническийНорматив,ЛабИсследование");
	
	ТабДок.Вывести(ОбластьТаблицаШапка);
	
	Для каждого СтрКод из ТЗКодПроб Цикл
		
		Если Найти(СтрКод.Лаборатория,"Санитарно-гигиеническая") Тогда 
			ОбластьТабЛаборатория.Параметры.Лаборатория = "КОЛИЧЕСТВЕННЫЙ ХИМИЧЕСКИЙ АНАЛИЗ";
		ИначеЕсли Найти(СтрКод.Лаборатория,"бактериолог") Тогда
			ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";
		ИначеЕсли Найти(СтрКод.Лаборатория,"Микробиологич") Тогда
			ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";	
		ИначеЕсли  Найти(СтрКод.Лаборатория,"особо опасных") Тогда
			ОбластьТабЛаборатория.Параметры.Лаборатория = "ИССЛЕДОВАНИЯ ОСОБО ОПАСНЫХ ИНФЕКЦИЙ";
		ИначеЕсли Найти(СтрКод.Лаборатория,"ПЦР") Тогда   
			ОбластьТабЛаборатория.Параметры.Лаборатория = "МОЛЕКУЛЯРНО-ГЕНЕТИЧЕСКИЕ ИССЛЕДОВАНИЯ";
		ИначеЕсли Найти(СтрКод.Лаборатория,"радио") Тогда  
			ОбластьТабЛаборатория.Параметры.Лаборатория = "РАДИОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
		ИначеЕсли Найти(СтрКод.Лаборатория,"токс") Тогда  			
			ОбластьТабЛаборатория.Параметры.Лаборатория = "ТОКСИКОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
		КонецЕсли;
		
		ОбластьТабЛаборатория.Параметры.НомерВЖурналеЛаборатории = СтрКод.ЛабИсследование.НомерВЖурнале;
		
		
		ТабДок.Вывести(ОбластьТабЛаборатория);     
		//
		ПараметрОтбора = новый структура("КодПробы",СтрКод.КодПробы);
		Найденное = Показатели.НайтиСтроки(ПараметрОтбора);
		
		Для каждого СтрНайд из Найденное Цикл
			
			ОбластьТаблица.Параметры.Показатель       = СтрНайд.Показатель;
			
			Если ЗначениеЗаполнено(СтрНайд.РезультатСтрока)Тогда				
				Результат = ?(ЗначениеЗаполнено(СтрНайд.РезультатСтрока), СтрНайд.РезультатСтрока, Строка(СтрНайд.Значение)); 
			Иначе                                                                                                         				
				Результат = ?(ЗначениеЗаполнено(СтрНайд.Погрешность), Строка(СтрНайд.Значение) + "±" + Строка(СтрНайд.Погрешность), Строка(СтрНайд.Значение)); 
			КонецЕсли;		
			//
			
			Если ЗначениеЗаполнено(Результат) Тогда
				ОбластьТаблица.Параметры.Результат = ДобавитьСимволСтепень(Результат); 
			Иначе
				ОбластьТаблица.Параметры.Результат = "";
			КонецЕсли;
			 
			
			ОбластьТаблица.Параметры.РасчетноеЗначение    = СтрНайд.РасчетноеЗначение;
			
			//Сообщить("РасчетноеЗначение " + СтрНайд.РасчетноеЗначение + " Значение " + СтрНайд.Значение);
			
			Если  ЗначениеЗаполнено(СтрНайд.Значение)  и ЗначениеЗаполнено(СтрНайд.РасчетноеЗначение)  Тогда
				
				Если СтрНайд.РасчетноеЗначение > СтрНайд.Значение Тогда
					
					Если СтрНайд.Значение <> 0 и СтрНайд.РасчетноеЗначение <> 0 Тогда 
						ОбластьТаблица.Параметры.ПроцентОтклонения  = "-" + Строка(Окр((СтрНайд.Значение - СтрНайд.РасчетноеЗначение)/СтрНайд.РасчетноеЗначение*100,1));
					Иначе
						ОбластьТаблица.Параметры.ПроцентОтклонения = "";	
					КонецЕсли;
					
				Иначе
					
					Если СтрНайд.РасчетноеЗначение <> 0 Тогда
						ОбластьТаблица.Параметры.ПроцентОтклонения  = "+" + Строка(Окр((СтрНайд.Значение - СтрНайд.РасчетноеЗначение)/СтрНайд.РасчетноеЗначение*100,1));
					Иначе
						ОбластьТаблица.Параметры.ПроцентОтклонения = "";	
					КонецЕсли;
					
				КонецЕсли;
								
			Иначе	
				
				ОбластьТаблица.Параметры.ПроцентОтклонения = "";
				
			КонецЕсли;	
			
			Если НаличиеЗаключения Тогда      				
			   ОбластьТаблица.Параметры.ВеличинаДопустимогоУровня = ДобавитьСимволСтепень(СтрНайд.Объем);    			
			КонецЕсли;	
			
						
			ОбластьТаблица.Параметры.РасчетноеЗначение  = СтрНайд.РасчетноеЗначение;  
			ОбластьТаблица.Параметры.НД = СтрНайд.Примечание.ПолноеНаименование; 
			
			ТабДок.Вывести(ОбластьТаблица);			
			
		КонецЦикла;	
		
	КонецЦикла;
	
	
	#КонецОбласти
	
	////                      ВТОРАЯ СТРАНИЦА
	//======================================================================================================================
	
	#Область Заключение   	
	
	Если НаличиеЗаключения Тогда
		
		#Область Заключение
		
		ОбластьВтораяСтр= МакетОбработки.ПолучитьОбласть("ВтораяСтр");
		
		ОбластьВтораяСтр.Параметры.Заключение    = СсылкаНаОбъект.Заключение;	
		ОбластьВтораяСтр.Параметры.Должность     = СсылкаНаОбъект.Ответственный.Сотрудник.Должность;
		ОбластьВтораяСтр.Параметры.Ответственный = СсылкаНаОбъект.Ответственный.Сотрудник;
		ОбластьВтораяСтр.Параметры.Оформитель    = СсылкаНаОбъект.Оформитель.Сотрудник;
		
		ТабДок.Вывести(ОбластьВтораяСтр);
		
		#КонецОбласти
		
	Иначе
		
		#Область Без_Заключение
		
		ОбластьВтораяСтрБезЗаключения = МакетОбработки.ПолучитьОбласть("ВтораяСтрБезЗаключения");  	
		
		ОбластьВтораяСтрБезЗаключения.Параметры.Оформитель    = СсылкаНаОбъект.Оформитель.Сотрудник;   
		
		ТабДок.Вывести(ОбластьВтораяСтрБезЗаключения);
		
		#КонецОбласти
		
	КонецЕсли;	
	
	
	#КонецОбласти
	
	//                        Нижний колонтитул
	//======================================================================================================================
	
	#Область Нижний_Колонтитул
	
	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ТекстСправа =
	"
	|                                                                                                                  
	|Протокол № " + СсылкаНаОбъект.Номер+ "  от  " + Формат(СсылкаНаОбъект.Дата,"ДЛф=Д") + "                                 Стр.[&НомерСтраницы] из [&СтраницВсего]";  
	
	Если НаличиеЗаключения Тогда
		ТабДок.НижнийКолонтитул.ТекстВЦентре = 
		"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
		|                    письменного разрешения Органа инспекции";   		
	Иначе  		
		ТабДок.НижнийКолонтитул.ТекстВЦентре = 
		"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
		|                    письменного разрешения Испытательной лаборатории (центра)";    		
	КонецЕсли;
	
	ТабДок.НижнийКолонтитул.Шрифт = Новый Шрифт("Times New Roman",10,,Истина);
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.РазмерКолонтитулаСнизу = 20;
	ТабДок.ПолеСнизу              = 30;
	
	#КонецОбласти
	
	
	Возврат ТабДок;
	
КонецФункции

Функция ДобавитьСимволСтепень(Входящая)
	
	Первая = Найти(Входящая,"@");
	Если Первая > 0 Тогда
		
		Если Найти(Входящая,"@1@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@1@","¹");
		ИначеЕсли Найти(Входящая,"@2@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@2@",Символ(178));
		ИначеЕсли Найти(Входящая,"@3@") > 0 Тогда
			//Исходящая = СтрЗаменить(Входящая,"@3@",Символ(179));
			Исходящая = СтрЗаменить(Входящая,"@3@","³");
		ИначеЕсли Найти(Входящая,"@4@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@4@",Символ(8308));
		ИначеЕсли Найти(Входящая,"@5@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@5@",Символ(8309));
		ИначеЕсли Найти(Входящая,"@6@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@6@",Символ(8310));
		ИначеЕсли Найти(Входящая,"@7@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@7@",Символ(8311));
		ИначеЕсли Найти(Входящая,"@8@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@8@",Символ(8312));
		ИначеЕсли Найти(Входящая,"@9@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@9@",Символ(8313));
		КонецЕсли;
		
		Если Найти(Входящая,"@") Тогда 
			Исходящая = ДобавитьСимволСтепень(Исходящая);
		КонецЕсли;	

	Иначе
		Исходящая = Входящая;
	КонецЕсли;	
	
	Возврат Исходящая;
	
КонецФункции	

&НаСервере
Функция НайдемНашФайл(ИмяФайла)	Экспорт
	Возврат Справочники.Файлы.НайтиПоНаименованию(ИмяФайла);
КонецФункции	

&НаКлиенте
Процедура Команда1(Команда)
	
	ТабДок = ПечатьТабДок(Объект.СсылкаНаОбъект);
	Если Элементы.СсылкаНаОбъект.Видимость  Тогда		
		ТабДок.Показать(); 		
	Иначе                  		
		_ИМЦ_МодульФайлыПечатьКлиент.СозданиеФайлаПриПечатиИзВнешнихОбработок(ТабДок,Объект.ССылкаНаОбъект, ПрефиксНаименованияФайла, ЭтаФорма);
		ЭтаФорма.Закрыть();           		
	КонецЕсли;


КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаСуществованияИмени(ИмяВрем)
	
	СсылкаНаФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяВрем);
	Если СсылкаНаФайл = Справочники.Файлы.ПустаяСсылка() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;		
	КонецЕсли;
	
	
КонецФункции

&НаСервере
Процедура ЗаполнениеСпискаУтверждающих()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подпись,
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Ссылка.Наименование КАК Представление
	                      |ИЗ
	                      |	Справочник._ИМЦ_Подписывающие.ПодписываемыеДокументы КАК _ИМЦ_ПодписывающиеПодписываемыеДокументы
	                      |ГДЕ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подразделение = &Подразделение
	                      |	И _ИМЦ_ПодписывающиеПодписываемыеДокументы.Документ ССЫЛКА Документ._ИМЦ_ЕдиныйПротокол
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Представление");
	
	Запрос.УстановитьПараметр("Подразделение",Объект.СсылкаНаОбъект.Подразделение);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если  Выгрузка.Количество() Тогда
			
		Если  Выгрузка.Количество() = 1   Тогда
			
			Утверждающий = Выгрузка[0].Подпись;
			
		Иначе    
			Элементы.Утверждающий.СписокВыбора.Очистить();
			
			Для каждого Стр Из Выгрузка Цикл
				
				Элементы.Утверждающий.СписокВыбора.Добавить(Стр.Подпись, Стр.Представление);  					
				
			КонецЦикла;
		КонецЕсли;	
				
	КонецЕсли;	 
	

	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	
	Если  ЗначениеЗаполнено(Объект.СсылкаНаОбъект)   Тогда
		
	    ЗаполнениеСпискаУтверждающих();
	
	КонецЕсли;	

	
КонецПроцедуры

&НаСервере
Функция МасссивАдресовЛабораторий(Протокол)
	
	АдресаЛабораторий = "";
	
	Если Протокол.Пробы.Количество() Тогда
		
		ТЗ_Лаб = Протокол.Пробы.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	Иначе   
		
		ТЗ_Лаб = Протокол.ИсследованияПоЛабораториям.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	КонецЕсли;	
	
	Для каждого Стр Из ТЗ_Лаб Цикл
		
		Если ЗначениеЗаполнено(Стр.Лаборатория.Примечание) Тогда
			
			Если ЗначениеЗаполнено(АдресаЛабораторий) Тогда
				
				Если Найти(АдресаЛабораторий, Стр.Лаборатория.Примечание) = 0 Тогда
					
					АдресаЛабораторий = АдресаЛабораторий + "
					|" + Стр.Лаборатория.Примечание; 					
					
				КонецЕсли;	
								
			Иначе
			    АдресаЛабораторий = "Адрес осуществления деятельности лаборатории:";
				АдресаЛабораторий = АдресаЛабораторий + "
				|" + Стр.Лаборатория.Примечание;
			
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат	 АдресаЛабораторий;
	
КонецФункции
