//======================================================================================================================

#Область ОбРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда		
		Объект.СсылкаНаОбъект = Параметры.СсылкаНаОбъект;  	
		
		Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.Заключение) Тогда  			
		    НаличиеЗаключения = Истина;                                 			
		КонецЕсли;
		
		ДатаУтверждения = Объект.СсылкаНаОбъект.Дата; 
		ЗаполнениеСпискаУтверждающих();
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект) Тогда 
				
		Элементы.СсылкаНаОбъект.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	
	Если  ЗначениеЗаполнено(Объект.СсылкаНаОбъект)   Тогда
		   			      
	    ЗаполнениеСпискаУтверждающих();
	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_КОМАНД

&НаКлиенте
Процедура Команда1(Команда)
	
	ТабДок = ПечатьТабДок(Объект.СсылкаНаОбъект); 
	
	Если Элементы.СсылкаНаОбъект.Видимость  Тогда		
		ТабДок.Показать(); 		
	Иначе  
		
		_ИМЦ_МодульФайлыПечатьКлиент.СозданиеФайлаПриПечатиИзВнешнихОбработок(ТабДок,Объект.ССылкаНаОбъект, ПрефиксНаименованияФайла, ЭтаФорма);
		ЭтаФорма.Закрыть();           		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

&НаСервере
Функция ПечатьТабДок(СсылкаНаОбъект)
	
	ЭтоПерваяСтраница = Истина;
	МасВыводимыхОбластей = Новый Массив;
	
	ПрефиксНаименованияФайла = "Проткол_" + СсылкаНаОбъект.Номер;
	ТабДок = Новый ТабличныйДокумент;
	УстановкаПараметровОбласти(ТабДок);
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");	
	МакетОбработки = ЭтотОбъект.ПолучитьМакет("Макет");	
	Филиал = "";                                       	
	
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда
		Филиал = СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		//ИмяПечФормы	= "";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/7.1";   			
		КонецЕсли;
		ФактАдр		= 	"Фактический адрес: 446001, Самарская область, г. Сызрань, ул Советская 100
		|Телефон,Факс: (846) 4-98-61-21 
		|ОКПО 76785050, ОГРН 1056316020155 ИНН/КПП 6316098875/ 632502001";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.512226 от «20» сентября 2013 года 
		|Действителен до  «20» сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф-23/08/01-14";
		ФактАдр		= 	"Фактический адрес: 446100, Самарская область,  г. Чапаевск, ул. Ленина, 95
		|Телефон,Факс: 8(846-39) 3-02-56
		|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/633002001";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.512080 от 20 сентября 2013 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда 		
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446600, Самарская область, г.Нефтегорск, ул.Нефтяников, д 1
		|Телефон,Факс: (846 70) 2-18-07
		|ОКПО 81848048, ОГРН 1056316020155 ИНН/КПП 6316098875/ 637732005";
		Аттестат	=	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.513557 от 20 сентября 2013 года    
		|Действителен до 20 сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.510862   выдан  «06» ноября  2014 г.   
		|Внесен в реестр аккредитованных лиц: «20»  октября 2014 г.";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446541, Самарская область, Сергиевский район, с. Сергиевск, ул.
		|Н.Краснова, д. 84-А 
		|Телефон,Факс: : 8(84655) 2-44-82 
		|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/ 638132001";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.513603   от 06 июля 2011 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.513608 от 08 июня 2016 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= 	"Фактический адрес: 446205, Самарская область, г. Новокуйбышевск, 
		|ул. Льва Толстого, 19 а
		|Телефон,Факс: (846)260-37-97 Тел/Факс: 8-846-35-4-00-75   
		|E-mail: gossan1@samtel.ru
		|ОКПО 76781135, ОГРН 1056316020155 ИНН/КПП 6316098875 / 633002002";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
		|№ РОСС RU.0001.510863 от 20 сентября 2013 года
		|Действителен до «20»  сентября 2018 года";
		
	Иначе	
		Аттестат = "АТТЕСТАТ аккредитации Испытательной лаборатории (центра) 
		|№ РОСС RU.0001.510137, дата включения в реестр 22.06.2015г. ";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/7.1";   			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ИмяПечФормы) Тогда
		ИмяПечФормы = "1.2.7/7.1";   			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.Пробы.Количество()) Тогда
		
		#Область ТЗ_Пробы
		
		
		//                        ПЕРВАЯ СТРАНИЦА
		//======================================================================================================================	
		
		#Область Первая_Страница
		
		
		ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.ИмяФормы = ИмяПечФормы;
		УстановкаПараметровОбласти(ОбластьШапка);	
		//ТабДок.Вывести(ОбластьШапка);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьШапка",ОбластьШапка));
		
		Если ЗначениеЗаполнено(Филиал) Тогда
			
			Филиал = СтрЗаменить(Филиал,"ФБУЗ", "Федерального бюджетного учреждения здравоохранения");
			Филиал = СтрЗаменить(Филиал,"«", "
			|«");
			
			ОбластьФилиал = МакетОбработки.ПолучитьОбласть("Филиал");
			УстановкаПараметровОбласти(ОбластьФилиал);
			ОбластьФилиал.Параметры.Филиал =  Филиал;
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФилиал",ОбластьФилиал));
			
		КонецЕсли;
		
		
		ОбластьЮрАдресШапка = МакетОбработки.ПолучитьОбласть("ЮрАдресШапка");
		УстановкаПараметровОбласти(ОбластьЮрАдресШапка);
		//ТабДок.Вывести(ОбластьЮрАдресШапка);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресШапка", ОбластьЮрАдресШапка));
		
		
		Если ЗначениеЗаполнено(Филиал) Тогда
			
			ОбластьФактическийАдресФилиала = МакетОбработки.ПолучитьОбласть("ФактическийАдресФилиала");
			УстановкаПараметровОбласти(ОбластьФактическийАдресФилиала);
			ОбластьФактическийАдресФилиала.Параметры.ФактическийАдресФилиала = ФактАдр;
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактическийАдресФилиала",ОбластьФактическийАдресФилиала));
			
		КонецЕсли;
		
		
		ОбластьАттестат = МакетОбработки.ПолучитьОбласть("Аттестат");
		УстановкаПараметровОбласти(ОбластьАттестат);
		ОбластьАттестат.Параметры.Аттестат = Аттестат;
		//ТабДок.Вывести(ОбластьАттестат);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьАттестат",ОбластьАттестат));
		
		
		ОбластьУтверждение = МакетОбработки.ПолучитьОбласть("Утверждение");
		УстановкаПараметровОбласти(ОбластьУтверждение);
		
		АдресаЛабораторий = МасссивАдресовЛабораторий(СсылкаНаОбъект);		
		ОбластьУтверждение.Параметры.АдресаЛабораторий = АдресаЛабораторий;
		
		ОбластьУтверждение.Параметры.УтверждающийПротокол	= СтрЗаменить(Утверждающий,"^p",Символы.ПС);
		ОбластьУтверждение.Параметры.ДатаУтверждения		= Формат(ДатаУтверждения,"ДФ='«дд» ММММ гггг ""г.""'; ДП='«   » _______________201  г.'");
		//	ТабДок.Вывести(ОбластьУтверждение);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьУтверждение",ОбластьУтверждение));
		
		ОбластьНомерДатаПротокола							= МакетОбработки.ПолучитьОбласть("НомерДатаПротокола");
		УстановкаПараметровОбласти(ОбластьНомерДатаПротокола);	
		ОбластьНомерДатаПротокола.Параметры.НомерДокумента	= СсылкаНаОбъект.Номер;  
		ОбластьНомерДатаПротокола.Параметры.Дата			= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д"); 
		//Если ЗначениеЗаполнено(СсылкаНаОбъект.ВзаменПротокола) Тогда
		//	
		//    ОбластьНомерДатаПротокола.Параметры.ВзаменПротокола = "взамен протокола №" + СсылкаНаОбъект.ВзаменПротокола.Номер 
		//	+ " от " + Формат(СсылкаНаОбъект.ВзаменПротокола.Дата,"ДЛф=Д")
		//
		//КонецЕсли;	 
		
		//ТабДок.Вывести(ОбластьНомерДатаПротокола);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНомерДатаПротокола",ОбластьНомерДатаПротокола));
		
		#Область ПолучениеСтрокиСКодами 
		
		ТЗКодПробы = СсылкаНаОбъект.Пробы.Выгрузить();
		ТЗКодПробы.Свернуть("КодПробы");
		//ТЗКодПробы.Сортировать("КодПробы возр");
		
		СтрокаКодыПрод = "";
		
		Для Каждого Стр Из ТЗКодПробы Цикл
			
			Если ЗначениеЗаполнено(СтрокаКодыПрод) Тогда
				
				СтрокаКодыПрод = СтрокаКодыПрод + "; " + Стр.КодПробы;
				
			Иначе
				СтрокаКодыПрод = Стр.КодПробы;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьКодОбразца	= МакетОбработки.ПолучитьОбласть("КодОбразца");
		УстановкаПараметровОбласти(ОбластьКодОбразца);	   	
		ОбластьКодОбразца.Параметры.КодПробыСборный = СтрокаКодыПрод;
		//ТабДок.Вывести(ОбластьКодОбразца);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьКодОбразца",ОбластьКодОбразца));
		
		#КонецОбласти
		
		#Область Наименование_Образца
		
		ОбластьНаименованиеОбразца	= МакетОбработки.ПолучитьОбласть("НаименованиеОбразца");
		УстановкаПараметровОбласти(ОбластьНаименованиеОбразца);
		
		ВремТЗНаименованияПроб = СсылкаНаОбъект.Пробы.Выгрузить(,"НаименованиеПробы");
		ВремТЗНаименованияПроб.Свернуть("НаименованиеПробы");
		
		Для каждого СтрВремТЗ Из ВремТЗНаименованияПроб Цикл  	
			
			Если ЗначениеЗаполнено(ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы)  Тогда
				ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы + ", " + СтрВремТЗ.НаименованиеПробы;
			Иначе
				ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = СтрВремТЗ.НаименованиеПробы;   
			КонецЕсли;
			
		КонецЦикла;
		
		//ТабДок.Вывести(ОбластьНаименованиеОбразца);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНаименованиеОбразца",ОбластьНаименованиеОбразца));
		
		
		#КонецОбласти
		
		#Область Заказчик
		
		ОбластьЗаказчик	= МакетОбработки.ПолучитьОбласть("Заказчик");
		УстановкаПараметровОбласти(ОбластьЗаказчик);
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.КонтрагентСтрока) Тогда 			
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.КонтрагентСтрока;  		
		ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент) = Тип("СправочникСсылка._ИМЦ_Контрагенты")  Тогда
			
			Если  ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора) ТОгда
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора;
			ИначеЕсли    ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.ПолноеНаименование)  Тогда 
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
			Иначе
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.Наименование;  
			КонецЕсли;
			
		Иначе
			
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;    
			
		КонецЕсли;
		//ТабДок.Вывести(ОбластьЗаказчик);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЗаказчик",ОбластьЗаказчик));
		
		#КонецОбласти
		
		ОбластьЮрАдресЗаказчика = МакетОбработки.ПолучитьОбласть("ЮрАдресЗаказчика");
		УстановкаПараметровОбласти(ОбластьЮрАдресЗаказчика);	
		ОбластьЮрАдресЗаказчика.Параметры.Адрес = СсылкаНаОбъект.ЮрАдресЗаявителя; 
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресЗаказчика",ОбластьЮрАдресЗаказчика));
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.Изготовитель) Тогда
			
			ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
			УстановкаПараметровОбласти(ОбластьИзготовитель);		
			//ТабДок.Вывести(ОбластьИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель",ОбластьИзготовитель));
			
			ОбластьИзготовитель2							= МакетОбработки.ПолучитьОбласть("Изготовитель2");
			УстановкаПараметровОбласти(ОбластьИзготовитель2);			
			ОбластьИзготовитель2.Параметры.Изготовитель = СсылкаНаОбъект.Изготовитель;
			//ТабДок.Вывести(ОбластьИзготовитель2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель2",ОбластьИзготовитель2));
			
			
		Иначе
			
			ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
			УстановкаПараметровОбласти(ОбластьИзготовитель);			
			ОбластьИзготовитель.Параметры.Изготовитель = "-";
			//ТабДок.Вывести(ОбластьИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель",ОбластьИзготовитель));
			
			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ЮридическийАдресИзготовителя) Тогда
			
			ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);		
			//	ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));
			
			
			ОбластьЮрАдерсИзготовителя2							= МакетОбработки.ПолучитьОбласть("ЮрАдресИзготовитель2");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя2);	                          
			ОбластьЮрАдерсИзготовителя2.Параметры.ЮрАдресИзготовитель = СсылкаНаОбъект.ЮридическийАдресИзготовителя;
			//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя2",ОбластьЮрАдерсИзготовителя2));
			
			
		Иначе
			
			ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);	
			ОбластьЮрАдерсИзготовителя.Параметры.ЮрАдресИзготовитель = "-";
			//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));
			
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ФактическийАдресИзготовителя) Тогда
			
			ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);		
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));
			
			ОбластьФактАдресИзготовитель2 = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель2");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель2);	
			ОбластьФактАдресИзготовитель2.Параметры.ФактАдресИзготовитель = СсылкаНаОбъект.ФактическийАдресИзготовителя;
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель2",ОбластьФактАдресИзготовитель2));
			
		Иначе
			
			ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);	
			//ОбластьФактАдресИзготовитель.Параметры.ФактАдресИзготовитель = "-";
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));
			
		КонецЕсли;
		
		ТЗ_ДатыИзготовления = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ДатаИзготовления");
		ТЗ_ДатыИзготовления.Свернуть("ДатаИзготовления");	
		
		Если ТЗ_ДатыИзготовления.Количество() Тогда
			
			ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
			ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = ""; 
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));
			
			ОбластьДатаИВремяИзготовления2	= МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления2");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления2);     
			
			ДатыИзготСТрока = "";
			Для Каждого СтрДатаИзгот Из ТЗ_ДатыИзготовления Цикл
				
				ДатаИзготовления = "";
				
				Если ЗначениеЗаполнено(Час(СтрДатаИзгот.ДатаИзготовления)) Или ЗначениеЗаполнено(Минута(СтрДатаИзгот.ДатаИзготовления)) Тогда
					ДатаИзготовленияСтрока = Формат(СтрДатаИзгот.ДатаИзготовления, "ДФ='dd.MM.yyyy ""ч""ЧЧ ""мин"" мм'"); 
				Иначе
					ДатаИзготовленияСтрока = Формат(СтрДатаИзгот.ДатаИзготовления, "ДФ=dd.MM.yyyy"); 
				КонецЕсли;
				
				ДатыИзготСТрока =  ?(ЗначениеЗаполнено(ДатыИзготСТрока), ДатыИзготСТрока + "; " + ДатаИзготовленияСтрока, ДатаИзготовленияСтрока); 
			КонецЦикла;
			ОбластьДатаИВремяИзготовления2.Параметры.ДатаИВремяИзготовления = ДатыИзготСТрока; 
			
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления2",ОбластьДатаИВремяИзготовления2));
			
			
		Иначе
			ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
			ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = "-";
			//ТабДок.Вывести(ОбластьДатаИВремяИзготовления);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ДополнительныеСведения) Тогда
			
			ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
			
			ОбластьДополнительныеСведения2	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);
			
			Если ЗначениеЗаполнено(СсылкаНаОбъект.АктОтбораПроб) Тогда
				
				Если ЗначениеЗаполнено(СсылкаНаОбъект.ВидАктаОбораПроб) Тогда
					
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
					+ " " + СсылкаНаОбъект.ВидАктаОбораПроб + " от " + СсылкаНаОбъект.АктОтбораПроб;	
				Иначе    
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
					+ "Акт отбора образцов (проб) пищевых продуктов (в том числе воды бутилированной)" + " от " + СсылкаНаОбъект.АктОтбораПроб;
				КонецЕсли;	
				
			Иначе
				ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения;
			КонецЕсли;

			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения2",ОбластьДополнительныеСведения2));
			
			
		Иначе
			
			ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
			ОбластьДополнительныеСведения.Параметры.ДополнительныеСведения = "-";
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
			
		КонецЕсли;
		
		ОбластьДатаОтбора	= МакетОбработки.ПолучитьОбласть("ДатаОтбора");
		УстановкаПараметровОбласти(ОбластьДатаОтбора);	
		ОбластьДатаОтбора.Параметры.ДатаОтбора = Формат(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб,"ДЛФ=Д") + ?(ЗначениеЗаполнено(час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)),"  час " + час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)+ "  мин "+ Минута(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб),"");
		//ТабДок.Вывести(ОбластьДатаОтбора);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОтбора",ОбластьДатаОтбора));
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ФИОДолжностьОтобр) Тогда
			
			ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
			
			
			ОбластьФИОДолжностьОтобр2 = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр2");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр2);
			ОбластьФИОДолжностьОтобр2.Параметры.ФИОДолжностьОтобр = СсылкаНаОбъект.ФИОДолжностьОтобр;    
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр2",ОбластьФИОДолжностьОтобр2));
			
		Иначе
			
			ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
			ОбластьФИОДолжностьОтобр.Параметры.ФИОДолжностьОтобр = "-";
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
			
		КонецЕсли;
		
		ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
		ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование");
		
		ТЗКодПроб.Колонки.Добавить("КодЛаборатории",Новый ОписаниеТипов("Строка"));
		Для каждого СтрТЗКодПроб из ТЗКодПроб Цикл
			
			СтрТЗКодПроб.КодЛаборатории = СтрТЗКодПроб.Лаборатория.КодЛаборатории;
			
		КонецЦикла;	
		ТЗКодПроб.Сортировать("КодЛаборатории +"); 	
		
		КолСтр =  ТЗКодПроб.Количество();	
		НомераРезультатаИсследованияИДаты = "";
		
		щщ = 0;
		Для Каждого СтрИсследование Из СсылкаНаОбъект.Пробы  Цикл
			
			МассивНомеров = ПолучитьНомераВЖуранале(СтрИсследование.Исследование);
			Для каждого ЭлМас из МассивНомеров Цикл
				щщ = щщ+1;
				НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты +"№ " +  ЭлМас + " от " + Формат(СтрИсследование.Исследование.Дата,"ДЛФ=Д");
				Если ЗначениеЗаполнено(НомераРезультатаИсследованияИДаты) и КолСтр <>  щщ Тогда
					НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты + ", ";
				КонецЕсли;
				//НомераРезультатаИсследованияИДаты = ?(КолСтр = щщ,НомераРезультатаИсследованияИДаты + " ",НомераРезультатаИсследованияИДаты + ",");
			КонецЦикла;
			
		КонецЦикла;

		
		ДатаНачалоИспытаний    = '00010101';
		ДатаОкончанияИспытаний = '00010101';
		
		Для каждого Стр Из ТЗКодПроб Цикл
			
			ТЗВр = Стр.ЛабИсследование.ПродуктыПоказатели.Выгрузить(,"ДатаИсследования, ДатаРезультата");
			ТЗВр.Свернуть("ДатаИсследования, ДатаРезультата");
			Если  ТЗВр.Количество()   Тогда
				
				Для каждого СтрТЗВр Из ТЗВр Цикл
					
					Если  ЗначениеЗаполнено(ДатаНачалоИспытаний)   Тогда
						
						ДатаНачалоИспытаний = ?(ДатаНачалоИспытаний < СтрТЗВр.ДатаИсследования,ДатаНачалоИспытаний, СтрТЗВр.ДатаИсследования);
					Иначе	
						ДатаНачалоИспытаний =  СтрТЗВр.ДатаИсследования; 
					КонецЕсли;	 
					
					ДатаОкончанияИспытаний = ?(ДатаОкончанияИспытаний > СтрТЗВр.ДатаРезультата, ДатаОкончанияИспытаний, СтрТЗВр.ДатаРезультата);
					
				КонецЦикла;    			
				
			КонецЕсли;	 
			
		КонецЦикла;   
		
		Исследования = СсылкаНаОбъект.Пробы.Выгрузить(,"Исследование");
		СтруктураДатыИсследования = ПолучитьДатыНачалаиОкончанияИсследования(Исследования);

		
		ОбластьДатаНачалоИспытаний = МакетОбработки.ПолучитьОбласть("ДатаНачалоИспытаний");
		УстановкаПараметровОбласти(ОбластьДатаНачалоИспытаний);	
				ОбластьДатаНачалоИспытаний.Параметры.ДатаНачалоИспытаний    =  СтруктураДатыИсследования.ДатаНачалаИсследований; //Формат(ДатаНачалоИспытаний,"ДФ='dd.MM.yyyy ""г.""'");
		//ТабДок.Вывести(ОбластьДатаНачалоИспытаний);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаНачалоИспытаний",ОбластьДатаНачалоИспытаний));
		
		
		ОбластьДатаОкончанияИспытаний = МакетОбработки.ПолучитьОбласть("ДатаОкончанияИспытаний");
		УстановкаПараметровОбласти(ОбластьДатаОкончанияИспытаний);	
		ОбластьДатаОкончанияИспытаний.Параметры.ДатаОкончанияИспытаний = СтруктураДатыИсследования.ДатаОкончанияИсследований;//Формат(ДатаОкончанияИспытаний, "ДФ='dd.MM.yyyy ""г.""'");
		//ТабДок.Вывести(ОбластьДатаОкончанияИспытаний);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОкончанияИспытаний",ОбластьДатаОкончанияИспытаний));
		
		
		ОбластьРезультатыИспытаний = МакетОбработки.ПолучитьОбласть("РезультатыИспытаний");
		УстановкаПараметровОбласти(ОбластьРезультатыИспытаний);
		ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ " + СсылкаНаОбъект._ИМЦ_Организация;
		
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьРезультатыИспытаний",ОбластьРезультатыИспытаний));
		
		Для Каждого ЭлОбл Из МасВыводимыхОбластей Цикл
			
			Если ТабДок.ПроверитьВывод(ЭлОбл.Область) Тогда
				ТабДок.Вывести(ЭлОбл.Область);
			Иначе
				Если ЭлОбл.ИмяОбласти = "ОбластьДополнительныеСведения2" Тогда
					#Область ДополнительныеСведения2
					
					ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
					УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
					МассивСлов = Новый Массив;
					МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.ДополнительныеСведения);
					щщ = 0; 
					
					ТекстСдобавлением = "";
					ТекстБезДобавления = "";
					
					Для щщ = 0 по МассивСлов.Количество()-1 Цикл
						
						ТекстСдобавлением = ТекстБезДобавления + Строка(МассивСлов[щщ]);
						ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстСдобавлением;
						
						Если ТабДок.ПроверитьВывод(ОбластьДополнительныеСведения2) = Ложь Тогда 	
							
							Если ТекстБезДобавления = "" Тогда 
								ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
								ТекстСдобавлением  = "";
								ТекстБезДобавления = "";
								щщ = щщ - 1;
								ЭтоПерваяСтраница = Ложь;
								
							Иначе    
								
								ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстБезДобавления;
								ТабДок.Вывести(ОбластьДополнительныеСведения2); 
								
								ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
								щщ = щщ - 1;
								ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
								УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
								ТекстСдобавлением = "";
								ТекстБезДобавления = "";
								ЭтоПерваяСтраница = Ложь;
								
							КонецЕсли;
							
						Иначе 
							
							Если  щщ = МассивСлов.Количество()-1 Тогда
								ТабДок.Вывести(ОбластьДополнительныеСведения2); 			
							КонецЕсли;	
							ТекстБезДобавления = ТекстСдобавлением;
							
						КонецЕсли;
						
					КонецЦикла;
					
					
					#КонецОбласти
					
				Иначе	
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДок.Вывести(ЭлОбл.Область);
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		
		#КонецОбласти
		
		//                        ЛАБОРАТОРНАЯ ЧАСТЬ
		//======================================================================================================================	
		
		#Область ЛАБОРАТОРНАЯ_ЧАСТЬ
		
		Если ЭтоПерваяСтраница Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			
			ОбластьПустаяСтрока =  МакетОбработки.ПолучитьОбласть("ПустаяСтрока"); 
			УстановкаПараметровОбласти(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьПустаяСтрока);
		КонецЕсли;
		
		ОтветСТруктура =  ФормированиеТабличногоДокумента(ТабДок);
		
		КолвоТаб = ОтветСТруктура.Количество();
		
		//Сообщить(" кол структ " + КолвоТаб);
		Для щщ = 0 По КолвоТаб-1 Цикл
			ТабДок.Вывести(ОтветСТруктура["табдок" + щщ]);
		КонецЦикла;
		
		#КонецОбласти
		
		#КонецОбласти
		
	Иначе
		
		#Область ТЗ_ИсследованияПоЛабораториям
		
		//                        ПЕРВАЯ СТРАНИЦА
		//======================================================================================================================	
		
		#Область Первая_Страница
		
		
		ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.ИмяФормы = ИмяПечФормы;
		УстановкаПараметровОбласти(ОбластьШапка);	
		//ТабДок.Вывести(ОбластьШапка);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьШапка",ОбластьШапка));
		
		Если ЗначениеЗаполнено(Филиал) Тогда
			
			Филиал = СтрЗаменить(Филиал,"ФБУЗ", "Федерального бюджетного учреждения здравоохранения");
			Филиал = СтрЗаменить(Филиал,"«", "
			|«");
			
			ОбластьФилиал = МакетОбработки.ПолучитьОбласть("Филиал");
			УстановкаПараметровОбласти(ОбластьФилиал);
			ОбластьФилиал.Параметры.Филиал =  Филиал;
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФилиал",ОбластьФилиал));
			
		КонецЕсли;
		
		
		ОбластьЮрАдресШапка = МакетОбработки.ПолучитьОбласть("ЮрАдресШапка");
		УстановкаПараметровОбласти(ОбластьЮрАдресШапка);
		//ТабДок.Вывести(ОбластьЮрАдресШапка);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресШапка", ОбластьЮрАдресШапка));
		
		
		Если ЗначениеЗаполнено(Филиал) Тогда
			
			ОбластьФактическийАдресФилиала = МакетОбработки.ПолучитьОбласть("ФактическийАдресФилиала");
			УстановкаПараметровОбласти(ОбластьФактическийАдресФилиала);
			ОбластьФактическийАдресФилиала.Параметры.ФактическийАдресФилиала = ФактАдр;
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактическийАдресФилиала",ОбластьФактическийАдресФилиала));
			
		КонецЕсли;
		
		
		ОбластьАттестат = МакетОбработки.ПолучитьОбласть("Аттестат");
		УстановкаПараметровОбласти(ОбластьАттестат);
		ОбластьАттестат.Параметры.Аттестат = Аттестат;
		//ТабДок.Вывести(ОбластьАттестат);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьАттестат",ОбластьАттестат));
		
		
		
		ОбластьУтверждение = МакетОбработки.ПолучитьОбласть("Утверждение");
		УстановкаПараметровОбласти(ОбластьУтверждение);
		
		АдресаЛабораторий = МасссивАдресовЛабораторий(СсылкаНаОбъект);		
		ОбластьУтверждение.Параметры.АдресаЛабораторий = АдресаЛабораторий;
		
		ОбластьУтверждение.Параметры.УтверждающийПротокол	= СтрЗаменить(Утверждающий,"^p",Символы.ПС);
		ОбластьУтверждение.Параметры.ДатаУтверждения		= Формат(ДатаУтверждения,"ДФ='«дд» ММММ гггг ""г.""'; ДП='«   » _______________201  г.'");
		//	ТабДок.Вывести(ОбластьУтверждение);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьУтверждение",ОбластьУтверждение));
		
		ОбластьНомерДатаПротокола							= МакетОбработки.ПолучитьОбласть("НомерДатаПротокола");
		УстановкаПараметровОбласти(ОбластьНомерДатаПротокола);	
		ОбластьНомерДатаПротокола.Параметры.НомерДокумента	= СсылкаНаОбъект.Номер;  
		ОбластьНомерДатаПротокола.Параметры.Дата			= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д"); 
		//ТабДок.Вывести(ОбластьНомерДатаПротокола);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНомерДатаПротокола",ОбластьНомерДатаПротокола));
		
		
		//Область = МакетОбработки.ПолучитьОбласть("");
		//УстановкаПараметровОбласти(Область);	
		
		
		#Область ПолучениеСтрокиСКодами 
		
		ТЗКодПробы = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
		ТЗКодПробы.Свернуть("КодПробы");
		ТЗКодПробы.Сортировать("КодПробы возр");
		
		СтрокаКодыПрод = "";
		
		Для Каждого Стр Из ТЗКодПробы Цикл
			
			Если ЗначениеЗаполнено(СтрокаКодыПрод) Тогда
				
				СтрокаКодыПрод = СтрокаКодыПрод + "; " + Стр.КодПробы;
				
			Иначе
				СтрокаКодыПрод = Стр.КодПробы;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ОбластьКодОбразца	= МакетОбработки.ПолучитьОбласть("КодОбразца");
		УстановкаПараметровОбласти(ОбластьКодОбразца);	   	
		ОбластьКодОбразца.Параметры.КодПробыСборный = СтрокаКодыПрод;
		//ТабДок.Вывести(ОбластьКодОбразца);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьКодОбразца",ОбластьКодОбразца));
		
		#КонецОбласти
		
		#Область Наименование_Образца
		
		ОбластьНаименованиеОбразца	= МакетОбработки.ПолучитьОбласть("НаименованиеОбразца");
		УстановкаПараметровОбласти(ОбластьНаименованиеОбразца);
		
		ВремТЗНаименованияПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ДополнительныеСведения");
		ВремТЗНаименованияПроб.Свернуть("ДополнительныеСведения");
		
		Для каждого СтрВремТЗ Из ВремТЗНаименованияПроб Цикл  	
			
			Если ЗначениеЗаполнено(ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы)  Тогда
				ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы + ", " + СтрВремТЗ.ДополнительныеСведения;
			Иначе
				ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = СтрВремТЗ.ДополнительныеСведения;   
			КонецЕсли;
			
		КонецЦикла;
		
		//ТабДок.Вывести(ОбластьНаименованиеОбразца);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНаименованиеОбразца",ОбластьНаименованиеОбразца));
		
		
		#КонецОбласти
		
		#Область Заказчик
		
		ОбластьЗаказчик	= МакетОбработки.ПолучитьОбласть("Заказчик");
		УстановкаПараметровОбласти(ОбластьЗаказчик);
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.КонтрагентСтрока) Тогда 			
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.КонтрагентСтрока;  		
		ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент) = Тип("СправочникСсылка._ИМЦ_Контрагенты")  Тогда
			
			Если  ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора) ТОгда
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора;
			ИначеЕсли    ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.ПолноеНаименование)  Тогда 
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
			Иначе
				ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.Наименование;  
			КонецЕсли;
			
		Иначе
			
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;    
			
		КонецЕсли;
		//ТабДок.Вывести(ОбластьЗаказчик);	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЗаказчик",ОбластьЗаказчик));
		
		#КонецОбласти
		
		ОбластьЮрАдресЗаказчика = МакетОбработки.ПолучитьОбласть("ЮрАдресЗаказчика");
		УстановкаПараметровОбласти(ОбластьЮрАдресЗаказчика);	
		ОбластьЮрАдресЗаказчика.Параметры.Адрес = СсылкаНаОбъект.ЮрАдресЗаявителя; 
		//ТабДок.Вывести(ОбластьЮрАдресЗаказчика);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресЗаказчика",ОбластьЮрАдресЗаказчика));
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.Изготовитель) Тогда
			
			ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
			УстановкаПараметровОбласти(ОбластьИзготовитель);		
			//ТабДок.Вывести(ОбластьИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель",ОбластьИзготовитель));
			
			ОбластьИзготовитель2							= МакетОбработки.ПолучитьОбласть("Изготовитель2");
			УстановкаПараметровОбласти(ОбластьИзготовитель2);			
			ОбластьИзготовитель2.Параметры.Изготовитель = СсылкаНаОбъект.Изготовитель;
			//ТабДок.Вывести(ОбластьИзготовитель2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель2",ОбластьИзготовитель2));
			
			
		Иначе
			
			ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
			УстановкаПараметровОбласти(ОбластьИзготовитель);			
			ОбластьИзготовитель.Параметры.Изготовитель = "-";
			//ТабДок.Вывести(ОбластьИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель",ОбластьИзготовитель));
			
			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ЮридическийАдресИзготовителя) Тогда
			
			ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);		
			//	ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));
			
			
			ОбластьЮрАдерсИзготовителя2							= МакетОбработки.ПолучитьОбласть("ЮрАдресИзготовитель2");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя2);	                          
			ОбластьЮрАдерсИзготовителя2.Параметры.ЮрАдресИзготовитель = СсылкаНаОбъект.ЮридическийАдресИзготовителя;
			//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя2",ОбластьЮрАдерсИзготовителя2));
			
			
		Иначе
			
			ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
			УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);	
			ОбластьЮрАдерсИзготовителя.Параметры.ЮрАдресИзготовитель = "-";
			//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));
			
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ФактическийАдресИзготовителя) Тогда
			
			ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);		
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));
			
			ОбластьФактАдресИзготовитель2 = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель2");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель2);	
			ОбластьФактАдресИзготовитель2.Параметры.ФактАдресИзготовитель = СсылкаНаОбъект.ФактическийАдресИзготовителя;
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель2);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель2",ОбластьФактАдресИзготовитель2));
			
		Иначе
			
			ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
			УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);	
			//ОбластьФактАдресИзготовитель.Параметры.ФактАдресИзготовитель = "-";
			//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));
			
		КонецЕсли;
		
		ТЗ_ДатыИзготовления = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ДатаИзготовления");
		ТЗ_ДатыИзготовления.Свернуть("ДатаИзготовления");	
		
		Если ТЗ_ДатыИзготовления.Количество() Тогда
			
			ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
			ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = ""; 
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));
			
			ОбластьДатаИВремяИзготовления2	= МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления2");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления2);     
			
			ДатыИзготСТрока = "";
			Для Каждого СтрДатаИзгот Из ТЗ_ДатыИзготовления Цикл
				
				ДатаИзготовления = "";
				
				Если ЗначениеЗаполнено(Час(СтрДатаИзгот.ДатаИзготовления)) Или ЗначениеЗаполнено(Минута(СтрДатаИзгот.ДатаИзготовления)) Тогда
					ДатаИзготовленияСтрока = Формат(СтрДатаИзгот.ДатаИзготовления, "ДФ='dd.MM.yyyy ""ч""ЧЧ ""мин"" мм'"); 
				Иначе
					ДатаИзготовленияСтрока = Формат(СтрДатаИзгот.ДатаИзготовления, "ДФ=dd.MM.yyyy"); 
				КонецЕсли;
				
				ДатыИзготСТрока =  ?(ЗначениеЗаполнено(ДатыИзготСТрока), ДатыИзготСТрока + "; " + ДатаИзготовленияСтрока, ДатаИзготовленияСтрока); 
			КонецЦикла;
			ОбластьДатаИВремяИзготовления2.Параметры.ДатаИВремяИзготовления = ДатыИзготСТрока; 
			
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления2",ОбластьДатаИВремяИзготовления2));
			
			
		Иначе
			ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
			УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
			ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = "-";
			//ТабДок.Вывести(ОбластьДатаИВремяИзготовления);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ДополнительныеСведения) Тогда
			
			ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
			//ТабДок.Вывести(ОбластьДополнительныеСведения);  
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
			
			ОбластьДополнительныеСведения2	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);
			
			Если ЗначениеЗаполнено(СсылкаНаОбъект.АктОтбораПроб) Тогда
				//ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
				//+ " Акт отбора образцов (проб) пищевых продуктов (в том числе воды бутилированной) " + СсылкаНаОбъект.АктОтбораПроб;
				Если ЗначениеЗаполнено(СсылкаНаОбъект.ВидАктаОбораПроб) Тогда
					
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
					+ " " + СсылкаНаОбъект.ВидАктаОбораПроб + " от " + СсылкаНаОбъект.АктОтбораПроб;	
				Иначе    
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
					+ "Акт отбора образцов (проб) пищевых продуктов (в том числе воды бутилированной)" + " от " + СсылкаНаОбъект.АктОтбораПроб;
				КонецЕсли;	
				
			Иначе
				ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения;
			КонецЕсли;
			//ТабДок.Вывести(ОбластьДополнительныеСведения2);  	
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения2",ОбластьДополнительныеСведения2));
			
			
		Иначе
			
			ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
			УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
			ОбластьДополнительныеСведения.Параметры.ДополнительныеСведения = "-";
			//ТабДок.Вывести(ОбластьДополнительныеСведения);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
			
		КонецЕсли;
		
		ОбластьДатаОтбора	= МакетОбработки.ПолучитьОбласть("ДатаОтбора");
		УстановкаПараметровОбласти(ОбластьДатаОтбора);	
		ОбластьДатаОтбора.Параметры.ДатаОтбора = Формат(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб,"ДЛФ=Д") + ?(ЗначениеЗаполнено(час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)),"  час " + час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)+ "  мин "+ Минута(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб),"");
		//ТабДок.Вывести(ОбластьДатаОтбора);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОтбора",ОбластьДатаОтбора));
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ФИОДолжностьОтобр) Тогда
			
			ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
			
			
			ОбластьФИОДолжностьОтобр2 = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр2");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр2);
			ОбластьФИОДолжностьОтобр2.Параметры.ФИОДолжностьОтобр = СсылкаНаОбъект.ФИОДолжностьОтобр;    
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр2",ОбластьФИОДолжностьОтобр2));
			
		Иначе
			
			ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
			УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
			ОбластьФИОДолжностьОтобр.Параметры.ФИОДолжностьОтобр = "-";
			//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
			МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
			
		КонецЕсли;
		
		ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
		ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование");
		
		ТЗКодПроб.Колонки.Добавить("КодЛаборатории",Новый ОписаниеТипов("Строка"));
		Для каждого СтрТЗКодПроб из ТЗКодПроб Цикл
			
			СтрТЗКодПроб.КодЛаборатории = СтрТЗКодПроб.Лаборатория.КодЛаборатории;
			
		КонецЦикла;	
		ТЗКодПроб.Сортировать("КодЛаборатории +"); 	
		
		КолСтр =  ТЗКодПроб.Количество();	
		НомераРезультатаИсследованияИДаты = "";
		
		щщ = 0;
		Для каждого Стр из ТЗКодПроб Цикл
			щщ = щщ+1;
			НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты +"№ " +  Стр.ЛабИсследование.НомерВЖурнале + " от " + Формат(Стр.ЛабИсследование.Дата,"ДЛФ=Д")+ ",  ";
			НомераРезультатаИсследованияИДаты = ?(КолСтр = щщ,НомераРезультатаИсследованияИДаты + " ",НомераРезультатаИсследованияИДаты + ",");
		КонецЦикла;	
		
		ДатаНачалоИспытаний    = '00010101';
		ДатаОкончанияИспытаний = '00010101';
		
		Для каждого Стр Из ТЗКодПроб Цикл
			
			ТЗВр = Стр.ЛабИсследование.ПродуктыПоказатели.Выгрузить(,"ДатаИсследования, ДатаРезультата");
			ТЗВр.Свернуть("ДатаИсследования, ДатаРезультата");
			Если  ТЗВр.Количество()   Тогда
				
				Для каждого СтрТЗВр Из ТЗВр Цикл
					
					Если  ЗначениеЗаполнено(ДатаНачалоИспытаний)   Тогда
						
						ДатаНачалоИспытаний = ?(ДатаНачалоИспытаний < СтрТЗВр.ДатаИсследования,ДатаНачалоИспытаний, СтрТЗВр.ДатаИсследования);
					Иначе	
						ДатаНачалоИспытаний =  СтрТЗВр.ДатаИсследования; 
					КонецЕсли;	 
					
					ДатаОкончанияИспытаний = ?(ДатаОкончанияИспытаний > СтрТЗВр.ДатаРезультата, ДатаОкончанияИспытаний, СтрТЗВр.ДатаРезультата);
					
				КонецЦикла;    			
				
			КонецЕсли;	 
			
		КонецЦикла;   
		
		ОбластьДатаНачалоИспытаний = МакетОбработки.ПолучитьОбласть("ДатаНачалоИспытаний");
		УстановкаПараметровОбласти(ОбластьДатаНачалоИспытаний);	
		ОбластьДатаНачалоИспытаний.Параметры.ДатаНачалоИспытаний    = Формат(ДатаНачалоИспытаний,"ДФ='dd.MM.yyyy ""г.""'");
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаНачалоИспытаний",ОбластьДатаНачалоИспытаний));
		
		ОбластьДатаОкончанияИспытаний = МакетОбработки.ПолучитьОбласть("ДатаОкончанияИспытаний");
		УстановкаПараметровОбласти(ОбластьДатаОкончанияИспытаний);	
		ОбластьДатаОкончанияИспытаний.Параметры.ДатаОкончанияИспытаний = Формат(ДатаОкончанияИспытаний, "ДФ='dd.MM.yyyy ""г.""'");
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОкончанияИспытаний",ОбластьДатаОкончанияИспытаний));
		
		ОбластьРезультатыИспытаний = МакетОбработки.ПолучитьОбласть("РезультатыИспытаний");
		УстановкаПараметровОбласти(ОбластьРезультатыИспытаний);
		ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ " + СсылкаНаОбъект._ИМЦ_Организация;
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьРезультатыИспытаний",ОбластьРезультатыИспытаний));
		
		Для Каждого ЭлОбл Из МасВыводимыхОбластей Цикл
			
			Если ТабДок.ПроверитьВывод(ЭлОбл.Область) Тогда
				ТабДок.Вывести(ЭлОбл.Область);
			Иначе
				Если ЭлОбл.ИмяОбласти = "ОбластьДополнительныеСведения2" Тогда
					#Область ДополнительныеСведения2
					
					ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
					УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
					МассивСлов = Новый Массив;
					МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.ДополнительныеСведения);
					щщ = 0; 
					
					ТекстСдобавлением = "";
					ТекстБезДобавления = "";
					
					Для щщ = 0 по МассивСлов.Количество()-1 Цикл
						
						ТекстСдобавлением = ТекстБезДобавления + Строка(МассивСлов[щщ]);
						ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстСдобавлением;
						
						Если ТабДок.ПроверитьВывод(ОбластьДополнительныеСведения2) = Ложь Тогда 	
							
							Если ТекстБезДобавления = "" Тогда 
								ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
								ТекстСдобавлением  = "";
								ТекстБезДобавления = "";
								щщ = щщ - 1;
								ЭтоПерваяСтраница = Ложь;
								
							Иначе    
								
								ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстБезДобавления;
								ТабДок.Вывести(ОбластьДополнительныеСведения2); 
								
								ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
								щщ = щщ - 1;
								ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
								УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
								ТекстСдобавлением = "";
								ТекстБезДобавления = "";
								ЭтоПерваяСтраница = Ложь;
								
							КонецЕсли;
							
						Иначе 
							
							Если  щщ = МассивСлов.Количество()-1 Тогда
								ТабДок.Вывести(ОбластьДополнительныеСведения2); 			
							КонецЕсли;	
							ТекстБезДобавления = ТекстСдобавлением;
							
						КонецЕсли;
						
					КонецЦикла;
					
					
					#КонецОбласти
					
				Иначе	
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДок.Вывести(ЭлОбл.Область);
					ЭтоПерваяСтраница = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		
		#КонецОбласти
		
		//                        ЛАБОРАТОРНАЯ ЧАСТЬ
		//======================================================================================================================	
		
		#Область ЛАБОРАТОРНАЯ_ЧАСТЬ
		
		Если ЭтоПерваяСтраница Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			
			ОбластьПустаяСтрока =  МакетОбработки.ПолучитьОбласть("ПустаяСтрока"); 
			УстановкаПараметровОбласти(ОбластьПустаяСтрока);
			ТабДок.Вывести(ОбластьПустаяСтрока);
		КонецЕсли;
		
		
		ОбластьТаблицаШапка   = МакетОбработки.ПолучитьОбласть("ТаблицаШапка"); 
		УстановкаПараметровОбласти(ОбластьТаблицаШапка);
		ОбластьТабЛаборатория = МакетОбработки.ПолучитьОбласть("ТабЛаборатория");
		УстановкаПараметровОбласти(ОбластьТабЛаборатория);
		ОбластьТаблица        = МакетОбработки.ПолучитьОбласть("Таблица"); 
		УстановкаПараметровОбласти(ОбластьТаблица);
		
		
		Показатели = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
		Показатели.Свернуть("Лаборатория,КодПробы,ГУИД,Показатель,Услуга,Примечание,Объем,Результат,ПродуктИсследования,РезультатСтрока, ДополнительныеСведения, Значение,Погрешность,ЕдиницаИзмерения,ГигиеническийНорматив,ЛабИсследование");
		
		ТабДок.Вывести(ОбластьТаблицаШапка);
		
		
		Для каждого СтрКод из ТЗКодПроб Цикл
			
			ОбластьТабЛаборатория = МакетОбработки.ПолучитьОбласть("ТабЛаборатория");
			УстановкаПараметровОбласти(ОбластьТабЛаборатория);
			
			Если Найти(СтрКод.Лаборатория,"Санитарно-гигиеническая") Тогда 
				ОбластьТабЛаборатория.Параметры.Лаборатория = "КОЛИЧЕСТВЕННЫЙ ХИМИЧЕСКИЙ АНАЛИЗ";
			ИначеЕсли Найти(СтрКод.Лаборатория,"бактериолог") Тогда
				ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";
			ИначеЕсли Найти(СтрКод.Лаборатория,"Микробиологич") Тогда
				ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";	
			ИначеЕсли  Найти(СтрКод.Лаборатория,"особо опасных") Тогда
				ОбластьТабЛаборатория.Параметры.Лаборатория = "ИССЛЕДОВАНИЯ ОСОБО ОПАСНЫХ ИНФЕКЦИЙ";
			ИначеЕсли Найти(СтрКод.Лаборатория,"ПЦР") Тогда   
				ОбластьТабЛаборатория.Параметры.Лаборатория = "МОЛЕКУЛЯРНО-ГЕНЕТИЧЕСКИЕ ИССЛЕДОВАНИЯ";
			ИначеЕсли Найти(СтрКод.Лаборатория,"радио") или Найти(СтрКод.Лаборатория,"радиа")  Тогда  
				ОбластьТабЛаборатория.Параметры.Лаборатория = "РАДИОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
			ИначеЕсли Найти(СтрКод.Лаборатория,"токс") Тогда  			
				ОбластьТабЛаборатория.Параметры.Лаборатория = "ТОКСИКОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
			КонецЕсли;
			
			ОбластьТабЛаборатория.Параметры.НомерВЖурналеЛаборатории = СтрКод.ЛабИсследование.НомерВЖурнале;
			
			Если ТабДок.ПроверитьВывод(ОбластьТабЛаборатория) Тогда
				
				ТабДок.Вывести(ОбластьТабЛаборатория);      
				
			Иначе   
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ОбластьТабЛаборатория);
				
			КонецЕсли;	
			
			
			ПараметрОтбора = новый структура("КодПробы, Лаборатория, ЛабИсследование",СтрКод.КодПробы, СтрКод.Лаборатория, СтрКод.ЛабИсследование);
			Найденное = Показатели.НайтиСтроки(ПараметрОтбора);
			
			Для каждого СтрНайд из Найденное Цикл
				
				ОбластьТаблица        = МакетОбработки.ПолучитьОбласть("Таблица"); 
				УстановкаПараметровОбласти(ОбластьТаблица);     			
				
				ОбластьТаблица.Параметры.Показатель       = СтрНайд.Показатель;     	
				ОбластьТаблица.Параметры.ЕденицаИзмерения = _ИМЦ_СобытияФормСервер.ДобавитьСимволСтепень(СтрНайд.ЕдиницаИзмерения);  
				
				Если ЗначениеЗаполнено(СтрНайд.РезультатСтрока)Тогда
					Результат = ?(ЗначениеЗаполнено(СтрНайд.РезультатСтрока), СтрНайд.РезультатСтрока, Строка(СтрНайд.Значение)); 
				Иначе
					Результат = ?(ЗначениеЗаполнено(СтрНайд.Погрешность), Строка(СтрНайд.Значение) + "±" + Строка(СтрНайд.Погрешность), Строка(СтрНайд.Значение)); 
				КонецЕсли;		
				
				ОбластьТаблица.Параметры.Значение = ДобавитьСимволСтепень(Результат);  	
				
				//Если НаличиеЗаключения Тогда
				//    ОбластьТаблица.Параметры.ВеличинаДопустимогоУровня 	= ДобавитьСимволСтепень(СтрНайд.Объем); 				 
				//КонецЕсли;	
				
				ОбластьТаблица.Параметры.НД	= СтрНайд.Примечание.ПолноеНаименование; 
				
				//ТабДок.Вывести(ОбластьТаблица);		
				Если ТабДок.ПроверитьВывод(ОбластьТаблица) Тогда
					ТабДок.Вывести(ОбластьТаблица);      
				Иначе   
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДок.Вывести(ОбластьТаблица);
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЦикла;
		
		
		#КонецОбласти
		
		#КонецОбласти
		
	КонецЕсли;
	
	#Область Оформитель
	
	ОбластьОформитель = МакетОбработки.ПолучитьОбласть("Оформитель");  	
	УстановкаПараметровОбласти(ОбластьОформитель);	
	
	ОбластьОформитель.Параметры.Оформитель    = СсылкаНаОбъект.Оформитель.Сотрудник;   
	
	ТабДок.Вывести(ОбластьОформитель);
	
	#КонецОбласти

	#Область Нижний_Колонтитул 
	
	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ТекстСправа ="                                                                                
	|
	|Протокол № " + СсылкаНаОбъект.Номер+ "  от  " + Формат(СсылкаНаОбъект.Дата,"ДЛф=Д") + "                                    Стр.[&НомерСтраницы] из [&СтраницВсего]";  
	
	
	//Если НаличиеЗаключения Тогда
	//	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
	//	"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
	//	|                    письменного разрешения Органа инспекции";       		
	//Иначе                 		
	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
	"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
	|                    письменного разрешения Испытательной лаборатории (центра)";   		
	//КонецЕсли;	
	
	ТабДок.НижнийКолонтитул.Шрифт = Новый Шрифт("Times New Roman",10,,Истина);
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.РазмерКолонтитулаСнизу = 15;
	ТабДок.ПолеСнизу              = 20;
	
	#КонецОбласти
	
	ТабДок.РазмерСтраницы = "A4";   // непонятно почему, но работает именно так , сначала проверяем устанавливаем  Letter а потом меняем на A4
	// иначе не корректно работает проверить вывод.
	Возврат ТабДок;
	
КонецФункции

Функция ДобавитьСимволСтепень(Входящая)
	
	Первая = Найти(Входящая,"@");
	Если Первая > 0 Тогда
		
		Если Найти(Входящая,"@1@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@1@","¹");
		ИначеЕсли Найти(Входящая,"@2@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@2@",Символ(178));
		ИначеЕсли Найти(Входящая,"@3@") > 0 Тогда
			//Исходящая = СтрЗаменить(Входящая,"@3@",Символ(179));
			Исходящая = СтрЗаменить(Входящая,"@3@","³");
		ИначеЕсли Найти(Входящая,"@4@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@4@",Символ(8308));
		ИначеЕсли Найти(Входящая,"@5@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@5@",Символ(8309));
		ИначеЕсли Найти(Входящая,"@6@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@6@",Символ(8310));
		ИначеЕсли Найти(Входящая,"@7@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@7@",Символ(8311));
		ИначеЕсли Найти(Входящая,"@8@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@8@",Символ(8312));
		ИначеЕсли Найти(Входящая,"@9@") > 0 Тогда
			Исходящая = СтрЗаменить(Входящая,"@9@",Символ(8313));
		КонецЕсли;
		
		Если Найти(Входящая,"@") Тогда 
			Исходящая = ДобавитьСимволСтепень(Исходящая);
		КонецЕсли;	

	Иначе
		Исходящая = Входящая;
	КонецЕсли;	
	
	Возврат Исходящая;
	
КонецФункции	

&НаСервере
Функция НайдемНашФайл(ИмяФайла)	Экспорт
	Возврат Справочники.Файлы.НайтиПоНаименованию(ИмяФайла);
КонецФункции	

&НаСервереБезКонтекста
Функция ПроверкаСуществованияИмени(ИмяВрем)
	
	СсылкаНаФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяВрем);
	Если СсылкаНаФайл = Справочники.Файлы.ПустаяСсылка() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;		
	КонецЕсли;
	
	
КонецФункции

&НаСервере
Процедура ЗаполнениеСпискаУтверждающих()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подпись,
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Ссылка.Наименование КАК Представление
	                      |ИЗ
	                      |	Справочник._ИМЦ_Подписывающие.ПодписываемыеДокументы КАК _ИМЦ_ПодписывающиеПодписываемыеДокументы
	                      |ГДЕ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подразделение = &Подразделение
	                      |	И _ИМЦ_ПодписывающиеПодписываемыеДокументы.Документ ССЫЛКА Документ._ИМЦ_ЕдиныйПротокол
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Представление");
	
	Запрос.УстановитьПараметр("Подразделение",Объект.СсылкаНаОбъект.Подразделение);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если  Выгрузка.Количество() Тогда
			
		Если  Выгрузка.Количество() = 1   Тогда
			
			Утверждающий = Выгрузка[0].Подпись;
			
		Иначе    
			Элементы.Утверждающий.СписокВыбора.Очистить();
			
			Для каждого Стр Из Выгрузка Цикл
				
				Элементы.Утверждающий.СписокВыбора.Добавить(Стр.Подпись, Стр.Представление);  					
				
			КонецЦикла;
		КонецЕсли;	
				
	КонецЕсли;	 
	

	
КонецПроцедуры

&НаСервере
Функция РазбиениеСтрокиНаСлова(Строка, Разделитель = " ", Сокращать = Ложь)
	
	РезультатФункции = Новый Массив;
	
	СтрокаПоиска = Строка;
	Позиция = Найти(СтрокаПоиска, Разделитель);
	Пока Позиция <> 0 Цикл
		ПодСтрока = Лев(СтрокаПоиска, Позиция);
		
		ПозицияПереводСтроки = Найти(ПодСтрока, Символы.ПС);
		Если ПозицияПереводСтроки <> 0 Тогда
			
			Если ПозицияПереводСтроки <> 1 Тогда
				ДоСимволаПС = Лев(ПодСтрока,ПозицияПереводСтроки-1);
				РезультатФункции.Добавить(ДоСимволаПС);
							
				ПослеСимволаПС = Сред(ПодСтрока,ПозицияПереводСтроки);
				РезультатФункции.Добавить(ПослеСимволаПС);
								
			Иначе
				РезультатФункции.Добавить(ПодСтрока);
			КонецЕсли;
			
		Иначе
			РезультатФункции.Добавить(?(Сокращать, СокрЛП(ПодСтрока), ПодСтрока));

		КонецЕсли; 		
		
		СтрокаПоиска = Сред(СтрокаПоиска, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(СтрокаПоиска, Разделитель);
		
		
	КонецЦикла;
	Если СтрДлина(СтрокаПоиска) > 0 Тогда
		РезультатФункции.Добавить(?(Сокращать, СокрЛП(СтрокаПоиска), СтрокаПоиска));
	КонецЕсли;
	Возврат РезультатФункции;
	
КонецФункции

&НаСервере
Процедура УстановкаПараметровОбласти(Область)

	Область.РазмерКолонтитулаСнизу	= 15;
	Область.ПолеСнизу				= 20;
	Область.ПолеСверху				= 10;
	Область.ПолеСлева				= 10;
	Область.ПолеСправа				= 10;
	Область.Автомасштаб				= Истина;
	Область.РазмерСтраницы 			= "Letter";
	Область.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;

КонецПроцедуры

&НаСервере
Функция ФормированиеТабличногоДокумента(ТабДок)
	
	СписокИсследований = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.ИсследованияПоЛабораториям.Количество()) Тогда
		ТЗ_ВремИсследования = Объект.СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ЛабИсследование");
		ТЗ_ВремИсследования.Свернуть("ЛабИсследование");
		СписокИсследований.ЗагрузитьЗначения(ТЗ_ВремИсследования.ВыгрузитьКолонку("ЛабИсследование"));		
	Иначе
		СписокИсследований.ЗагрузитьЗначения(Объект.СсылкаНаОбъект.Пробы.ВыгрузитьКолонку("Исследование"));
	КонецЕсли;
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	_ИМЦ_Исследование_ПечатнаяФорма.ВнешняяОбработка,
	|	_ИМЦ_Исследование_ПечатнаяФорма.Документ
	|ИЗ
	|	РегистрСведений._ИМЦ_Исследование_ПечатнаяФорма КАК _ИМЦ_Исследование_ПечатнаяФорма
	|ГДЕ
	|	_ИМЦ_Исследование_ПечатнаяФорма.Документ В(&СписокИсследований)";
	
	Запрос.УстановитьПараметр("СписокИсследований", СписокИсследований);
	
	Результат =  Запрос.Выполнить().Выгрузить();	
	сч = 0;
	
	мСтруктура = Новый СТруктура();
	
	сч=сч+1;
	колОбластей = 0;
	
	Для каждого Стр Из Результат Цикл	
			
		Получили = _ИМЦ_СобытияФормСервер.ПолучитьДанныеВнешнейОбработкиОтчета(Стр.ВнешняяОбработка.УникальныйИдентификатор()); 
			
		ИмяВремФайла = ПолучитьИмяВременногоФайла();		                
		Получили.ДвДанные.Записать(ИмяВремФайла); 
		            		
		ВнешОбработка = ВнешниеОбработки.Создать(ИмяВремФайла, Ложь);
		ПолучСтруктура = ВнешОбработка.ФормированиеТабличногоДокумента_Протокола(Стр.Документ, Новый ТабличныйДокумент); 
		
		Если ПолучСтруктура.Количество() Тогда
			
			Для щщ = 0 По ПолучСтруктура.Количество()-1 Цикл   				
				
				мСтруктура.Вставить("ТабДок" + колОбластей, ПолучСтруктура["табдок" + Строка(щщ + 1)]);
				колОбластей = колОбластей+1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат мСтруктура;
	
КонецФункции

&НаСервере
Функция ПолучитьНомераВЖуранале(Исследование)
	
	МассивНомеров = Новый Массив;
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	|	_ИМЦ_РезультатыИсследований.НомерВЖурналеТЧ
	|ИЗ
	|	РегистрСведений._ИМЦ_РезультатыИсследований КАК _ИМЦ_РезультатыИсследований
	|ГДЕ
	|	_ИМЦ_РезультатыИсследований.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	_ИМЦ_РезультатыИсследований.НомерВЖурналеТЧ";
	
	 Запрос.УстановитьПараметр("Регистратор", Исследование);
	
	Результат =  Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() Тогда
		
		МассивНомеров = Результат.ВыгрузитьКолонку("НомерВЖурналеТЧ");	    
	
	КонецЕсли;	
	
	Возврат МассивНомеров;
	
КонецФункции

&НаСервере
Функция ПолучитьДатыНачалаиОкончанияИсследования(Исследования)
	
	 ДНСтрока = "";
	 ДНСтрока = "";
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	_ИМЦ_РезультатыИсследований.ДатаИсследованияТЧ,
	                |	_ИМЦ_РезультатыИсследований.ДатаРезультатаТЧ
	                |ИЗ
	                |	РегистрСведений._ИМЦ_РезультатыИсследований КАК _ИМЦ_РезультатыИсследований
	                |ГДЕ
	                |	_ИМЦ_РезультатыИсследований.Регистратор В(&Исследования)
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	_ИМЦ_РезультатыИсследований.ДатаИсследованияТЧ,
	                |	_ИМЦ_РезультатыИсследований.ДатаРезультатаТЧ";
	
	 Запрос.УстановитьПараметр("Исследования", Исследования);
	
	Результат =  Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() Тогда
		ДН = Результат[0].ДатаИсследованияТЧ;
		ДК = Результат[0].ДатаРезультатаТЧ;
		
		Для Каждого Стр Из Результат Цикл
						
			Если Стр.ДатаРезультатаТЧ > ДК Тогда 				
				ДК = Стр.ДатаРезультатаТЧ;
			КонецЕсли;
			
			Если Стр.ДатаИсследованияТЧ < ДН и Стр.ДатаИсследованияТЧ <> Дата(1,1,1,0,0,0)
				Или ДН = Дата(1,1,1,0,0,0) Тогда
				ДН = Стр.ДатаИсследованияТЧ;
			КонецЕсли;
			
		КонецЦикла;
		
		ДНСтрока = Формат(ДН,"ДЛФ=D");
		ДКСтрока = Формат(ДК,"ДЛФ=D");
		
	КонецЕсли;  	
	
	Возврат Новый Структура("ДатаНачалаИсследований, ДатаОкончанияИсследований", ДНСтрока, ДКСтрока);
	
КонецФункции

&НаСервере
Функция МасссивАдресовЛабораторий(Протокол)
	
	АдресаЛабораторий = "";
	
	Если Протокол.Пробы.Количество() Тогда
		
		ТЗ_Лаб = Протокол.Пробы.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	Иначе   
		
		ТЗ_Лаб = Протокол.ИсследованияПоЛабораториям.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	КонецЕсли;	
	
	Для каждого Стр Из ТЗ_Лаб Цикл
		
		Если ЗначениеЗаполнено(Стр.Лаборатория.Примечание) Тогда
			
			Если ЗначениеЗаполнено(АдресаЛабораторий) Тогда
				
				Если Найти(АдресаЛабораторий, Стр.Лаборатория.Примечание) = 0 Тогда
					
					АдресаЛабораторий = АдресаЛабораторий + "
					|" + Стр.Лаборатория.Примечание; 					
					
				КонецЕсли;	
								
			Иначе
			    АдресаЛабораторий = "Адрес осуществления деятельности лаборатории:";
				АдресаЛабораторий = АдресаЛабораторий + "
				|" + Стр.Лаборатория.Примечание;
			
			КонецЕсли;
			//АдресаЛабораторий = Стр.Лаборатория.Примечание;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат	 АдресаЛабораторий;
	
КонецФункции



#КонецОбласти

//======================================================================================================================

