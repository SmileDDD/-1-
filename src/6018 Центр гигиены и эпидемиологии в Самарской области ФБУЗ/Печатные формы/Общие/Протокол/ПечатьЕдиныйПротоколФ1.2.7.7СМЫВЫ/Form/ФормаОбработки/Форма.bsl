
#Область ОбРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда		
		Объект.СсылкаНаОбъект = Параметры.СсылкаНаОбъект; 
		
		Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.Заключение) Тогда  			
		    НаличиеЗаключения = Истина;                                 			
		КонецЕсли;                                        		
		ДатаУтверждения = Объект.СсылкаНаОбъект.Дата;     
		ЗаполнениеСпискаУтверждающих();                   
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект) Тогда 
		
		//Отказ = Истина;
		Элементы.СсылкаНаОбъект.Видимость = Ложь;
		//ТабДок = ПечатьТабДок(Объект.СсылкаНаОбъект);
		////ТабДок.Показать(); 
		//
		//
		//Для  сч = 1 по 100  Цикл		
		//	
		//	ИмяВрем = ПолучитьИмяВременногоФайла();
		//	ДопИмя  = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс");
		//	ИмяВрем = СтрЗаменить(ИмяВрем,".tmp", ДопИмя+".mxl");
		//	
		//	Если ПроверкаСуществованияИмени(ИмяВрем) Тогда			
		//		Прервать;                                 						
		//	КонецЕсли;                                    
		//	
		//КонецЦикла;
		//
		//ТабДок.Записать(ИмяВрем, ТипФайлаТабличногоДокумента.mxl);
		//
		//мФайл = Новый Файл(ИмяВрем);
		//Если мФайл.Существует() Тогда
		//	//добавим файл в справочник файлы
		//	РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ИмяВрем, Объект.СсылкаНаОбъект,ЭтаФорма,Истина,Неопределено);
		//КонецЕсли;
		//
		////откроем на редактирование
		//Имя = мФайл.ИмяБезРасширения;
		//НашФайл	= НайдемНашФайл(Имя);			
		//КомандыРаботыСФайламиКлиент.Редактировать(НашФайл); 
	КонецЕсли;

	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	
	Если  ЗначениеЗаполнено(Объект.СсылкаНаОбъект)   Тогда
		
		ЗаполнениеСпискаУтверждающих();
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_КОМАНД

&НаКлиенте
Процедура Команда1(Команда)
	
	ТабДок = ПечатьТабДок(Объект.СсылкаНаОбъект);
	Если Элементы.СсылкаНаОбъект.Видимость  Тогда		
		ТабДок.Показать(); 		
	Иначе                  		
		_ИМЦ_МодульФайлыПечатьКлиент.СозданиеФайлаПриПечатиИзВнешнихОбработок(ТабДок,Объект.ССылкаНаОбъект, ПрефиксНаименованияФайла, ЭтаФорма);
		ЭтаФорма.Закрыть();           		
	КонецЕсли;     
	
КонецПроцедуры


#КонецОбласти

//======================================================================================================================

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

&НаСервере
Функция ПечатьТабДок(СсылкаНаОбъект)
	
	ЭтоПерваяСтраница = Истина;
	МасВыводимыхОбластей = Новый Массив;
	
	ПрефиксНаименованияФайла = "Проткол_" + СсылкаНаОбъект.Номер;
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.НижнийКолонтитул.Шрифт    = Новый Шрифт("Times New Roman",10,,Истина);
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.РазмерКолонтитулаСнизу    = 20;
	ТабДок.ПолеСнизу = 30;		
	ТабДок.РазмерСтраницы = "A4";

	УстановкаПараметровОбласти(ТабДок);

	ЭтотОбъект = РеквизитФормыВЗначение("Объект");	
	МакетОбработки = ЭтотОбъект.ПолучитьМакет("Макет");	
	Филиал = "";                                       	
	
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда
		Филиал = СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		//ИмяПечФормы	= "";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/7.1";   			
		КонецЕсли;
		ФактАдр		= 	"Фактический адрес: 446001, Самарская область, г. Сызрань, ул Советская 100
					  	|Телефон,Факс: (846) 4-98-61-21 
					  	|ОКПО 76785050, ОГРН 1056316020155 ИНН/КПП 6316098875/ 632502001";
					  
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.512226 от «20» сентября 2013 года 
						|Действителен до  «20» сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф-23/08/01-14";
		ФактАдр		= 	"Фактический адрес: 446100, Самарская область,  г. Чапаевск, ул. Ленина, 95
						|Телефон,Факс: 8(846-39) 3-02-56
						|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/633002001";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.512080 от 20 сентября 2013 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда 		
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446600, Самарская область, г.Нефтегорск, ул.Нефтяников, д 1
						|Телефон,Факс: (846 70) 2-18-07
						|ОКПО 81848048, ОГРН 1056316020155 ИНН/КПП 6316098875/ 637732005";
		Аттестат	=	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513557 от 20 сентября 2013 года    
						|Действителен до 20 сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.510862   выдан  «06» ноября  2014 г.   
						|Внесен в реестр аккредитованных лиц: «20»  октября 2014 г.";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446541, Самарская область, Сергиевский район, с. Сергиевск, ул.
						|Н.Краснова, д. 84-А 
						|Телефон,Факс: : 8(84655) 2-44-82 
						|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/ 638132001";
						
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513603   от 06 июля 2011 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513608 от 08 июня 2016 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= 	"Фактический адрес: 446205, Самарская область, г. Новокуйбышевск, 
						|ул. Льва Толстого, 19 а
						|Телефон,Факс: (846)260-37-97 Тел/Факс: 8-846-35-4-00-75   
						|E-mail: gossan1@samtel.ru
						|ОКПО 76781135, ОГРН 1056316020155 ИНН/КПП 6316098875 / 633002002";
						
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.510863 от 20 сентября 2013 года
						|Действителен до «20»  сентября 2018 года";

	Иначе	
		Аттестат = "АТТЕСТАТ аккредитации Испытательной лаборатории (центра) 
					|№ РОСС RU.0001.510137, дата включения в реестр 22.06.2015г.";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/7.1";   			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ИмяПечФормы) Тогда
		
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/7.1";   			
		КонецЕсли;

	КонецЕсли;

	ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование,ДополнительныеСведения,ПорядковыйНомерГлавнойСтроки");
    ТЗКодПроб.Сортировать("ПорядковыйНомерГлавнойСтроки возр, НомерВЖурналеЛаборатории возр");
		
	////                      ПЕРВАЯ СТРАНИЦА
//======================================================================================================================

 	#Область ПЕРВАЯ_СТРАНИЦА
	

	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ИмяФормы = ИмяПечФормы;
	УстановкаПараметровОбласти(ОбластьШапка);	
	//ТабДок.Вывести(ОбластьШапка);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьШапка",ОбластьШапка));
	
	Если ЗначениеЗаполнено(Филиал) Тогда
		
		Филиал = СтрЗаменить(Филиал,"ФБУЗ", "Федерального бюджетного учреждения здравоохранения");
		Филиал = СтрЗаменить(Филиал,"«", "
										|«");
		
		ОбластьФилиал = МакетОбработки.ПолучитьОбласть("Филиал");
		УстановкаПараметровОбласти(ОбластьФилиал);
		ОбластьФилиал.Параметры.Филиал =  Филиал;
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФилиал",ОбластьФилиал));
		
	КонецЕсли;

	
	ОбластьЮрАдресШапка = МакетОбработки.ПолучитьОбласть("ЮрАдресШапка");
	УстановкаПараметровОбласти(ОбластьЮрАдресШапка);
	//ТабДок.Вывести(ОбластьЮрАдресШапка);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресШапка",ОбластьЮрАдресШапка));

	
	Если ЗначениеЗаполнено(Филиал) Тогда
	
		ОбластьФактическийАдресФилиала = МакетОбработки.ПолучитьОбласть("ФактическийАдресФилиала");
		УстановкаПараметровОбласти(ОбластьФактическийАдресФилиала);
		ОбластьФактическийАдресФилиала.Параметры.ФактическийАдресФилиала = ФактАдр;
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактическийАдресФилиала",ОбластьФактическийАдресФилиала));
		
	КонецЕсли;

	
	ОбластьАттестат = МакетОбработки.ПолучитьОбласть("Аттестат");
	УстановкаПараметровОбласти(ОбластьАттестат);
	ОбластьАттестат.Параметры.Аттестат = Аттестат;
	//ТабДок.Вывести(ОбластьАттестат);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьАттестат",ОбластьАттестат));

	
	
	ОбластьУтверждение = МакетОбработки.ПолучитьОбласть("Утверждение");
	УстановкаПараметровОбласти(ОбластьУтверждение);
	АдресаЛабораторий = МасссивАдресовЛабораторий(СсылкаНаОбъект);		
	ОбластьУтверждение.Параметры.АдресаЛабораторий = АдресаЛабораторий;
	ОбластьУтверждение.Параметры.УтверждающийПротокол	= СтрЗаменить(Утверждающий,"^p",Символы.ПС);
	ОбластьУтверждение.Параметры.ДатаУтверждения		= Формат(ДатаУтверждения,"ДФ='«дд» ММММ гггг ""г.""'; ДП='«   » _______________201  г.'");
//	ТабДок.Вывести(ОбластьУтверждение);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьУтверждение",ОбластьУтверждение));

	ОбластьНомерДатаПротокола							= МакетОбработки.ПолучитьОбласть("НомерДатаПротокола");
	УстановкаПараметровОбласти(ОбластьНомерДатаПротокола);	
	ОбластьНомерДатаПротокола.Параметры.НомерДокумента	= СсылкаНаОбъект.Номер;  
	ОбластьНомерДатаПротокола.Параметры.Дата			= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д"); 
	//ТабДок.Вывести(ОбластьНомерДатаПротокола);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНомерДатаПротокола",ОбластьНомерДатаПротокола));

	
	//Область = МакетОбработки.ПолучитьОбласть("");
	//УстановкаПараметровОбласти(Область);	

	
	#Область ПолучениеСтрокиСКодами 
	
	ТЗКодПробы = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПробы.Свернуть("КодПробы");
	ТЗКодПробы.Сортировать("КодПробы возр");
	
	СтрокаКодыПрод = "";
	
	Для Каждого Стр Из ТЗКодПробы Цикл
		
		Если ЗначениеЗаполнено(СтрокаКодыПрод) Тогда
			
			СтрокаКодыПрод = СтрокаКодыПрод + "; " + Стр.КодПробы;
			
		Иначе
			СтрокаКодыПрод = Стр.КодПробы;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбластьКодОбразца	= МакетОбработки.ПолучитьОбласть("КодОбразца");
	УстановкаПараметровОбласти(ОбластьКодОбразца);	   	
	ОбластьКодОбразца.Параметры.КодПробыСборный = СтрокаКодыПрод;
	//ТабДок.Вывести(ОбластьКодОбразца);	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьКодОбразца",ОбластьКодОбразца));

	#КонецОбласти
	 	
	#Область Наименование_Образца
	
	ОбластьНаименованиеОбразца	= МакетОбработки.ПолучитьОбласть("НаименованиеОбразца");
	УстановкаПараметровОбласти(ОбластьНаименованиеОбразца);
	
	ВремТЗНаименованияПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ДополнительныеСведения");
	ВремТЗНаименованияПроб.Свернуть("ДополнительныеСведения");
	
	Для каждого СтрВремТЗ Из ВремТЗНаименованияПроб Цикл  	
		
		//Если ЗначениеЗаполнено(ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы)  Тогда
		//	ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы + ", " + СтрВремТЗ.ДополнительныеСведения;
		//Иначе
		//	ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = СтрВремТЗ.ДополнительныеСведения;   
		//КонецЕсли;
		ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ПродуктИсследования;
		Если ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = "смыв" Тогда
			ОбластьНаименованиеОбразца.Параметры.НаименованиеПробы = "смывы";
		КонецЕсли	
				
	КонецЦикла;
	
	 //ТабДок.Вывести(ОбластьНаименованиеОбразца);	
    МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНаименованиеОбразца",ОбластьНаименованиеОбразца));

	
	#КонецОбласти
	
	#Область Заказчик
	
	ОбластьЗаказчик	= МакетОбработки.ПолучитьОбласть("Заказчик");
	УстановкаПараметровОбласти(ОбластьЗаказчик);
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.КонтрагентСтрока) Тогда 			
		ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.КонтрагентСтрока;  		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент) = Тип("СправочникСсылка._ИМЦ_Контрагенты")  Тогда
		
		Если  ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора) ТОгда
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора;
		ИначеЕсли    ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.ПолноеНаименование)  Тогда 
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
		Иначе
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.Наименование;  
		КонецЕсли;
		
	Иначе
		
		ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;    
		
	КонецЕсли;
	//ТабДок.Вывести(ОбластьЗаказчик);	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЗаказчик",ОбластьЗаказчик));

	#КонецОбласти
	
	ОбластьЮрАдресЗаказчика = МакетОбработки.ПолучитьОбласть("ЮрАдресЗаказчика");
	УстановкаПараметровОбласти(ОбластьЮрАдресЗаказчика);	
	ОбластьЮрАдресЗаказчика.Параметры.Адрес = СсылкаНаОбъект.ЮрАдресЗаявителя; 
	//ТабДок.Вывести(ОбластьЮрАдресЗаказчика);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресЗаказчика",ОбластьЮрАдресЗаказчика));

	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.Изготовитель) Тогда
		
		ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
		УстановкаПараметровОбласти(ОбластьИзготовитель);		
		//ТабДок.Вывести(ОбластьИзготовитель);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель", ОбластьИзготовитель));

		ОбластьИзготовитель2							= МакетОбработки.ПолучитьОбласть("Изготовитель2");
		УстановкаПараметровОбласти(ОбластьИзготовитель2);			
		ОбластьИзготовитель2.Параметры.Изготовитель = СсылкаНаОбъект.Изготовитель;
		//ТабДок.Вывести(ОбластьИзготовитель2);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель2",ОбластьИзготовитель2));


	Иначе
		
		ОбластьИзготовитель							= МакетОбработки.ПолучитьОбласть("Изготовитель");
		УстановкаПараметровОбласти(ОбластьИзготовитель);			
		ОбластьИзготовитель.Параметры.Изготовитель = "-";
		//ТабДок.Вывести(ОбластьИзготовитель);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьИзготовитель",ОбластьИзготовитель));


	КонецЕсли;	
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ЮридическийАдресИзготовителя) Тогда
		
		ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
		УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);		
	//	ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));

		
		ОбластьЮрАдерсИзготовителя2							= МакетОбработки.ПолучитьОбласть("ЮрАдресИзготовитель2");
		УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя2);	                          
		ОбластьЮрАдерсИзготовителя2.Параметры.ЮрАдресИзготовитель = СсылкаНаОбъект.ЮридическийАдресИзготовителя;
		//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя2);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя2",ОбластьЮрАдерсИзготовителя2));

		
	Иначе
		
		ОбластьЮрАдерсИзготовителя							= МакетОбработки.ПолучитьОбласть("ЮрАдерсИзготовитель");
		УстановкаПараметровОбласти(ОбластьЮрАдерсИзготовителя);	
		ОбластьЮрАдерсИзготовителя.Параметры.ЮрАдресИзготовитель = "-";
		//ТабДок.Вывести(ОбластьЮрАдерсИзготовителя);
 		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдерсИзготовителя",ОбластьЮрАдерсИзготовителя));

		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ФактическийАдресИзготовителя) Тогда
		
		ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
		УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);		
		//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));
		
		ОбластьФактАдресИзготовитель2 = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель2");
		УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель2);	
		ОбластьФактАдресИзготовитель2.Параметры.ФактАдресИзготовитель = СсылкаНаОбъект.ФактическийАдресИзготовителя;
		//ТабДок.Вывести(ОбластьФактАдресИзготовитель2);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель2",ОбластьФактАдресИзготовитель2));

	Иначе
		
		ОбластьФактАдресИзготовитель = МакетОбработки.ПолучитьОбласть("ФактАдресИзготовитель");
		УстановкаПараметровОбласти(ОбластьФактАдресИзготовитель);	
		ОбластьФактАдресИзготовитель.Параметры.ФактАдресИзготовитель = "-";
		//ТабДок.Вывести(ОбластьФактАдресИзготовитель);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактАдресИзготовитель",ОбластьФактАдресИзготовитель));

	КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ДатаИзготовления) Тогда
		
		ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
		УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
		ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ДатаИзготовления; 
		//ТабДок.Вывести(ОбластьДатаИВремяИзготовления);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));

		
		ОбластьДатаИВремяИзготовления2	= МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления2");
		УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления2);     		
		ОбластьДатаИВремяИзготовления2.Параметры.ДатаИВремяИзготовления = СсылкаНаОбъект.ИсследованияПоЛабораториям[0].ДатаИзготовления; 
		//ТабДок.Вывести(ОбластьДатаИВремяИзготовления2);
        МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления2",ОбластьДатаИВремяИзготовления2));

		
	Иначе
		ОбластьДатаИВремяИзготовления = МакетОбработки.ПолучитьОбласть("ДатаИВремяИзготовления");
		УстановкаПараметровОбласти(ОбластьДатаИВремяИзготовления);
		ОбластьДатаИВремяИзготовления.Параметры.ДатаИВремяИзготовления = "-";
		//ТабДок.Вывести(ОбластьДатаИВремяИзготовления);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаИВремяИзготовления",ОбластьДатаИВремяИзготовления));

	КонецЕсли;
	
	//Если ЗначениеЗаполнено(СсылкаНаОбъект.ФИОДолжностьОтобр) Тогда
	//	
	//	ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
	//	УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
	//	//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
	//	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));

	//	
	//	ОбластьФИОДолжностьОтобр2 = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр2");
	//	УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр2);
	//	ОбластьФИОДолжностьОтобр2.Параметры.ФИОДолжностьОтобр = СсылкаНаОбъект.ФИОДолжностьОтобр;    
	//	//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
	//	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр2",ОбластьФИОДолжностьОтобр2));
	//	
	//Иначе
	//	
	//	ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
	//	УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
	//	ОбластьФИОДолжностьОтобр.Параметры.ФИОДолжностьОтобр = "-";
	//	//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
	//	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
	//	
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДополнительныеСведения) Тогда
		
		ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
		//ТабДок.Вывести(ОбластьДополнительныеСведения);  
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
		
		ОбластьДополнительныеСведения2	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.АктОтбораПроб) Тогда
			Если ЗначениеЗаполнено(СсылкаНаОбъект.ВидАктаОбораПроб) Тогда
				
				ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения 
				+ " " + СсылкаНаОбъект.ВидАктаОбораПроб + " от " + СсылкаНаОбъект.АктОтбораПроб;	
			Иначе    
				ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения + " Акт отбора проб " + "от " + СсылкаНаОбъект.АктОтбораПроб;
			КонецЕсли;
			
		Иначе
			ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения ;
		КонецЕсли;	
		
		
		//ТабДок.Вывести(ОбластьДополнительныеСведения2);  	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения2",ОбластьДополнительныеСведения2));

		
	Иначе
		
		ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
		ОбластьДополнительныеСведения.Параметры.ДополнительныеСведения = "-";
		//ТабДок.Вывести(ОбластьДополнительныеСведения);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
		
	КонецЕсли;

   	ОбластьДатаОтбора	= МакетОбработки.ПолучитьОбласть("ДатаОтбора");
	УстановкаПараметровОбласти(ОбластьДатаОтбора);	
	ОбластьДатаОтбора.Параметры.ДатаОтбора = Формат(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб,"ДЛФ=Д") + ?(ЗначениеЗаполнено(час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)),"  час " + час(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб)+ "  мин "+ Минута(СсылкаНаОбъект.ОбщееНаправление.ДатаОтбораПроб),"");
	//ТабДок.Вывести(ОбластьДатаОтбора);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОтбора",ОбластьДатаОтбора));

	Если ЗначениеЗаполнено(СсылкаНаОбъект.ФИОДолжностьОтобр) Тогда
		
		ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
		//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));

		
		ОбластьФИОДолжностьОтобр2 = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр2");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр2);
		ОбластьФИОДолжностьОтобр2.Параметры.ФИОДолжностьОтобр = СсылкаНаОбъект.ФИОДолжностьОтобр;    
		//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр2",ОбластьФИОДолжностьОтобр2));
		
	Иначе
		
		ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
		ОбластьФИОДолжностьОтобр.Параметры.ФИОДолжностьОтобр = "-";
		//ТабДок.Вывести(ОбластьФИОДолжностьОтобр);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
		
	КонецЕсли;
	
	ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование");
	
	ТЗКодПроб.Колонки.Добавить("КодЛаборатории",Новый ОписаниеТипов("Строка"));
	Для каждого СтрТЗКодПроб из ТЗКодПроб Цикл
		
		СтрТЗКодПроб.КодЛаборатории = СтрТЗКодПроб.Лаборатория.КодЛаборатории;
		
	КонецЦикла;	
	ТЗКодПроб.Сортировать("КодЛаборатории +"); 	
	
	КолСтр =  ТЗКодПроб.Количество();	
	НомераРезультатаИсследованияИДаты = "";
	

	
	ДатаНачалоИспытаний    = '00010101';
	ДатаОкончанияИспытаний = '00010101';
	
	Для каждого Стр Из ТЗКодПроб Цикл
		
		ТЗВр = Стр.ЛабИсследование.ПродуктыПоказатели.Выгрузить(,"ДатаИсследования, ДатаРезультата");
		ТЗВр.Свернуть("ДатаИсследования, ДатаРезультата");
		Если  ТЗВр.Количество()   Тогда
			
			Для каждого СтрТЗВр Из ТЗВр Цикл
				
				Если ДатаНачалоИспытаний < СтрТЗВр.ДатаИсследования  и ЗначениеЗаполнено(СтрТЗВр.ДатаИсследования) Тогда
					
					ДатаНачалоИспытаний =  СтрТЗВр.ДатаИсследования;
				//Иначе	
				//	ДатаНачалоИспытаний =  СтрТЗВр.ДатаИсследования; 
				КонецЕсли;	 
				
				ДатаОкончанияИспытаний = ?(ДатаОкончанияИспытаний > СтрТЗВр.ДатаРезультата, ДатаОкончанияИспытаний, СтрТЗВр.ДатаРезультата);
				
			КонецЦикла;    			
			
		КонецЕсли;	 
		
	КонецЦикла;   
	
	ОбластьДатаНачалоИспытаний = МакетОбработки.ПолучитьОбласть("ДатаНачалоИспытаний");
	УстановкаПараметровОбласти(ОбластьДатаНачалоИспытаний);	
	ОбластьДатаНачалоИспытаний.Параметры.ДатаНачалоИспытаний    = Формат(ДатаНачалоИспытаний,"ДФ='dd.MM.yyyy ""г.""'");
	//ТабДок.Вывести(ОбластьДатаНачалоИспытаний);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаНачалоИспытаний",ОбластьДатаНачалоИспытаний));

	
	ОбластьДатаОкончанияИспытаний = МакетОбработки.ПолучитьОбласть("ДатаОкончанияИспытаний");
	УстановкаПараметровОбласти(ОбластьДатаОкончанияИспытаний);	
	ОбластьДатаОкончанияИспытаний.Параметры.ДатаОкончанияИспытаний = Формат(ДатаОкончанияИспытаний, "ДФ='dd.MM.yyyy ""г.""'");
	//ТабДок.Вывести(ОбластьДатаОкончанияИспытаний);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОкончанияИспытаний",ОбластьДатаОкончанияИспытаний));

	
	//ТабДок.Вывести(ОбластьРезультатыИспытаний);
	//МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьРезультатыИспытаний",ОбластьРезультатыИспытаний));
	
	РезультатыИспытанийЗаголовок = МакетОбработки.ПолучитьОбласть("РезультатыИспытанийЗаголовок");
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","РезультатыИспытанийЗаголовок",РезультатыИспытанийЗаголовок));
	             	
	Для Каждого ЭлОбл Из МасВыводимыхОбластей Цикл
		
		Если ТабДок.ПроверитьВывод(ЭлОбл.Область) Тогда
			ТабДок.Вывести(ЭлОбл.Область);
		Иначе
			Если ЭлОбл.ИмяОбласти = "ОбластьДополнительныеСведения2" Тогда
				#Область ДополнительныеСведения2
				
				ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
				УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
				МассивСлов = Новый Массив;
				МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.ДополнительныеСведения);
				щщ = 0; 
				
				ТекстСдобавлением = "";
				ТекстБезДобавления = "";
				
				Для щщ = 0 по МассивСлов.Количество()-1 Цикл
					
					ТекстСдобавлением = ТекстБезДобавления + Строка(МассивСлов[щщ]);
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстСдобавлением;
					
					Если ТабДок.ПроверитьВывод(ОбластьДополнительныеСведения2) = Ложь Тогда 	
						
						Если ТекстБезДобавления = "" Тогда 
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							ТекстСдобавлением  = "";
							ТекстБезДобавления = "";
							щщ = щщ - 1;
							ЭтоПерваяСтраница = Ложь;
							
						Иначе    
							
							ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстБезДобавления;
							ТабДок.Вывести(ОбластьДополнительныеСведения2); 
							
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							щщ = щщ - 1;
							ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
							УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
							ТекстСдобавлением = "";
							ТекстБезДобавления = "";
							ЭтоПерваяСтраница = Ложь;
							
						КонецЕсли;
						
					Иначе 
					
						Если  щщ = МассивСлов.Количество()-1 Тогда
							ТабДок.Вывести(ОбластьДополнительныеСведения2); 			
						КонецЕсли;	
						ТекстБезДобавления = ТекстСдобавлением;
						
					КонецЕсли;
					
				КонецЦикла;
				
				
				#КонецОбласти
				
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ЭлОбл.Область);
				ЭтоПерваяСтраница = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
			
	ОбластьРезультатыИспытаний = МакетОбработки.ПолучитьОбласть("РезультатыИспытаний");
	УстановкаПараметровОбласти(ОбластьРезультатыИспытаний);
	//ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + "  ИЛЦ " + СсылкаНаОбъект._ИМЦ_Организация;

	
	щщ = 0;
	НомераРезультатаИсследованияИДатыДо = "";
	Для каждого Стр из ТЗКодПроб Цикл
		щщ = щщ+1;
		
		орг = Строка(СсылкаНаОбъект._ИМЦ_Организация);
		НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты +"№ " +  Стр.НомерВЖурналеЛаборатории + " от " + Формат(Стр.ЛабИсследование.Дата,"ДЛФ=Д");
		НомераРезультатаИсследованияИДаты = ?(КолСтр = щщ,НомераРезультатаИсследованияИДаты + " ",НомераРезультатаИсследованияИДаты + ", ");
		//НомераРезультатаИсследованияИДаты = ?(щщ = ТЗКодПроб.Количество() ,НомераРезультатаИсследованияИДаты + + "  ИЛЦ " + орг, НомераРезультатаИсследованияИДаты);
		Если щщ = ТЗКодПроб.Количество() Тогда
			НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты + "  ИЛЦ " + орг;		
			
		КонецЕсли;
		
		ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты;
		
		Если ТабДок.ПроверитьВывод(ОбластьРезультатыИспытаний) Тогда
			
			НомераРезультатаИсследованияИДатыДо = НомераРезультатаИсследованияИДаты; 
		Иначе
			
			ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДатыДо;
			ТабДок.Вывести(ОбластьРезультатыИспытаний);
			
			НомераРезультатаИсследованияИДатыДо = "";  
			НомераРезультатаИсследованияИДаты = "";
			НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты +"№ " +  Стр.НомерВЖурналеЛаборатории + " от " + Формат(Стр.ЛабИсследование.Дата,"ДЛФ=Д");
			НомераРезультатаИсследованияИДаты = ?(КолСтр = щщ,НомераРезультатаИсследованияИДаты + " ",НомераРезультатаИсследованияИДаты + ", ");

			
			ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  =  НомераРезультатаИсследованияИДатыДо;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			//ТабДок.Вывести(ОбластьРезультатыИспытаний);
			ЭтоПерваяСтраница = Ложь;

		КонецЕсли;     
		
	КонецЦикла;	
	ТабДок.Вывести(ОбластьРезультатыИспытаний);
	
	

	#КонецОбласти
	
////                         ЛАБОРАТОРНАЯ ЧАСТЬ
//======================================================================================================================	
	
	#Область ЛАБОРАТОРНАЯ_ЧАСТЬ
	
	ТЗКодПроб = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	ТЗКодПроб.Свернуть("Лаборатория,ГУИД,КодПробы,НомерВЖурналеЛаборатории,ЛабИсследование,ДополнительныеСведения,ПорядковыйНомерГлавнойСтроки");
    ТЗКодПроб.Сортировать("ПорядковыйНомерГлавнойСтроки возр, НомерВЖурналеЛаборатории возр");

	
	
	Если ЭтоПерваяСтраница Тогда
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	Иначе
		
		ОбластьПустаяСтрока =  МакетОбработки.ПолучитьОбласть("ПустаяСтрока"); 
		УстановкаПараметровОбласти(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьПустаяСтрока);
	КонецЕсли;

	ОбластьТаблицаШапка   = МакетОбработки.ПолучитьОбласть("ТаблицаШапка"); 
	ОбластьТабЛаборатория = МакетОбработки.ПолучитьОбласть("ТабЛаборатория");
	ОбластьТаблица        = МакетОбработки.ПолучитьОбласть("Таблица");
	
	Показатели = СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить();
	Показатели.Свернуть("Лаборатория,КодПробы,ГУИД,Показатель,Услуга,Примечание,Объем,Результат,ПродуктИсследования,РезультатСтрока, ДополнительныеСведения, Значение,Погрешность,ГигиеническийНорматив,ЛабИсследование");
		
	ТабДок.Вывести(ОбластьТаблицаШапка);
	
	Если Найти(ТЗКодПроб[0].Лаборатория,"Санитарно-гигиеническая") Тогда 
		ОбластьТабЛаборатория.Параметры.Лаборатория = "КОЛИЧЕСТВЕННЫЙ ХИМИЧЕСКИЙ АНАЛИЗ";
	ИначеЕсли Найти(ТЗКодПроб[0].Лаборатория,"бактериолог") Тогда
		ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";
	ИначеЕсли Найти(ТЗКодПроб[0].Лаборатория,"микробиологиче") Тогда
		ОбластьТабЛаборатория.Параметры.Лаборатория = "МИКРОБИОЛОГИЧЕСКИЕ ИСПЫТАНИЯ";   	
	ИначеЕсли  Найти(ТЗКодПроб[0].Лаборатория,"особо опасных") Тогда
		ОбластьТабЛаборатория.Параметры.Лаборатория = "ИССЛЕДОВАНИЯ ОСОБО ОПАСНЫХ ИНФЕКЦИЙ";
	ИначеЕсли Найти(ТЗКодПроб[0].Лаборатория,"ПЦР") Тогда   
		ОбластьТабЛаборатория.Параметры.Лаборатория = "МОЛЕКУЛЯРНО-ГЕНЕТИЧЕСКИЕ ИССЛЕДОВАНИЯ";
	ИначеЕсли Найти(ТЗКодПроб[0].Лаборатория,"радио") Тогда  
		ОбластьТабЛаборатория.Параметры.Лаборатория = "РАДИОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
	ИначеЕсли Найти(ТЗКодПроб[0].Лаборатория,"токс") Тогда  			
		ОбластьТабЛаборатория.Параметры.Лаборатория = "ТОКСИКОЛОГИЧЕСКИЕ ИССЛЕДОВАНИЯ";
	Иначе
		ОбластьТабЛаборатория.Параметры.Лаборатория = ТЗКодПроб[0].Лаборатория; 
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьТабЛаборатория);  

	сч = 1;
	
	Для каждого СтрКод из ТЗКодПроб Цикл 
		
		//                                           
		ПараметрОтбора = новый структура("КодПробы,ГУИД",СтрКод.КодПробы, СТрКод.ГУИД);
		Найденное = Показатели.НайтиСтроки(ПараметрОтбора);
		
		ВремТабДок = Новый ТабличныйДокумент;  
		
		Для каждого СтрНайд из Найденное Цикл
			
			ОбластьТаблица.Параметры.ПорНомер     = сч;
			ОбластьТаблица.Параметры.НомерВЖурналеЛаборатории = СтрКод.НомерВЖурналеЛаборатории;
			ОбластьТаблица.Параметры.Наименование = СтрКод.ДополнительныеСведения;
			ОбластьТаблица.Параметры.Показатель   = СтрНайд.Показатель;
		
			Если ЗначениеЗаполнено(СтрНайд.РезультатСтрока)Тогда
				Результат = ?(ЗначениеЗаполнено(СтрНайд.РезультатСтрока), СтрНайд.РезультатСтрока, Строка(СтрНайд.Значение)); 
			Иначе
				Результат = ?(ЗначениеЗаполнено(СтрНайд.Погрешность), Строка(СтрНайд.Значение) + "±" + Строка(СтрНайд.Погрешность), Строка(СтрНайд.Значение)); 
			КонецЕсли;
			
			ОбластьТаблица.Параметры.Результат = _ИМЦ_СобытияФормСервер.ДобавитьСимволСтепень(Результат);  
			ОбластьТаблица.Параметры.НД        = СтрНайд.Примечание.ПолноеНаименование; 
			                                                                        
			ВремТабДок.Вывести(ОбластьТаблица);			
			
			сч = сч +1;
			
		КонецЦикла;
		
		КолвоОбъедСтрок = Найденное.Количество(); 
		ОбъедОбл_Наименование = ВремТабДок.Область(1  , 12,  1 + КолвоОбъедСтрок -1  ,25);
		ОбъедОбл_Наименование.Объединить();
		
		ТабДок.Вывести(ВремТабДок); 		
				
				
	КонецЦикла;
	
	   
	#КонецОбласти
	
	////                            ЗАКЛЮЧЕНИЕ
	//======================================================================================================================
	
	#Область Заключение
	//
	//Если НаличиеЗаключения Тогда
	//	
	//	ОбластьЗаголовокЗаключение = МакетОбработки.ПолучитьОбласть("ЗаголовокЗаключение");  
	//	УстановкаПараметровОбласти(ОбластьЗаголовокЗаключение);
	//	ТабДок.Вывести(ОбластьЗаголовокЗаключение);
	//	
	//	#Область Заключение
	//	
	//	ОбластьЗаключение = МакетОбработки.ПолучитьОбласть("Заключение");
	//	УстановкаПараметровОбласти(ОбластьЗаключение);	
	//	
	//	МассивСлов = Новый Массив;
	//	МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.Заключение);
	//	щщ = 0; 
	//	
	//	//	ОбластьПустаяСтрока = МакетОбработки.ПолучитьОбласть("ПустаяСтрока");
	//	
	//	Для щщ = 0 по МассивСлов.Количество()-1 Цикл 	          	
	//		
	//		ОбластьЗаключение.Параметры.Заключение = Строка(ОбластьЗаключение.Параметры.Заключение) + Строка(МассивСлов[щщ]);
	//		
	//		Если ТабДок.ПроверитьВывод(ОбластьЗаключение) = Ложь Тогда 			   			
	//			ОбластьЗаключение.Параметры.Заключение = Сред(ОбластьЗаключение.Параметры.Заключение,
	//			1,
	//			СтрДлина(ОбластьЗаключение.Параметры.Заключение) - СтрДлина(МассивСлов[щщ]));
	//			ТабДок.Вывести(ОбластьЗаключение); 
	//			
	//			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//			щщ = щщ - 1;
	//			ОбластьЗаключение = МакетОбработки.ПолучитьОбласть("Заключение");
	//			УстановкаПараметровОбласти(ОбластьЗаключение);	
	//			
	//			//ОбластьЗаключение.Параметры.Заключение = "";
	//			
	//		Иначе    			
	//			
	//			Если  щщ = МассивСлов.Количество()-1   Тогда 				
	//				ТабДок.Вывести(ОбластьЗаключение); 			
	//			КонецЕсли;	
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//	
	//	//ОбластьВтораяСтр.Параметры.Заключение    = СсылкаНаОбъект.Заключение;	
	//	//ОбластьВтораяСтр = МакетОбработки.ПолучитьОбласть("ВтораяСтр");
	//	//ОбластьВтораяСтр.Параметры.Должность       = СсылкаНаОбъект.Ответственный.Сотрудник.Должность;
	//	//ОбластьВтораяСтр.Параметры.Ответственный   = СсылкаНаОбъект.Ответственный.Сотрудник;
	//	//ОбластьВтораяСтр.Параметры.Оформитель      = СсылкаНаОбъект.Оформитель.Сотрудник;
	//	//
	//	//ТабДок.Вывести(ОбластьВтораяСтр);
	//	
	//	#КонецОбласти
	//	
	//	
	//	ОбластьВрачЭксперт = МакетОбработки.ПолучитьОбласть("ВрачЭксперт");
	//	УстановкаПараметровОбласти(ОбластьВрачЭксперт);
	//	
	//	ОбластьВрачЭксперт.Параметры.Должность     = СсылкаНаОбъект.Ответственный.Сотрудник.Должность;
	//	ОбластьВрачЭксперт.Параметры.Ответственный = СсылкаНаОбъект.Ответственный.Сотрудник;
	//	ТабДок.Вывести(ОбластьВрачЭксперт);
	//	
	//КонецЕсли;
	//
	#КонецОбласти
	
	//======================================================================================================================
	
	#Область Оформитель
	
	ОбластьОформитель = МакетОбработки.ПолучитьОбласть("Оформитель");  	
	УстановкаПараметровОбласти(ОбластьОформитель);	
	
	ОбластьОформитель.Параметры.Оформитель    = СсылкаНаОбъект.Оформитель.Сотрудник;   
	
	ТабДок.Вывести(ОбластьОформитель);
	
	#КонецОбласти
	 	
	//                             Нижний колонтитул 	                       
	//======================================================================================================================	
	
	#Область Нижний_колонтитул
	
	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ТекстСправа =
	"                                                                                                                      
	|
	|Протокол № " + СсылкаНаОбъект.Номер+ "  от  " + Формат(СсылкаНаОбъект.Дата,"ДЛф=Д") + "                                     Стр.[&НомерСтраницы] из [&СтраницВсего]";  
	
	//Если НаличиеЗаключения Тогда
	//	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
	//	"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
	//	|                    письменного разрешения Органа инспекции";   		
	//Иначе
	
	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
	"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
	|                    письменного разрешения Испытательной лаборатории (центра)";    		
	//КонецЕсли;	
	
	ТабДок.НижнийКолонтитул.Шрифт    = Новый Шрифт("Times New Roman",10,,Истина);
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.РазмерКолонтитулаСнизу    = 20;
	ТабДок.ПолеСнизу = 30;	
	
	
	
	#КонецОбласти
	
	ТабДок.РазмерСтраницы = "A4";
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция НайдемНашФайл(ИмяФайла)	Экспорт
	Возврат Справочники.Файлы.НайтиПоНаименованию(ИмяФайла);
КонецФункции	

&НаСервереБезКонтекста
Функция ПроверкаСуществованияИмени(ИмяВрем)
	
	СсылкаНаФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяВрем);
	Если СсылкаНаФайл = Справочники.Файлы.ПустаяСсылка() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;		
	КонецЕсли;
	
	
КонецФункции

&НаСервере
Процедура ЗаполнениеСпискаУтверждающих()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подпись,
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Ссылка.Наименование КАК Представление
	                      |ИЗ
	                      |	Справочник._ИМЦ_Подписывающие.ПодписываемыеДокументы КАК _ИМЦ_ПодписывающиеПодписываемыеДокументы
	                      |ГДЕ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подразделение = &Подразделение
	                      |	И _ИМЦ_ПодписывающиеПодписываемыеДокументы.Документ ССЫЛКА Документ._ИМЦ_ЕдиныйПротокол
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Представление");
	
	Запрос.УстановитьПараметр("Подразделение",Объект.СсылкаНаОбъект.Подразделение);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если  Выгрузка.Количество() Тогда
			
		Если  Выгрузка.Количество() = 1   Тогда
			
			Утверждающий = Выгрузка[0].Подпись;
			
		Иначе    
			Элементы.Утверждающий.СписокВыбора.Очистить();
			
			Для каждого Стр Из Выгрузка Цикл
				
				Элементы.Утверждающий.СписокВыбора.Добавить(Стр.Подпись, Стр.Представление);  					
				
			КонецЦикла;
		КонецЕсли;	
				
	КонецЕсли;	 
	

	
КонецПроцедуры

&НаСервере
Процедура УстановкаПараметровОбласти(Область)

	Область.РазмерКолонтитулаСнизу	= 15;
	Область.ПолеСнизу				= 20;
	Область.ПолеСверху				= 10;
	Область.ПолеСлева				= 10;
	Область.ПолеСправа				= 10;
	Область.Автомасштаб				= Истина;
	Область.РазмерСтраницы 			= "Letter";
	Область.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;

КонецПроцедуры

&НаСервере
Функция РазбиениеСтрокиНаСлова(Строка, Разделитель = " ", Сокращать = Ложь)
	
	РезультатФункции = Новый Массив;
	
	СтрокаПоиска = Строка;
	Позиция = Найти(СтрокаПоиска, Разделитель);
	Пока Позиция <> 0 Цикл
		ПодСтрока = Лев(СтрокаПоиска, Позиция);
		
		ПозицияПереводСтроки = Найти(ПодСтрока, Символы.ПС);
		Если ПозицияПереводСтроки <> 0 Тогда
			
			Если ПозицияПереводСтроки <> 1 Тогда
				ДоСимволаПС = Лев(ПодСтрока,ПозицияПереводСтроки-1);
				РезультатФункции.Добавить(ДоСимволаПС);
							
				ПослеСимволаПС = Сред(ПодСтрока,ПозицияПереводСтроки);
				РезультатФункции.Добавить(ПослеСимволаПС);
								
			Иначе
				РезультатФункции.Добавить(ПодСтрока);
			КонецЕсли;
			
		Иначе
			РезультатФункции.Добавить(?(Сокращать, СокрЛП(ПодСтрока), ПодСтрока));

		КонецЕсли; 		
		
		СтрокаПоиска = Сред(СтрокаПоиска, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(СтрокаПоиска, Разделитель);
		
		
	КонецЦикла;
	Если СтрДлина(СтрокаПоиска) > 0 Тогда
		РезультатФункции.Добавить(?(Сокращать, СокрЛП(СтрокаПоиска), СтрокаПоиска));
	КонецЕсли;
	Возврат РезультатФункции;
	
КонецФункции

&НаСервере
Функция МасссивАдресовЛабораторий(Протокол)
	
	АдресаЛабораторий = "";
	
	Если Протокол.Пробы.Количество() Тогда
		
		ТЗ_Лаб = Протокол.Пробы.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	Иначе   
		
		ТЗ_Лаб = Протокол.ИсследованияПоЛабораториям.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	КонецЕсли;	
	
	Для каждого Стр Из ТЗ_Лаб Цикл
		
		Если ЗначениеЗаполнено(Стр.Лаборатория.Примечание) Тогда
			
			Если ЗначениеЗаполнено(АдресаЛабораторий) Тогда
				
				Если Найти(АдресаЛабораторий, Стр.Лаборатория.Примечание) = 0 Тогда
					
					АдресаЛабораторий = АдресаЛабораторий + "
					|" + Стр.Лаборатория.Примечание; 					
					
				КонецЕсли;	
								
			Иначе
			    АдресаЛабораторий = "Адрес осуществления деятельности лаборатории:";
				АдресаЛабораторий = АдресаЛабораторий + "
				|" + Стр.Лаборатория.Примечание;
			
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат	 АдресаЛабораторий;
	
КонецФункции

#КонецОбласти

//======================================================================================================================
