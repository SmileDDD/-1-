//======================================================================================================================

#Область ОбРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СсылкаНаОбъект") Тогда		
		Объект.СсылкаНаОбъект = Параметры.СсылкаНаОбъект;  	
		
		Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.Заключение) Тогда  			
		    НаличиеЗаключения = Истина;                                 			
		КонецЕсли;
		
		ДатаУтверждения = Объект.СсылкаНаОбъект.Дата; 
		ЗаполнениеСпискаУтверждающих();
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект) Тогда 
				
		Элементы.СсылкаНаОбъект.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	
	Если  ЗначениеЗаполнено(Объект.СсылкаНаОбъект)   Тогда
		   			      
	    ЗаполнениеСпискаУтверждающих();
	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область ОБРАБОТЧИКИ_КОМАНД

&НаКлиенте
Процедура Команда1(Команда)
	
	ТабДок = ПечатьТабДок(Объект.СсылкаНаОбъект); 
	
	Если Элементы.СсылкаНаОбъект.Видимость  Тогда		
		ТабДок.Показать(); 		
	Иначе  
		
		_ИМЦ_МодульФайлыПечатьКлиент.СозданиеФайлаПриПечатиИзВнешнихОбработок(ТабДок,Объект.ССылкаНаОбъект, ПрефиксНаименованияФайла, ЭтаФорма);
		ЭтаФорма.Закрыть();           		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

//======================================================================================================================

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

&НаСервере
Функция ПечатьТабДок(СсылкаНаОбъект)
	
	ЭтоПерваяСтраница = Истина;
	МасВыводимыхОбластей = Новый Массив;
	
	ПрефиксНаименованияФайла = "Проткол_" + СсылкаНаОбъект.Номер;
	ТабДок = Новый ТабличныйДокумент;
	УстановкаПараметровОбласти(ТабДок);

	ЭтотОбъект = РеквизитФормыВЗначение("Объект");	
	МакетОбработки = ЭтотОбъект.ПолучитьМакет("Макет");	
	Филиал = "";                                       	
	
	Если  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сызран") Тогда
		Филиал = СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		//ИмяПечФормы	= "";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/7.2";			
		Иначе
			ИмяПечФормы = "1.2.7/8.1";   			
		КонецЕсли;
		ФактАдр		= 	"Фактический адрес: 446001, Самарская область, г. Сызрань, ул Советская 100
					  	|Телефон,Факс: (846) 4-98-61-21 
					  	|ОКПО 76785050, ОГРН 1056316020155 ИНН/КПП 6316098875/ 632502001";
					  
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.512226 от «20» сентября 2013 года 
						|Действителен до  «20» сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Чапаевск") Тогда 
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф-23/08/01-14";
		ФактАдр		= 	"Фактический адрес: 446100, Самарская область,  г. Чапаевск, ул. Ленина, 95
						|Телефон,Факс: 8(846-39) 3-02-56
						|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/633002001";
		
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.512080 от 20 сентября 2013 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Нефтегорск") Тогда 		
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446600, Самарская область, г.Нефтегорск, ул.Нефтяников, д 1
						|Телефон,Факс: (846 70) 2-18-07
						|ОКПО 81848048, ОГРН 1056316020155 ИНН/КПП 6316098875/ 637732005";
		Аттестат	=	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513557 от 20 сентября 2013 года    
						|Действителен до 20 сентября 2018 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Тольятти") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.510862   выдан  «06» ноября  2014 г.   
						|Внесен в реестр аккредитованных лиц: «20»  октября 2014 г.";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Сергиевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "";
		ФактАдр		= 	"Фактический адрес: 446541, Самарская область, Сергиевский район, с. Сергиевск, ул.
						|Н.Краснова, д. 84-А 
						|Телефон,Факс: : 8(84655) 2-44-82 
						|ОКПО 76776370, ОГРН 1056316020155 ИНН/КПП 6316098875/ 638132001";
						
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513603   от 06 июля 2011 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Отрадном") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= "";
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.513608 от 08 июня 2016 года";
		
	ИначеЕсли  Найти(СсылкаНаОбъект._ИМЦ_Организация,"Новокуйбышевск") Тогда
		Филиал		= СсылкаНаОбъект._ИМЦ_Организация.Наименование;
		ИмяПечФормы	= "Ф 1.2.4/9";
		ФактАдр		= 	"Фактический адрес: 446205, Самарская область, г. Новокуйбышевск, 
						|ул. Льва Толстого, 19 а
						|Телефон,Факс: (846)260-37-97 Тел/Факс: 8-846-35-4-00-75   
						|E-mail: gossan1@samtel.ru
						|ОКПО 76781135, ОГРН 1056316020155 ИНН/КПП 6316098875 / 633002002";
						
		Аттестат	= 	"АТТЕСТАТ аккредитации Испытательной лаборатории (центра)
						|№ РОСС RU.0001.510863 от 20 сентября 2013 года
						|Действителен до «20»  сентября 2018 года";

	Иначе	
		Аттестат = "АТТЕСТАТ аккредитации Испытательной лаборатории (центра) 
					|№ РОСС RU.0001.510137, дата включения в реестр 22.06.2015г.";
		Если НаличиеЗаключения Тогда
			ИмяПечФормы = "1.2.7/8.2";			
		Иначе
			ИмяПечФормы = "1.2.7/8.1";   			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ИмяПечФормы) Тогда
		
		//Если НаличиеЗаключения Тогда
		//	ИмяПечФормы = "1.2.7/8.2";			
		//Иначе
			ИмяПечФормы = "1.2.7/8.1";   			
		//КонецЕсли;

	КонецЕсли;

//                        ПЕРВАЯ СТРАНИЦА
//======================================================================================================================	

#Область Первая_Страница


	#Область Шапка_И_Прочее

	ОбластьШапка = МакетОбработки.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ИмяФормы = ИмяПечФормы;
	УстановкаПараметровОбласти(ОбластьШапка);	
	//ТабДок.Вывести(ОбластьШапка);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьШапка",ОбластьШапка));
	
	Если ЗначениеЗаполнено(Филиал) Тогда
		
		Филиал = СтрЗаменить(Филиал,"ФБУЗ", "Федерального бюджетного учреждения здравоохранения");
		Филиал = СтрЗаменить(Филиал,"«", "
										|«");
		
		ОбластьФилиал = МакетОбработки.ПолучитьОбласть("Филиал");
		УстановкаПараметровОбласти(ОбластьФилиал);
		ОбластьФилиал.Параметры.Филиал =  Филиал;
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФилиал",ОбластьФилиал));
		
	КонецЕсли;

	ОбластьЮрАдресШапка = МакетОбработки.ПолучитьОбласть("ЮрАдресШапка");
	УстановкаПараметровОбласти(ОбластьЮрАдресШапка);
	//ТабДок.Вывести(ОбластьЮрАдресШапка);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресШапка", ОбластьЮрАдресШапка));
	
	Если ЗначениеЗаполнено(Филиал) Тогда
	
		ОбластьФактическийАдресФилиала = МакетОбработки.ПолучитьОбласть("ФактическийАдресФилиала");
		УстановкаПараметровОбласти(ОбластьФактическийАдресФилиала);
		ОбластьФактическийАдресФилиала.Параметры.ФактическийАдресФилиала = ФактАдр;
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФактическийАдресФилиала",ОбластьФактическийАдресФилиала));
		
	КонецЕсли;

	
	ОбластьАттестат = МакетОбработки.ПолучитьОбласть("Аттестат");
	УстановкаПараметровОбласти(ОбластьАттестат);
	ОбластьАттестат.Параметры.Аттестат = Аттестат;
	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьАттестат",ОбластьАттестат));


	ОбластьУтверждение = МакетОбработки.ПолучитьОбласть("Утверждение");
	УстановкаПараметровОбласти(ОбластьУтверждение);
	
	АдресаЛабораторий = МасссивАдресовЛабораторий(СсылкаНаОбъект);		
	ОбластьУтверждение.Параметры.АдресаЛабораторий = АдресаЛабораторий;

	ОбластьУтверждение.Параметры.УтверждающийПротокол	= СтрЗаменить(Утверждающий,"^p",Символы.ПС);
	ОбластьУтверждение.Параметры.ДатаУтверждения		= Формат(ДатаУтверждения,"ДФ='«дд» ММММ гггг ""г.""'; ДП='«   » _______________201  г.'");
	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьУтверждение",ОбластьУтверждение));

	ОбластьНомерДатаПротокола							= МакетОбработки.ПолучитьОбласть("НомерДатаПротокола");
	УстановкаПараметровОбласти(ОбластьНомерДатаПротокола);	
	ОбластьНомерДатаПротокола.Параметры.НомерДокумента	= СсылкаНаОбъект.Номер;  
	ОбластьНомерДатаПротокола.Параметры.Дата			= Формат(СсылкаНаОбъект.Дата,"ДЛф=Д"); 
	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНомерДатаПротокола",ОбластьНомерДатаПротокола));
	
	#КонецОбласти
	
	// не понятно чем заполнять
	#Область НаименованиеФакторов  
	
	ОбластьНаименованиеФакторов	= МакетОбработки.ПолучитьОбласть("НаименованиеФакторов");
	УстановкаПараметровОбласти(ОбластьНаименованиеФакторов);
	
	ТЗФизФакторы = Новый ТаблицаЗначений;
	ТЗФизФакторы.Колонки.Добавить("Фактор", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	
	Для Каждого СтрИссл Из СсылкаНаОбъект.Пробы  Цикл
		
		Если ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Вибрации") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "вибрация";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_ИсследованиеМикроклиматаПроизводсвенныхПомещений") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "параметры микроклимата";	
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_ИсследованиеМикроклиматаОбщественныхИЖилыхПомещений") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "параметры микроклимата";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Шума_ПроизводственныхПомещений") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "шум";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Шума_ЖилыхОбщественныхЗданий") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "шум";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Освещенности_ЖилыхОбщественныхПомещений") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "освещенность";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Освещенности_ПВЭМ") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "освещенность";
		//ИначеЕсли Тип(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_Воздуха") Тогда
		//	НСТРФФ = ТЗФизФакторы.Добавить();
		//	НСТРФФ.Фактор = "";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_ЭМИ_50_ГЦ") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "ЭМИ";
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_ЭМИ_ПВЭМ") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "ЭМИ";	
		ИначеЕсли ТипЗнч(СтрИссл.Исследование) = Тип("ДокументСсылка._ИМЦ_Исследование_ЭМИ_БС") Тогда
			НСТРФФ = ТЗФизФакторы.Добавить();
			НСТРФФ.Фактор = "ЭМИ";		
		КонецЕсли;
		
	КонецЦикла;
	
	ТЗФизФакторы.Свернуть("Фактор");
	
	факторыСтрока = "";
	Для Каждого Стрфф Из ТЗФизФакторы Цикл
		Если ЗначениеЗаполнено(факторыСтрока) Тогда
			факторыСтрока = факторыСтрока + ", " + Стрфф.Фактор;
		Иначе
			факторыСтрока = Стрфф.Фактор;
		КонецЕсли;
		  
	КонецЦикла;
	
	ОбластьНаименованиеФакторов.Параметры.НаименовениеФакторов	= факторыСтрока;  
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНаименованиеФакторов",ОбластьНаименованиеФакторов));
	
	#КонецОбласти
	
	
	#Область Заказчик
	
	ОбластьЗаказчик	= МакетОбработки.ПолучитьОбласть("Заказчик");
	УстановкаПараметровОбласти(ОбластьЗаказчик);
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.КонтрагентСтрока) Тогда 			
		ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.КонтрагентСтрока;  		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект.Контрагент) = Тип("СправочникСсылка._ИМЦ_Контрагенты")  Тогда
		
		Если  ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора) ТОгда
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.НаименованиеДляДоговора;
		ИначеЕсли    ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.ПолноеНаименование)  Тогда 
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;
		Иначе
			ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.Наименование;  
		КонецЕсли;
		
	Иначе
		
		ОбластьЗаказчик.Параметры.Контрагент = СсылкаНаОбъект.Контрагент.ПолноеНаименование;    
		
	КонецЕсли;
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЗаказчик",ОбластьЗаказчик));
	
	ОбластьЮрАдресЗаказчика = МакетОбработки.ПолучитьОбласть("ЮрАдресЗаказчика");
	УстановкаПараметровОбласти(ОбластьЮрАдресЗаказчика);	
	ОбластьЮрАдресЗаказчика.Параметры.Адрес = СсылкаНаОбъект.ЮрАдресЗаявителя; 
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьЮрАдресЗаказчика",ОбластьЮрАдресЗаказчика));
	
	
	#КонецОбласти
	
	#Область НаименованиеОбъекта
	
	ОбластьНаименованиеОбъекта							= МакетОбработки.ПолучитьОбласть("НаименованиеОбъекта");
	УстановкаПараметровОбласти(ОбластьНаименованиеОбъекта);	
	ОбластьНаименованиеОбъекта.Параметры.НаименованиеОбъекта= СсылкаНаОбъект.ОбщееНаправление.СведенияДляВыезда;  
	
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьНаименованиеОбъекта",ОбластьНаименованиеОбъекта));
	
	#КонецОбласти
	
	#Область ДополнительныеСведения
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДополнительныеСведения) Тогда
		
		ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
		//ТабДок.Вывести(ОбластьДополнительныеСведения);  
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
		
		ОбластьДополнительныеСведения2	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);
		ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = СсылкаНаОбъект.ДополнительныеСведения;
		//ТабДок.Вывести(ОбластьДополнительныеСведения2);  	
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения2",ОбластьДополнительныеСведения2));

		
	Иначе
		
		ОбластьДополнительныеСведения	= МакетОбработки.ПолучитьОбласть("ДополнительныеСведения");
		УстановкаПараметровОбласти(ОбластьДополнительныеСведения);
		ОбластьДополнительныеСведения.Параметры.ДополнительныеСведения = "-";
		//ТабДок.Вывести(ОбластьДополнительныеСведения);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДополнительныеСведения",ОбластьДополнительныеСведения));
		
	КонецЕсли;

	#КонецОбласти
	
	#Область ДатаОбтора
	
	ОбластьДатаОтбора	= МакетОбработки.ПолучитьОбласть("ДатаОтбора");
	УстановкаПараметровОбласти(ОбластьДатаОтбора);	 	
	
	ДатыИсследования = "";
	Для Каждого Стр Из Объект.СсылкаНаОбъект.Пробы Цикл
		Если ЗначениеЗаполнено(Стр.Исследование.ДатаИВремяИсследования) Тогда
			Если ЗначениеЗаполнено(Час(Стр.Исследование.ДатаИВремяИсследования)) 
				Или ЗначениеЗаполнено(Минута(Стр.Исследование.ДатаИВремяИсследования)) Тогда
				
				ДатыИсследования = ?(ЗначениеЗаполнено(ДатыИсследования), 
					ДатыИсследования + ", " + Формат(Стр.Исследование.ДатаИВремяИсследования, "ДФ='dd.MM.yyyy ""г."" Ч ""ч"" мм ""мин""'"),
					Формат(Стр.Исследование.ДатаИВремяИсследования, "ДФ='dd.MM.yyyy ""г."" Ч ""ч"" мм ""мин""'"));	
			Иначе
				ДатыИсследования = ?(ЗначениеЗаполнено(ДатыИсследования), 
					ДатыИсследования + ", " + Формат(Стр.Исследование.ДатаИВремяИсследования, "ДФ='dd.MM.yyyy ""г.""'"),
					Формат(Стр.Исследование.ДатаИВремяИсследования, "ДФ='dd.MM.yyyy ""г.""'"));	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ОбластьДатаОтбора.Параметры.ДатаОтбора = ДатыИсследования;
	//ТабДок.Вывести(ОбластьДатаОтбора);
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьДатаОтбора",ОбластьДатаОтбора));
	
	#КонецОбласти
	
	#Область ОтобравшийПробу
	
	ФИОДолжностьОтобр ="";
	
	Для Каждого СтрИссл Из СсылкаНаОбъект.Пробы Цикл
		
		Если СтрИссл.Исследование.Метаданные().ТабличныеЧасти.Найти("Подписывающие") <> Неопределено Тогда
			
			Для Каждого СтрПодп  Из СтрИссл.Исследование.Подписывающие Цикл
				ФИОДолжностьОтобр = ?(ЗначениеЗаполнено(ФИОДолжностьОтобр)
					, ФИОДолжностьОтобр + ", " + Строка(СтрПодп.Сотрудник) + " " + Строка(СтрПодп.Сотрудник.Должность)
					, Строка(СтрПодп.Сотрудник) +  " " + Строка(СтрПодп.Сотрудник.Должность));
			КонецЦикла;
						
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрИссл.Исследование.Ответственный.Сотрудник) Тогда
			ФИОДолжностьОтобр = ?(ЗначениеЗаполнено(ФИОДолжностьОтобр)
				,ФИОДолжностьОтобр + ", " + Строка(СтрИссл.Исследование.Ответственный.Сотрудник) + " " + Строка(СтрИссл.Исследование.Ответственный.Сотрудник.Должность)
				,СТрока(СтрИссл.Исследование.Ответственный.Сотрудник) +  " " + Строка(СтрИссл.Исследование.Ответственный.Сотрудник.Должность));
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	Если ЗначениеЗаполнено(ФИОДолжностьОтобр) Тогда
		
		ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
		
		
		ОбластьФИОДолжностьОтобр2 = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр2");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр2);
		ОбластьФИОДолжностьОтобр2.Параметры.ФИОДолжностьОтобр = ФИОДолжностьОтобр;    
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр2",ОбластьФИОДолжностьОтобр2));
		
	Иначе
		
		ОбластьФИОДолжностьОтобр = МакетОбработки.ПолучитьОбласть("ФИОДолжностьОтобр");
		УстановкаПараметровОбласти(ОбластьФИОДолжностьОтобр);
		МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьФИОДолжностьОтобр",ОбластьФИОДолжностьОтобр));
		
	КонецЕсли;
	           	
	#КонецОбласти
	
	#Область НомераРезультатов
	ОбластьРезультатыИспытаний =  МакетОбработки.ПолучитьОбласть("РезультатыИспытаний"); 
	
	ИЛЦ = Справочники.Организации.ПустаяСсылка();
	НомераРезультатаИсследованияИДаты = "";
	Для Каждого Стр Из Объект.СсылкаНаОбъект.Пробы Цикл
		
		Если ЗначениеЗаполнено(ИЛЦ) и Стр.Исследование <> ИЛЦ Тогда
			НомераРезультатаИсследованияИДаты = НомераРезультатаИсследованияИДаты + Стр.Исследование._ИМЦ_Организация;			
		КонецЕсли;
		НомераРезультатаИсследованияИДаты = Стр.Исследование.НомерВЖурнале + " от " + Формат(Стр.Исследование.ДатаРезультата,"ДЛФ=Д")+ ",  ";		
		ИЛЦ = Стр.Исследование._ИМЦ_Организация;
	КонецЦикла;
	
	ОбластьРезультатыИспытаний.Параметры.НомераРезультатаИсследованияИДаты  = НомераРезультатаИсследованияИДаты + " ИЛЦ " +ИЛЦ;
	МасВыводимыхОбластей.Добавить(Новый Структура("ИмяОбласти, Область","ОбластьРезультатыИспытаний",ОбластьРезультатыИспытаний));
	
	#КонецОбласти
	
	Для Каждого ЭлОбл Из МасВыводимыхОбластей Цикл
		
		Если ТабДок.ПроверитьВывод(ЭлОбл.Область) Тогда
			ТабДок.Вывести(ЭлОбл.Область);
		Иначе
			Если ЭлОбл.ИмяОбласти = "ОбластьДополнительныеСведения2" Тогда
				#Область ДополнительныеСведения2
				
				ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
				УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
				МассивСлов = Новый Массив;
				МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.ДополнительныеСведения);
				щщ = 0; 
				
				ТекстСдобавлением = "";
				ТекстБезДобавления = "";
				
				Для щщ = 0 по МассивСлов.Количество()-1 Цикл
					
					ТекстСдобавлением = ТекстБезДобавления + Строка(МассивСлов[щщ]);
					ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстСдобавлением;
					
					Если ТабДок.ПроверитьВывод(ОбластьДополнительныеСведения2) = Ложь Тогда 	
						
						Если ТекстБезДобавления = "" Тогда 
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							ТекстСдобавлением  = "";
							ТекстБезДобавления = "";
							щщ = щщ - 1;
							ЭтоПерваяСтраница = Ложь;
							
						Иначе    
							
							ОбластьДополнительныеСведения2.Параметры.ДополнительныеСведения = ТекстБезДобавления;
							ТабДок.Вывести(ОбластьДополнительныеСведения2); 
							
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							щщ = щщ - 1;
							ОбластьДополнительныеСведения2 = МакетОбработки.ПолучитьОбласть("ДополнительныеСведения2");
							УстановкаПараметровОбласти(ОбластьДополнительныеСведения2);	
							ТекстСдобавлением = "";
							ТекстБезДобавления = "";
							ЭтоПерваяСтраница = Ложь;
							
						КонецЕсли;
						
					Иначе 
						
						Если  щщ = МассивСлов.Количество()-1 Тогда
							ТабДок.Вывести(ОбластьДополнительныеСведения2); 			
						КонецЕсли;	
						ТекстБезДобавления = ТекстСдобавлением;
						
					КонецЕсли;
					
				КонецЦикла;
				
				
				#КонецОбласти
				
			Иначе	
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ЭлОбл.Область);
				ЭтоПерваяСтраница = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	#КонецОбласти
		
//                        ЛАБОРАТОРНАЯ ЧАСТЬ
//======================================================================================================================	
	
	#Область ЛАБОРАТОРНАЯ_ЧАСТЬ
	
	Если ЭтоПерваяСтраница Тогда
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	Иначе
		
		ОбластьПустаяСтрока =  МакетОбработки.ПолучитьОбласть("ПустаяСтрока"); 
		УстановкаПараметровОбласти(ОбластьПустаяСтрока);
		ТабДок.Вывести(ОбластьПустаяСтрока);
	КонецЕсли;
	
	ОтветСТруктура =  ФормированиеТабличногоДокумента(ТабДок);

	КолвоТаб = ОтветСТруктура.Количество();
	
	//Сообщить(" кол структ " + КолвоТаб);
	Для щщ = 0 По КолвоТаб-1 Цикл
		ТабДок.Вывести(ОтветСТруктура["табдок" + щщ]);
	КонецЦикла;

	#КонецОбласти

	#Область Заключение
	
	//Если НаличиеЗаключения Тогда
	//	
	//	ОбластьЗаголовокЗаключение = МакетОбработки.ПолучитьОбласть("ЗаголовокЗаключение");  	
	//	ТабДок.Вывести(ОбластьЗаголовокЗаключение);
	//	
	//	#Область Заключение
	//	
	//	ОбластьЗаключение = МакетОбработки.ПолучитьОбласть("Заключение");
	//	УстановкаПараметровОбласти(ОбластьЗаключение);	
	//	
	//	МассивСлов = Новый Массив;
	//	МассивСлов = РазбиениеСтрокиНаСлова(СсылкаНаОбъект.Заключение);
	//	щщ = 0; 
	//	
	//	//	ОбластьПустаяСтрока = МакетОбработки.ПолучитьОбласть("ПустаяСтрока");
	//	
	//	Для щщ = 0 по МассивСлов.Количество()-1 Цикл 	          	
	//		
	//		ОбластьЗаключение.Параметры.Заключение = Строка(ОбластьЗаключение.Параметры.Заключение) + Строка(МассивСлов[щщ]);
	//		
	//		Если ТабДок.ПроверитьВывод(ОбластьЗаключение) = Ложь Тогда 			   			
	//			ОбластьЗаключение.Параметры.Заключение = Сред(ОбластьЗаключение.Параметры.Заключение,
	//			1,
	//			СтрДлина(ОбластьЗаключение.Параметры.Заключение) - СтрДлина(МассивСлов[щщ]));
	//			ТабДок.Вывести(ОбластьЗаключение); 
	//			
	//			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//			щщ = щщ - 1;
	//			ОбластьЗаключение = МакетОбработки.ПолучитьОбласть("Заключение");
	//			УстановкаПараметровОбласти(ОбластьЗаключение);	
	//			
	//			//ОбластьЗаключение.Параметры.Заключение = "";
	//			
	//		Иначе    			
	//			
	//			Если  щщ = МассивСлов.Количество()-1   Тогда 				
	//				ТабДок.Вывести(ОбластьЗаключение); 			
	//			КонецЕсли;	
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//	#КонецОбласти
	//	
	//	
	//	ОбластьВрачЭксперт = МакетОбработки.ПолучитьОбласть("ВрачЭксперт");
	//	УстановкаПараметровОбласти(ОбластьВрачЭксперт);
	//	
	//	ОбластьВрачЭксперт.Параметры.Должность     = СсылкаНаОбъект.Ответственный.Сотрудник.Должность;
	//	ОбластьВрачЭксперт.Параметры.Ответственный = СсылкаНаОбъект.Ответственный.Сотрудник;
	//	ТабДок.Вывести(ОбластьВрачЭксперт);
	//	
	//КонецЕсли;
	#КонецОбласти
	
	#Область Оформитель
	
	ОбластьОформитель = МакетОбработки.ПолучитьОбласть("Оформитель");  	
	УстановкаПараметровОбласти(ОбластьОформитель);	
	
	ОбластьОформитель.Параметры.Оформитель    = СсылкаНаОбъект.Оформитель.Сотрудник;   
	
	ТабДок.Вывести(ОбластьОформитель);
	
	#КонецОбласти

	#Область Нижний_Колонтитул 
	
	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ТекстСправа ="
	|                                                                                                                  
	|Протокол № " + СсылкаНаОбъект.Номер+ "  от  " + Формат(СсылкаНаОбъект.Дата,"ДЛф=Д") + "                                 Стр.[&НомерСтраницы] из [&СтраницВсего]";  
                		
	ТабДок.НижнийКолонтитул.ТекстВЦентре = 
		"Протокол (результаты) лабораторных испытаний не могут быть воспризведены полностью или частично без 
		|                    письменного разрешения Испытательной лаборатории (центра)";   		
	
	ТабДок.НижнийКолонтитул.Шрифт = Новый Шрифт("Times New Roman",10,,Истина);
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	ТабДок.РазмерКолонтитулаСнизу = 15;
	ТабДок.ПолеСнизу              = 20;
	
	#КонецОбласти
	
	ТабДок.РазмерСтраницы = "A4";   // непонятно почему, но работает именно так , сначала проверяем устанавливаем  Letter а потом меняем на A4
									// иначе не корректно работает проверить вывод.
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция НайдемНашФайл(ИмяФайла)	Экспорт
	Возврат Справочники.Файлы.НайтиПоНаименованию(ИмяФайла);
КонецФункции	

&НаСервереБезКонтекста
Функция ПроверкаСуществованияИмени(ИмяВрем)
	
	СсылкаНаФайл = Справочники.Файлы.НайтиПоНаименованию(ИмяВрем);
	Если СсылкаНаФайл = Справочники.Файлы.ПустаяСсылка() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;		
	КонецЕсли;
	
	
КонецФункции

&НаСервере
Процедура ЗаполнениеСпискаУтверждающих()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подпись,
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Ссылка.Наименование КАК Представление
	                      |ИЗ
	                      |	Справочник._ИМЦ_Подписывающие.ПодписываемыеДокументы КАК _ИМЦ_ПодписывающиеПодписываемыеДокументы
	                      |ГДЕ
	                      |	_ИМЦ_ПодписывающиеПодписываемыеДокументы.Подразделение = &Подразделение
	                      |	И _ИМЦ_ПодписывающиеПодписываемыеДокументы.Документ ССЫЛКА Документ._ИМЦ_ЕдиныйПротокол
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Представление");
	
	Запрос.УстановитьПараметр("Подразделение",Объект.СсылкаНаОбъект.Подразделение);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если  Выгрузка.Количество() Тогда
			
		Если  Выгрузка.Количество() = 1   Тогда
			
			Утверждающий = Выгрузка[0].Подпись;
			
		Иначе    
			Элементы.Утверждающий.СписокВыбора.Очистить();
			
			Для каждого Стр Из Выгрузка Цикл
				
				Элементы.Утверждающий.СписокВыбора.Добавить(Стр.Подпись, Стр.Представление);  					
				
			КонецЦикла;
		КонецЕсли;	
				
	КонецЕсли;	 
	

	
КонецПроцедуры

&НаСервере
Функция РазбиениеСтрокиНаСлова(Строка, Разделитель = " ", Сокращать = Ложь)
	
	РезультатФункции = Новый Массив;
	
	СтрокаПоиска = Строка;
	Позиция = Найти(СтрокаПоиска, Разделитель);
	Пока Позиция <> 0 Цикл
		ПодСтрока = Лев(СтрокаПоиска, Позиция);
		
		ПозицияПереводСтроки = Найти(ПодСтрока, Символы.ПС);
		Если ПозицияПереводСтроки <> 0 Тогда
			
			Если ПозицияПереводСтроки <> 1 Тогда
				ДоСимволаПС = Лев(ПодСтрока,ПозицияПереводСтроки-1);
				РезультатФункции.Добавить(ДоСимволаПС);
							
				ПослеСимволаПС = Сред(ПодСтрока,ПозицияПереводСтроки);
				РезультатФункции.Добавить(ПослеСимволаПС);
								
			Иначе
				РезультатФункции.Добавить(ПодСтрока);
			КонецЕсли;
			
		Иначе
			РезультатФункции.Добавить(?(Сокращать, СокрЛП(ПодСтрока), ПодСтрока));

		КонецЕсли; 		
		
		СтрокаПоиска = Сред(СтрокаПоиска, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(СтрокаПоиска, Разделитель);
		
		
	КонецЦикла;
	Если СтрДлина(СтрокаПоиска) > 0 Тогда
		РезультатФункции.Добавить(?(Сокращать, СокрЛП(СтрокаПоиска), СтрокаПоиска));
	КонецЕсли;
	Возврат РезультатФункции;
	
КонецФункции

&НаСервере
Процедура УстановкаПараметровОбласти(Область)

	Область.РазмерКолонтитулаСнизу	= 10;
	Область.ПолеСнизу				= 15;
	Область.ПолеСверху				= 10;
	Область.ПолеСлева				= 10;
	Область.ПолеСправа				= 10;
	Область.Автомасштаб				= Истина;
	Область.РазмерСтраницы 			= "Letter";
	Область.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;

КонецПроцедуры

&НаСервере
Функция ФормированиеТабличногоДокумента(ТабДок)
	
	СписокИсследований = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.СсылкаНаОбъект.ИсследованияПоЛабораториям.Количество()) Тогда
		ТЗ_ВремИсследования = Объект.СсылкаНаОбъект.ИсследованияПоЛабораториям.Выгрузить(,"ЛабИсследование");
		ТЗ_ВремИсследования.Свернуть("ЛабИсследование");
		СписокИсследований.ЗагрузитьЗначения(ТЗ_ВремИсследования.ВыгрузитьКолонку("ЛабИсследование"));		
	Иначе
		СписокИсследований.ЗагрузитьЗначения(Объект.СсылкаНаОбъект.Пробы.ВыгрузитьКолонку("Исследование"));
	КонецЕсли;
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	_ИМЦ_Исследование_ПечатнаяФорма.ВнешняяОбработка,
	|	_ИМЦ_Исследование_ПечатнаяФорма.Документ
	|ИЗ
	|	РегистрСведений._ИМЦ_Исследование_ПечатнаяФорма КАК _ИМЦ_Исследование_ПечатнаяФорма
	|ГДЕ
	|	_ИМЦ_Исследование_ПечатнаяФорма.Документ В(&СписокИсследований)";
	
	Запрос.УстановитьПараметр("СписокИсследований", СписокИсследований);
	
	Результат =  Запрос.Выполнить().Выгрузить();	
	сч = 0;
	
	мСтруктура = Новый СТруктура();
	
	сч=сч+1;
	колОбластей = 0;
	
	Для каждого Стр Из Результат Цикл	
			
		Получили = _ИМЦ_СобытияФормСервер.ПолучитьДанныеВнешнейОбработкиОтчета(Стр.ВнешняяОбработка.УникальныйИдентификатор()); 
			
		ИмяВремФайла = ПолучитьИмяВременногоФайла();		                
		Получили.ДвДанные.Записать(ИмяВремФайла); 
		            		
		ВнешОбработка = ВнешниеОбработки.Создать(ИмяВремФайла, Ложь);
		ПолучСтруктура = ВнешОбработка.ФормированиеТабличногоДокумента_Протокола(Стр.Документ, Новый ТабличныйДокумент); 
		
		Если ПолучСтруктура.Количество() Тогда
			
			Для щщ = 0 По ПолучСтруктура.Количество()-1 Цикл   				
				
				мСтруктура.Вставить("ТабДок" + колОбластей, ПолучСтруктура["табдок" + Строка(щщ + 1)]);
				колОбластей = колОбластей+1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат мСтруктура;
	
КонецФункции

&НаСервере
Функция МасссивАдресовЛабораторий(Протокол)
	
	АдресаЛабораторий = "";
	
	Если Протокол.Пробы.Количество() Тогда
		
		ТЗ_Лаб = Протокол.Пробы.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	Иначе   
		
		ТЗ_Лаб = Протокол.ИсследованияПоЛабораториям.Выгрузить(,"Лаборатория");
		ТЗ_Лаб.Свернуть("Лаборатория");
		
	КонецЕсли;	
	
	Для каждого Стр Из ТЗ_Лаб Цикл
		
		Если ЗначениеЗаполнено(Стр.Лаборатория.Примечание) Тогда
			
			Если ЗначениеЗаполнено(АдресаЛабораторий) Тогда
				
				Если Найти(АдресаЛабораторий, Стр.Лаборатория.Примечание) = 0 Тогда
					
					АдресаЛабораторий = АдресаЛабораторий + "
					|" + Стр.Лаборатория.Примечание; 					
					
				КонецЕсли;	
								
			Иначе
			    АдресаЛабораторий = "Адрес осуществления деятельности лаборатории:";
				АдресаЛабораторий = АдресаЛабораторий + "
				|" + Стр.Лаборатория.Примечание;
			
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат	 АдресаЛабораторий;
	
КонецФункции


#КонецОбласти

//======================================================================================================================

